ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.rs232_logdata,"ax",%progbits
  18              		.align	1
  19              		.global	rs232_logdata
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	rs232_logdata:
  25              	.LVL0:
  26              	.LFB68:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   SIM   ------> UART1 115200
  18:Core/Src/main.c ****   RS232 ------> UART2 9600
  19:Core/Src/main.c ****   GNSS  ------> UART4 9600
  20:Core/Src/main.c ****   DEBUG ------> UART5 115200
  21:Core/Src/main.c **** 
  22:Core/Src/main.c ****   RFID  ------> SPI1  18Mb/s
  23:Core/Src/main.c ****   SDCAD ------> SPI3
  24:Core/Src/main.c ****   FLASH ------> SPI2
  25:Core/Src/main.c **** 
  26:Core/Src/main.c ****   SENSOR -----> TIM1
  27:Core/Src/main.c ****   RFID      --> TIM2
  28:Core/Src/main.c ****   Task     ---> TIM3
  29:Core/Src/main.c ****   */
  30:Core/Src/main.c **** /* USER CODE END Header */
  31:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 2


  32:Core/Src/main.c **** #include "main.h"
  33:Core/Src/main.c **** #include "adc.h"
  34:Core/Src/main.c **** #include "fatfs.h"
  35:Core/Src/main.c **** #include "i2c.h"
  36:Core/Src/main.c **** #include "rtc.h"
  37:Core/Src/main.c **** #include "spi.h"
  38:Core/Src/main.c **** #include "tim.h"
  39:Core/Src/main.c **** #include "usart.h"
  40:Core/Src/main.c **** #include "gpio.h"
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  43:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  44:Core/Src/main.c **** #include "sensors.h"
  45:Core/Src/main.c **** #include "rc522.h"
  46:Core/Src/main.c **** #include "debug.h"
  47:Core/Src/main.c **** #include "sim4g_lte.h"
  48:Core/Src/main.c **** #include "gnss.h"
  49:Core/Src/main.c **** #include "fatfs_sd.h"
  50:Core/Src/main.c **** #include "mqtt.h"
  51:Core/Src/main.c **** #include "flash.h"
  52:Core/Src/main.c **** #include "ssd1306.h"
  53:Core/Src/main.c **** #include "bitmap.h"
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** #include <stdio.h>
  56:Core/Src/main.c **** #include <stdint.h>
  57:Core/Src/main.c **** #include <string.h>
  58:Core/Src/main.c **** /* USER CODE END Includes */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  61:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** /* USER CODE END PTD */
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  66:Core/Src/main.c **** /* USER CODE BEGIN PD */
  67:Core/Src/main.c **** 
  68:Core/Src/main.c **** /* USER CODE END PD */
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  71:Core/Src/main.c **** /* USER CODE BEGIN PM */
  72:Core/Src/main.c **** 
  73:Core/Src/main.c **** /* USER CODE END PM */
  74:Core/Src/main.c **** 
  75:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  76:Core/Src/main.c **** 
  77:Core/Src/main.c **** /* USER CODE BEGIN PV */
  78:Core/Src/main.c **** /************************************RFID*********************/
  79:Core/Src/main.c **** uint8_t CardID[5];
  80:Core/Src/main.c **** char szBuff[20];
  81:Core/Src/main.c **** volatile bool waiting4LogOut = false;
  82:Core/Src/main.c **** volatile bool Logout = false;
  83:Core/Src/main.c **** enum check
  84:Core/Src/main.c **** {
  85:Core/Src/main.c ****   CHANGE,
  86:Core/Src/main.c ****   NOT_CHANGE
  87:Core/Src/main.c **** };
  88:Core/Src/main.c **** 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 3


  89:Core/Src/main.c **** volatile int npn_flag_check = NOT_CHANGE;
  90:Core/Src/main.c **** int npn_count = 0;
  91:Core/Src/main.c **** 
  92:Core/Src/main.c **** enum State
  93:Core/Src/main.c **** {
  94:Core/Src/main.c ****   Stop,
  95:Core/Src/main.c ****   Move
  96:Core/Src/main.c **** };
  97:Core/Src/main.c **** 
  98:Core/Src/main.c **** int Vehical_State;
  99:Core/Src/main.c **** 
 100:Core/Src/main.c **** float current_time, last_time;
 101:Core/Src/main.c **** float Vehical_veloc;
 102:Core/Src/main.c **** 
 103:Core/Src/main.c **** /************************************RTC************************/
 104:Core/Src/main.c **** RTC_TimeTypeDef current_sTime = {0};
 105:Core/Src/main.c **** RTC_DateTypeDef current_sDate = {0};
 106:Core/Src/main.c **** RTC_TimeTypeDef last_sTime = {0};
 107:Core/Src/main.c **** RTC_DateTypeDef last_sDate = {0};
 108:Core/Src/main.c **** RTC_AlarmTypeDef sAlarm = {0};
 109:Core/Src/main.c **** uint8_t sencond = 0;
 110:Core/Src/main.c **** uint8_t minute = 0;
 111:Core/Src/main.c **** uint8_t hour = 0;
 112:Core/Src/main.c **** uint8_t date = 0;
 113:Core/Src/main.c **** uint8_t day = 0;
 114:Core/Src/main.c **** uint8_t month = 0;
 115:Core/Src/main.c **** uint8_t year = 0;
 116:Core/Src/main.c **** char time_buff[20];
 117:Core/Src/main.c **** char date_buff[20];
 118:Core/Src/main.c **** volatile int check = 0;
 119:Core/Src/main.c **** 
 120:Core/Src/main.c **** uint16_t totalMinute_OperateTime;
 121:Core/Src/main.c **** int time_hour;
 122:Core/Src/main.c **** int time_minute;
 123:Core/Src/main.c **** char totalMinute_OperateTime_buff[30] = {0};
 124:Core/Src/main.c **** 
 125:Core/Src/main.c **** int numCheck_time = 0;
 126:Core/Src/main.c **** /*********************************** GPS************************/
 127:Core/Src/main.c **** #define GPS 0
 128:Core/Src/main.c **** char *GPSResponse;
 129:Core/Src/main.c **** char latData[15] = {0};
 130:Core/Src/main.c **** char longData[15] = {0};
 131:Core/Src/main.c **** char simMessage[200] = {0};
 132:Core/Src/main.c **** 
 133:Core/Src/main.c **** char l70Data1;
 134:Core/Src/main.c **** char gnss_str[100] = {0};
 135:Core/Src/main.c **** extern l70Data_t l70DataAfterHadler;
 136:Core/Src/main.c **** 
 137:Core/Src/main.c **** /************************************* SDCARD*******************/
 138:Core/Src/main.c **** #define SDCard 0
 139:Core/Src/main.c **** FATFS fs;                      // file system
 140:Core/Src/main.c **** FIL fil;                       // file
 141:Core/Src/main.c **** FRESULT fresult;               // store the result
 142:Core/Src/main.c **** char SD_buffer_w[1024] = {0};  // write data
 143:Core/Src/main.c **** char SD_buffer_r[10224] = {0}; // read data
 144:Core/Src/main.c **** char SD_file_name[50] = {0};
 145:Core/Src/main.c **** UINT br, bw; // file read.write count
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 4


 146:Core/Src/main.c **** 
 147:Core/Src/main.c **** FATFS *pfs;
 148:Core/Src/main.c **** DWORD fre_clust;
 149:Core/Src/main.c **** uint32_t total, free_space;
 150:Core/Src/main.c **** char SD_read[256];
 151:Core/Src/main.c **** 
 152:Core/Src/main.c **** /**************************************SIM 4G***************************/
 153:Core/Src/main.c **** #define SIM 0
 154:Core/Src/main.c **** // typedef struct
 155:Core/Src/main.c **** // {
 156:Core/Src/main.c **** //   char online[2];
 157:Core/Src/main.c **** //   char offline[2];
 158:Core/Src/main.c **** //   char sleep[2];
 159:Core/Src/main.c **** //   char deviceID[20];
 160:Core/Src/main.c **** //   char license[20];
 161:Core/Src/main.c **** //   char name[50];
 162:Core/Src/main.c **** //   char phone[20];
 163:Core/Src/main.c **** //   char signal[20];
 164:Core/Src/main.c **** // } dataPubTB_t;
 165:Core/Src/main.c **** typedef struct
 166:Core/Src/main.c **** {
 167:Core/Src/main.c ****   char online[2];
 168:Core/Src/main.c ****   char offline[2];
 169:Core/Src/main.c ****   char sleep[2];
 170:Core/Src/main.c ****   char signal[5];
 171:Core/Src/main.c **** } stateDevice_t;
 172:Core/Src/main.c **** stateDevice_t stateDevice;
 173:Core/Src/main.c **** char Json_Data[500] = {0};
 174:Core/Src/main.c **** /**************************************RFID*****************************/
 175:Core/Src/main.c **** uint8_t CardID[5] = {0};
 176:Core/Src/main.c **** char Card_Startbuff[20] = {0};
 177:Core/Src/main.c **** char Card_Endbuff[20] = {0};
 178:Core/Src/main.c **** char *id_ref = "";
 179:Core/Src/main.c **** typedef struct
 180:Core/Src/main.c **** {
 181:Core/Src/main.c ****   char ID[20];      // id     64C43951
 182:Core/Src/main.c ****   char name[20];    // ABC
 183:Core/Src/main.c ****   char license[10]; // A1 A2...
 184:Core/Src/main.c ****   char phoneNum[20];
 185:Core/Src/main.c ****   char deviceID[20]; // plates license
 186:Core/Src/main.c **** } infoRFID_t;
 187:Core/Src/main.c **** infoRFID_t infoUser, infoUser1, infoUser2;
 188:Core/Src/main.c **** 
 189:Core/Src/main.c **** /***************************************TASK**************************/
 190:Core/Src/main.c **** enum
 191:Core/Src/main.c **** {
 192:Core/Src/main.c ****   Task_Sensors,
 193:Core/Src/main.c ****   Task_GNSS,
 194:Core/Src/main.c ****   Task_SIM,
 195:Core/Src/main.c ****   Task_Store,
 196:Core/Src/main.c ****   Task_Display,
 197:Core/Src/main.c ****   Task_LogoutOrRS232
 198:Core/Src/main.c **** };
 199:Core/Src/main.c **** volatile int Type_Task = Task_Display;
 200:Core/Src/main.c **** typedef struct
 201:Core/Src/main.c **** {
 202:Core/Src/main.c ****   volatile bool TaskSensors;
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 5


 203:Core/Src/main.c ****   volatile bool TaskGNSS;
 204:Core/Src/main.c ****   volatile bool TaskSIM;
 205:Core/Src/main.c ****   volatile bool TaskStore;
 206:Core/Src/main.c ****   volatile bool TaskDisplay;
 207:Core/Src/main.c **** } TaskPerform_t;
 208:Core/Src/main.c **** 
 209:Core/Src/main.c **** TaskPerform_t Taskperform = {
 210:Core/Src/main.c ****     .TaskSensors = false,
 211:Core/Src/main.c ****     .TaskGNSS = false,
 212:Core/Src/main.c ****     .TaskSIM = false,
 213:Core/Src/main.c ****     .TaskStore = false,
 214:Core/Src/main.c ****     .TaskDisplay = false,
 215:Core/Src/main.c **** };
 216:Core/Src/main.c **** #define SWITCH_CASE 1
 217:Core/Src/main.c **** #define IF_SIUTATION 0
 218:Core/Src/main.c **** enum
 219:Core/Src/main.c **** {
 220:Core/Src/main.c ****   Normal_Mode,
 221:Core/Src/main.c ****   IRQ_Mode
 222:Core/Src/main.c **** };
 223:Core/Src/main.c **** volatile int Task_Mode = Normal_Mode;
 224:Core/Src/main.c **** /*****************************************SENSOR*************************/
 225:Core/Src/main.c **** int ds18_temp;
 226:Core/Src/main.c **** float dht_temp;
 227:Core/Src/main.c **** float dht_hum;
 228:Core/Src/main.c **** 
 229:Core/Src/main.c **** typedef struct
 230:Core/Src/main.c **** {
 231:Core/Src/main.c ****   char ds18_buff[5];
 232:Core/Src/main.c ****   char dhtTemp_buff[50];
 233:Core/Src/main.c ****   char dhtHum_buff[50];
 234:Core/Src/main.c ****   char fuel[5];
 235:Core/Src/main.c **** } sensors_t;
 236:Core/Src/main.c **** sensors_t sensors;
 237:Core/Src/main.c **** /*******************************************FLASH***********************/
 238:Core/Src/main.c **** #define FLASH_ADDRESS_BASE 0x00000000
 239:Core/Src/main.c **** uint8_t flash_Readbuff[1024] = {0};
 240:Core/Src/main.c **** /******************************************RS232************************/
 241:Core/Src/main.c **** char rs232_data;
 242:Core/Src/main.c **** char rs232_buff[50] = {0};
 243:Core/Src/main.c **** int rs232_index = 0;
 244:Core/Src/main.c **** volatile bool rs232_flag = false;
 245:Core/Src/main.c **** /* USER CODE END PV */
 246:Core/Src/main.c **** 
 247:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
 248:Core/Src/main.c **** void SystemClock_Config(void);
 249:Core/Src/main.c **** /* USER CODE BEGIN PFP */
 250:Core/Src/main.c **** 
 251:Core/Src/main.c **** /* USER CODE END PFP */
 252:Core/Src/main.c **** 
 253:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 254:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 255:Core/Src/main.c **** void rs232_logdata(char *str)
 256:Core/Src/main.c **** {
  28              		.loc 1 256 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 6


  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		.loc 1 256 1 is_stmt 0 view .LVU1
  33 0000 10B5     		push	{r4, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 4, -8
  37              		.cfi_offset 14, -4
  38 0002 0446     		mov	r4, r0
 257:Core/Src/main.c ****   HAL_UART_Transmit(&huart2, (uint8_t *)str, strlen(str), 5000);
  39              		.loc 1 257 3 is_stmt 1 view .LVU2
  40              		.loc 1 257 46 is_stmt 0 view .LVU3
  41 0004 FFF7FEFF 		bl	strlen
  42              	.LVL1:
  43              		.loc 1 257 3 view .LVU4
  44 0008 41F28833 		movw	r3, #5000
  45 000c 82B2     		uxth	r2, r0
  46 000e 2146     		mov	r1, r4
  47 0010 0148     		ldr	r0, .L3
  48 0012 FFF7FEFF 		bl	HAL_UART_Transmit
  49              	.LVL2:
 258:Core/Src/main.c **** }
  50              		.loc 1 258 1 view .LVU5
  51 0016 10BD     		pop	{r4, pc}
  52              	.LVL3:
  53              	.L4:
  54              		.loc 1 258 1 view .LVU6
  55              		.align	2
  56              	.L3:
  57 0018 00000000 		.word	huart2
  58              		.cfi_endproc
  59              	.LFE68:
  61              		.section	.text.buzzer,"ax",%progbits
  62              		.align	1
  63              		.global	buzzer
  64              		.syntax unified
  65              		.thumb
  66              		.thumb_func
  68              	buzzer:
  69              	.LVL4:
  70              	.LFB69:
 259:Core/Src/main.c **** 
 260:Core/Src/main.c **** void buzzer(long time)
 261:Core/Src/main.c **** {
  71              		.loc 1 261 1 is_stmt 1 view -0
  72              		.cfi_startproc
  73              		@ args = 0, pretend = 0, frame = 0
  74              		@ frame_needed = 0, uses_anonymous_args = 0
  75              		.loc 1 261 1 is_stmt 0 view .LVU8
  76 0000 38B5     		push	{r3, r4, r5, lr}
  77              	.LCFI1:
  78              		.cfi_def_cfa_offset 16
  79              		.cfi_offset 3, -16
  80              		.cfi_offset 4, -12
  81              		.cfi_offset 5, -8
  82              		.cfi_offset 14, -4
  83 0002 0446     		mov	r4, r0
 262:Core/Src/main.c ****   HAL_GPIO_WritePin(BUZZER_GPIO_Port, BUZZER_Pin, GPIO_PIN_SET);
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 7


  84              		.loc 1 262 3 is_stmt 1 view .LVU9
  85 0004 074D     		ldr	r5, .L7
  86 0006 0122     		movs	r2, #1
  87 0008 0221     		movs	r1, #2
  88 000a 2846     		mov	r0, r5
  89              	.LVL5:
  90              		.loc 1 262 3 is_stmt 0 view .LVU10
  91 000c FFF7FEFF 		bl	HAL_GPIO_WritePin
  92              	.LVL6:
 263:Core/Src/main.c ****   HAL_Delay(time);
  93              		.loc 1 263 3 is_stmt 1 view .LVU11
  94 0010 2046     		mov	r0, r4
  95 0012 FFF7FEFF 		bl	HAL_Delay
  96              	.LVL7:
 264:Core/Src/main.c ****   HAL_GPIO_WritePin(BUZZER_GPIO_Port, BUZZER_Pin, GPIO_PIN_RESET);
  97              		.loc 1 264 3 view .LVU12
  98 0016 0022     		movs	r2, #0
  99 0018 0221     		movs	r1, #2
 100 001a 2846     		mov	r0, r5
 101 001c FFF7FEFF 		bl	HAL_GPIO_WritePin
 102              	.LVL8:
 265:Core/Src/main.c **** }
 103              		.loc 1 265 1 is_stmt 0 view .LVU13
 104 0020 38BD     		pop	{r3, r4, r5, pc}
 105              	.LVL9:
 106              	.L8:
 107              		.loc 1 265 1 view .LVU14
 108 0022 00BF     		.align	2
 109              	.L7:
 110 0024 00080140 		.word	1073809408
 111              		.cfi_endproc
 112              	.LFE69:
 114              		.section	.text.set_timer,"ax",%progbits
 115              		.align	1
 116              		.global	set_timer
 117              		.syntax unified
 118              		.thumb
 119              		.thumb_func
 121              	set_timer:
 122              	.LVL10:
 123              	.LFB71:
 266:Core/Src/main.c **** 
 267:Core/Src/main.c **** void set_alarm(int intervalHour)
 268:Core/Src/main.c **** {
 269:Core/Src/main.c ****   RTC_AlarmTypeDef sAlarm = {0};
 270:Core/Src/main.c ****   sAlarm.AlarmTime.Hours = current_sTime.Hours + intervalHour;
 271:Core/Src/main.c ****   sAlarm.AlarmTime.Minutes = current_sTime.Minutes;
 272:Core/Src/main.c ****   sAlarm.AlarmTime.Seconds = current_sTime.Seconds;
 273:Core/Src/main.c ****   sAlarm.Alarm = RTC_ALARM_A;
 274:Core/Src/main.c ****   if (HAL_RTC_SetAlarm_IT(&hrtc, &sAlarm, RTC_FORMAT_BIN) != HAL_OK)
 275:Core/Src/main.c ****   {
 276:Core/Src/main.c ****     Error_Handler();
 277:Core/Src/main.c ****   }
 278:Core/Src/main.c **** }
 279:Core/Src/main.c **** 
 280:Core/Src/main.c **** void set_timer(long time)
 281:Core/Src/main.c **** {
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 8


 124              		.loc 1 281 1 is_stmt 1 view -0
 125              		.cfi_startproc
 126              		@ args = 0, pretend = 0, frame = 0
 127              		@ frame_needed = 0, uses_anonymous_args = 0
 128              		@ link register save eliminated.
 282:Core/Src/main.c ****   TIM3->CNT = 60000 - time * 10;
 129              		.loc 1 282 3 view .LVU16
 130              		.loc 1 282 21 is_stmt 0 view .LVU17
 131 0000 6FF00902 		mvn	r2, #9
 132 0004 4EF66023 		movw	r3, #60000
 133 0008 02FB0033 		mla	r3, r2, r0, r3
 134              		.loc 1 282 13 view .LVU18
 135 000c 014A     		ldr	r2, .L10
 136 000e 5362     		str	r3, [r2, #36]
 283:Core/Src/main.c **** }
 137              		.loc 1 283 1 view .LVU19
 138 0010 7047     		bx	lr
 139              	.L11:
 140 0012 00BF     		.align	2
 141              	.L10:
 142 0014 00040040 		.word	1073742848
 143              		.cfi_endproc
 144              	.LFE71:
 146              		.section	.rodata.HAL_RTC_AlarmAEventCallback.str1.4,"aMS",%progbits,1
 147              		.align	2
 148              	.LC0:
 149 0000 4C616920 		.ascii	"Lai xe qua thoi gian cho phep, xin dung lai\000"
 149      78652071 
 149      75612074 
 149      686F6920 
 149      6769616E 
 150              		.section	.text.HAL_RTC_AlarmAEventCallback,"ax",%progbits
 151              		.align	1
 152              		.global	HAL_RTC_AlarmAEventCallback
 153              		.syntax unified
 154              		.thumb
 155              		.thumb_func
 157              	HAL_RTC_AlarmAEventCallback:
 158              	.LVL11:
 159              	.LFB72:
 284:Core/Src/main.c **** 
 285:Core/Src/main.c **** void HAL_RTC_AlarmAEventCallback(RTC_HandleTypeDef *hrtc)
 286:Core/Src/main.c **** {
 160              		.loc 1 286 1 is_stmt 1 view -0
 161              		.cfi_startproc
 162              		@ args = 0, pretend = 0, frame = 0
 163              		@ frame_needed = 0, uses_anonymous_args = 0
 164              		.loc 1 286 1 is_stmt 0 view .LVU21
 165 0000 08B5     		push	{r3, lr}
 166              	.LCFI2:
 167              		.cfi_def_cfa_offset 8
 168              		.cfi_offset 3, -8
 169              		.cfi_offset 14, -4
 287:Core/Src/main.c ****   // warning and SMS
 288:Core/Src/main.c ****   buzzer(5000);
 170              		.loc 1 288 3 is_stmt 1 view .LVU22
 171 0002 41F28830 		movw	r0, #5000
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 9


 172              	.LVL12:
 173              		.loc 1 288 3 is_stmt 0 view .LVU23
 174 0006 FFF7FEFF 		bl	buzzer
 175              	.LVL13:
 289:Core/Src/main.c ****   sim7672_sendSMS(infoUser.phoneNum, "Lai xe qua thoi gian cho phep, xin dung lai");
 176              		.loc 1 289 3 is_stmt 1 view .LVU24
 177 000a 0249     		ldr	r1, .L14
 178 000c 0248     		ldr	r0, .L14+4
 179 000e FFF7FEFF 		bl	sim7672_sendSMS
 180              	.LVL14:
 290:Core/Src/main.c **** }
 181              		.loc 1 290 1 is_stmt 0 view .LVU25
 182 0012 08BD     		pop	{r3, pc}
 183              	.L15:
 184              		.align	2
 185              	.L14:
 186 0014 00000000 		.word	.LC0
 187 0018 32000000 		.word	.LANCHOR0+50
 188              		.cfi_endproc
 189              	.LFE72:
 191              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 192              		.align	1
 193              		.global	HAL_UART_RxCpltCallback
 194              		.syntax unified
 195              		.thumb
 196              		.thumb_func
 198              	HAL_UART_RxCpltCallback:
 199              	.LVL15:
 200              	.LFB73:
 291:Core/Src/main.c **** 
 292:Core/Src/main.c **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
 293:Core/Src/main.c **** {
 201              		.loc 1 293 1 is_stmt 1 view -0
 202              		.cfi_startproc
 203              		@ args = 0, pretend = 0, frame = 0
 204              		@ frame_needed = 0, uses_anonymous_args = 0
 205              		.loc 1 293 1 is_stmt 0 view .LVU27
 206 0000 10B5     		push	{r4, lr}
 207              	.LCFI3:
 208              		.cfi_def_cfa_offset 8
 209              		.cfi_offset 4, -8
 210              		.cfi_offset 14, -4
 211 0002 0446     		mov	r4, r0
 294:Core/Src/main.c ****   // for SIM
 295:Core/Src/main.c ****   if (huart == &huart1)
 212              		.loc 1 295 3 is_stmt 1 view .LVU28
 213              		.loc 1 295 6 is_stmt 0 view .LVU29
 214 0004 0F4B     		ldr	r3, .L24
 215 0006 9842     		cmp	r0, r3
 216 0008 06D0     		beq	.L21
 217              	.LVL16:
 218              	.L17:
 296:Core/Src/main.c ****   {
 297:Core/Src/main.c ****     sim7672_callback();
 298:Core/Src/main.c ****   }
 299:Core/Src/main.c ****   // for GPS
 300:Core/Src/main.c ****   if (huart == &huart4)
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 10


 219              		.loc 1 300 3 is_stmt 1 view .LVU30
 220              		.loc 1 300 6 is_stmt 0 view .LVU31
 221 000a 0F4B     		ldr	r3, .L24+4
 222 000c 9C42     		cmp	r4, r3
 223 000e 06D0     		beq	.L22
 224              	.L18:
 301:Core/Src/main.c ****   {
 302:Core/Src/main.c ****     l70_callback();
 303:Core/Src/main.c ****   }
 304:Core/Src/main.c ****   // for RS232
 305:Core/Src/main.c ****   if (huart == &huart2)
 225              		.loc 1 305 3 is_stmt 1 view .LVU32
 226              		.loc 1 305 6 is_stmt 0 view .LVU33
 227 0010 0E4B     		ldr	r3, .L24+8
 228 0012 9C42     		cmp	r4, r3
 229 0014 06D0     		beq	.L23
 230              	.L16:
 306:Core/Src/main.c ****   {
 307:Core/Src/main.c ****     Type_Task = Task_LogoutOrRS232;
 308:Core/Src/main.c ****     rs232_buff[rs232_index] = rs232_data;
 309:Core/Src/main.c ****     if (rs232_buff[rs232_index] == '\n')
 310:Core/Src/main.c ****     {
 311:Core/Src/main.c ****       rs232_flag = true;
 312:Core/Src/main.c ****     }
 313:Core/Src/main.c ****   }
 314:Core/Src/main.c **** }
 231              		.loc 1 314 1 view .LVU34
 232 0016 10BD     		pop	{r4, pc}
 233              	.LVL17:
 234              	.L21:
 297:Core/Src/main.c ****   }
 235              		.loc 1 297 5 is_stmt 1 view .LVU35
 236 0018 FFF7FEFF 		bl	sim7672_callback
 237              	.LVL18:
 297:Core/Src/main.c ****   }
 238              		.loc 1 297 5 is_stmt 0 view .LVU36
 239 001c F5E7     		b	.L17
 240              	.L22:
 302:Core/Src/main.c ****   }
 241              		.loc 1 302 5 is_stmt 1 view .LVU37
 242 001e FFF7FEFF 		bl	l70_callback
 243              	.LVL19:
 244 0022 F5E7     		b	.L18
 245              	.L23:
 307:Core/Src/main.c ****     rs232_buff[rs232_index] = rs232_data;
 246              		.loc 1 307 5 view .LVU38
 307:Core/Src/main.c ****     rs232_buff[rs232_index] = rs232_data;
 247              		.loc 1 307 15 is_stmt 0 view .LVU39
 248 0024 0A4B     		ldr	r3, .L24+12
 249 0026 0522     		movs	r2, #5
 250 0028 1A60     		str	r2, [r3]
 308:Core/Src/main.c ****     if (rs232_buff[rs232_index] == '\n')
 251              		.loc 1 308 5 is_stmt 1 view .LVU40
 308:Core/Src/main.c ****     if (rs232_buff[rs232_index] == '\n')
 252              		.loc 1 308 15 is_stmt 0 view .LVU41
 253 002a 0A4B     		ldr	r3, .L24+16
 254 002c 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 11


 308:Core/Src/main.c ****     if (rs232_buff[rs232_index] == '\n')
 255              		.loc 1 308 29 view .LVU42
 256 002e 0A4B     		ldr	r3, .L24+20
 257 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 258 0032 0A49     		ldr	r1, .L24+24
 259 0034 8B54     		strb	r3, [r1, r2]
 309:Core/Src/main.c ****     {
 260              		.loc 1 309 5 is_stmt 1 view .LVU43
 309:Core/Src/main.c ****     {
 261              		.loc 1 309 8 is_stmt 0 view .LVU44
 262 0036 0A2B     		cmp	r3, #10
 263 0038 EDD1     		bne	.L16
 311:Core/Src/main.c ****     }
 264              		.loc 1 311 7 is_stmt 1 view .LVU45
 311:Core/Src/main.c ****     }
 265              		.loc 1 311 18 is_stmt 0 view .LVU46
 266 003a 094B     		ldr	r3, .L24+28
 267 003c 0122     		movs	r2, #1
 268 003e 1A70     		strb	r2, [r3]
 269              		.loc 1 314 1 view .LVU47
 270 0040 E9E7     		b	.L16
 271              	.L25:
 272 0042 00BF     		.align	2
 273              	.L24:
 274 0044 00000000 		.word	huart1
 275 0048 00000000 		.word	huart4
 276 004c 00000000 		.word	huart2
 277 0050 00000000 		.word	.LANCHOR1
 278 0054 00000000 		.word	.LANCHOR2
 279 0058 00000000 		.word	.LANCHOR3
 280 005c 00000000 		.word	.LANCHOR4
 281 0060 00000000 		.word	.LANCHOR5
 282              		.cfi_endproc
 283              	.LFE73:
 285              		.global	__aeabi_ui2f
 286              		.global	__aeabi_fsub
 287              		.global	__aeabi_fdiv
 288              		.section	.text.HAL_GPIO_EXTI_Callback,"ax",%progbits
 289              		.align	1
 290              		.global	HAL_GPIO_EXTI_Callback
 291              		.syntax unified
 292              		.thumb
 293              		.thumb_func
 295              	HAL_GPIO_EXTI_Callback:
 296              	.LVL20:
 297              	.LFB74:
 315:Core/Src/main.c **** 
 316:Core/Src/main.c **** void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
 317:Core/Src/main.c **** {
 298              		.loc 1 317 1 is_stmt 1 view -0
 299              		.cfi_startproc
 300              		@ args = 0, pretend = 0, frame = 0
 301              		@ frame_needed = 0, uses_anonymous_args = 0
 302              		.loc 1 317 1 is_stmt 0 view .LVU49
 303 0000 10B5     		push	{r4, lr}
 304              	.LCFI4:
 305              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 12


 306              		.cfi_offset 4, -8
 307              		.cfi_offset 14, -4
 318:Core/Src/main.c ****   // reset timer 2
 319:Core/Src/main.c ****   HAL_TIM_Base_Stop(&htim2);
 308              		.loc 1 319 3 is_stmt 1 view .LVU50
 309 0002 1348     		ldr	r0, .L30
 310              	.LVL21:
 311              		.loc 1 319 3 is_stmt 0 view .LVU51
 312 0004 FFF7FEFF 		bl	HAL_TIM_Base_Stop
 313              	.LVL22:
 320:Core/Src/main.c ****   TIM2->CNT = 0;
 314              		.loc 1 320 3 is_stmt 1 view .LVU52
 315              		.loc 1 320 13 is_stmt 0 view .LVU53
 316 0008 0024     		movs	r4, #0
 317 000a 4FF08043 		mov	r3, #1073741824
 318 000e 5C62     		str	r4, [r3, #36]
 321:Core/Src/main.c **** 
 322:Core/Src/main.c ****   current_time = HAL_GetTick();
 319              		.loc 1 322 3 is_stmt 1 view .LVU54
 320              		.loc 1 322 18 is_stmt 0 view .LVU55
 321 0010 FFF7FEFF 		bl	HAL_GetTick
 322              	.LVL23:
 323              		.loc 1 322 16 view .LVU56
 324 0014 FFF7FEFF 		bl	__aeabi_ui2f
 325              	.LVL24:
 326 0018 0E4B     		ldr	r3, .L30+4
 327 001a 1860     		str	r0, [r3]	@ float
 323:Core/Src/main.c **** 
 324:Core/Src/main.c ****   npn_flag_check = CHANGE;
 328              		.loc 1 324 3 is_stmt 1 view .LVU57
 329              		.loc 1 324 18 is_stmt 0 view .LVU58
 330 001c 0E4B     		ldr	r3, .L30+8
 331 001e 1C60     		str	r4, [r3]
 325:Core/Src/main.c ****   Vehical_State = Move;
 332              		.loc 1 325 3 is_stmt 1 view .LVU59
 333              		.loc 1 325 17 is_stmt 0 view .LVU60
 334 0020 0E4B     		ldr	r3, .L30+12
 335 0022 0122     		movs	r2, #1
 336 0024 1A60     		str	r2, [r3]
 326:Core/Src/main.c ****   npn_count++;
 337              		.loc 1 326 3 is_stmt 1 view .LVU61
 338              		.loc 1 326 12 is_stmt 0 view .LVU62
 339 0026 0E4A     		ldr	r2, .L30+16
 340 0028 1368     		ldr	r3, [r2]
 341 002a 0133     		adds	r3, r3, #1
 342 002c 1360     		str	r3, [r2]
 327:Core/Src/main.c ****   if (npn_count == 20)
 343              		.loc 1 327 3 is_stmt 1 view .LVU63
 344              		.loc 1 327 6 is_stmt 0 view .LVU64
 345 002e 142B     		cmp	r3, #20
 346 0030 03D0     		beq	.L29
 347              	.L27:
 328:Core/Src/main.c ****   {
 329:Core/Src/main.c ****     float time_cycle = current_time - last_time;
 330:Core/Src/main.c ****     Vehical_veloc = (1.0 * 3000) / (time_cycle);
 331:Core/Src/main.c ****     // tinh toan van toc
 332:Core/Src/main.c ****   }
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 13


 333:Core/Src/main.c ****   // start timer2
 334:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim2);
 348              		.loc 1 334 3 is_stmt 1 view .LVU65
 349 0032 0748     		ldr	r0, .L30
 350 0034 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 351              	.LVL25:
 335:Core/Src/main.c **** }
 352              		.loc 1 335 1 is_stmt 0 view .LVU66
 353 0038 10BD     		pop	{r4, pc}
 354              	.L29:
 355              	.LBB4:
 329:Core/Src/main.c ****     Vehical_veloc = (1.0 * 3000) / (time_cycle);
 356              		.loc 1 329 5 is_stmt 1 view .LVU67
 329:Core/Src/main.c ****     Vehical_veloc = (1.0 * 3000) / (time_cycle);
 357              		.loc 1 329 11 is_stmt 0 view .LVU68
 358 003a 0A4B     		ldr	r3, .L30+20
 359 003c 1968     		ldr	r1, [r3]	@ float
 360 003e FFF7FEFF 		bl	__aeabi_fsub
 361              	.LVL26:
 362 0042 0146     		mov	r1, r0
 363              	.LVL27:
 330:Core/Src/main.c ****     // tinh toan van toc
 364              		.loc 1 330 5 is_stmt 1 view .LVU69
 330:Core/Src/main.c ****     // tinh toan van toc
 365              		.loc 1 330 34 is_stmt 0 view .LVU70
 366 0044 0848     		ldr	r0, .L30+24
 367              	.LVL28:
 330:Core/Src/main.c ****     // tinh toan van toc
 368              		.loc 1 330 34 view .LVU71
 369 0046 FFF7FEFF 		bl	__aeabi_fdiv
 370              	.LVL29:
 330:Core/Src/main.c ****     // tinh toan van toc
 371              		.loc 1 330 19 view .LVU72
 372 004a 084B     		ldr	r3, .L30+28
 373 004c 1860     		str	r0, [r3]	@ float
 374 004e F0E7     		b	.L27
 375              	.L31:
 376              		.align	2
 377              	.L30:
 378 0050 00000000 		.word	htim2
 379 0054 00000000 		.word	.LANCHOR6
 380 0058 00000000 		.word	.LANCHOR7
 381 005c 00000000 		.word	.LANCHOR8
 382 0060 00000000 		.word	.LANCHOR9
 383 0064 00000000 		.word	.LANCHOR10
 384 0068 00803B45 		.word	1161527296
 385 006c 00000000 		.word	.LANCHOR11
 386              	.LBE4:
 387              		.cfi_endproc
 388              	.LFE74:
 390              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 391              		.align	1
 392              		.global	HAL_TIM_PeriodElapsedCallback
 393              		.syntax unified
 394              		.thumb
 395              		.thumb_func
 397              	HAL_TIM_PeriodElapsedCallback:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 14


 398              	.LVL30:
 399              	.LFB75:
 336:Core/Src/main.c **** 
 337:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 338:Core/Src/main.c **** {
 400              		.loc 1 338 1 is_stmt 1 view -0
 401              		.cfi_startproc
 402              		@ args = 0, pretend = 0, frame = 0
 403              		@ frame_needed = 0, uses_anonymous_args = 0
 404              		.loc 1 338 1 is_stmt 0 view .LVU74
 405 0000 10B5     		push	{r4, lr}
 406              	.LCFI5:
 407              		.cfi_def_cfa_offset 8
 408              		.cfi_offset 4, -8
 409              		.cfi_offset 14, -4
 410 0002 0446     		mov	r4, r0
 339:Core/Src/main.c ****   if (htim == &htim2)
 411              		.loc 1 339 3 is_stmt 1 view .LVU75
 412              		.loc 1 339 6 is_stmt 0 view .LVU76
 413 0004 314B     		ldr	r3, .L46
 414 0006 9842     		cmp	r0, r3
 415 0008 03D0     		beq	.L40
 416              	.LVL31:
 417              	.L33:
 340:Core/Src/main.c ****   {
 341:Core/Src/main.c ****     if (rc522_check(CardID) == RC522_OK && waiting4LogOut == true)
 342:Core/Src/main.c ****     {
 343:Core/Src/main.c ****       waiting4LogOut = false;
 344:Core/Src/main.c ****       Type_Task = Task_LogoutOrRS232;
 345:Core/Src/main.c ****       Logout = true;
 346:Core/Src/main.c ****     }
 347:Core/Src/main.c ****   }
 348:Core/Src/main.c ****   if (htim == &htim3)
 418              		.loc 1 348 3 is_stmt 1 view .LVU77
 419              		.loc 1 348 6 is_stmt 0 view .LVU78
 420 000a 314B     		ldr	r3, .L46+4
 421 000c 9C42     		cmp	r4, r3
 422 000e 13D0     		beq	.L41
 423              	.L32:
 349:Core/Src/main.c ****   {
 350:Core/Src/main.c ****     if (Type_Task == Task_Sensors)
 351:Core/Src/main.c ****     {
 352:Core/Src/main.c ****       Taskperform.TaskSensors = false;
 353:Core/Src/main.c ****       Type_Task = Task_GNSS;
 354:Core/Src/main.c ****       set_timer(500);
 355:Core/Src/main.c ****       return;
 356:Core/Src/main.c ****     }
 357:Core/Src/main.c ****     if (Type_Task == Task_GNSS)
 358:Core/Src/main.c ****     {
 359:Core/Src/main.c ****       Taskperform.TaskGNSS = false;
 360:Core/Src/main.c ****       Type_Task = Task_SIM;
 361:Core/Src/main.c ****       set_timer(1500);
 362:Core/Src/main.c ****       return;
 363:Core/Src/main.c ****     }
 364:Core/Src/main.c ****     if (Type_Task == Task_SIM)
 365:Core/Src/main.c ****     {
 366:Core/Src/main.c ****       Taskperform.TaskSIM = false;
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 15


 367:Core/Src/main.c ****       Type_Task = Task_Store;
 368:Core/Src/main.c ****       set_timer(500);
 369:Core/Src/main.c ****       return;
 370:Core/Src/main.c ****     }
 371:Core/Src/main.c ****     if (Type_Task == Task_Store)
 372:Core/Src/main.c ****     {
 373:Core/Src/main.c ****       Taskperform.TaskStore = false;
 374:Core/Src/main.c ****       Type_Task = Task_Display;
 375:Core/Src/main.c ****       set_timer(500);
 376:Core/Src/main.c ****       return;
 377:Core/Src/main.c ****     }
 378:Core/Src/main.c ****     if (Type_Task == Task_Display)
 379:Core/Src/main.c ****     {
 380:Core/Src/main.c ****       Taskperform.TaskDisplay = false;
 381:Core/Src/main.c ****       Type_Task = Task_Sensors;
 382:Core/Src/main.c ****       set_timer(1000);
 383:Core/Src/main.c ****       return;
 384:Core/Src/main.c ****     }
 385:Core/Src/main.c ****   }
 386:Core/Src/main.c **** }
 424              		.loc 1 386 1 view .LVU79
 425 0010 10BD     		pop	{r4, pc}
 426              	.LVL32:
 427              	.L40:
 341:Core/Src/main.c ****     {
 428              		.loc 1 341 5 is_stmt 1 view .LVU80
 341:Core/Src/main.c ****     {
 429              		.loc 1 341 9 is_stmt 0 view .LVU81
 430 0012 3048     		ldr	r0, .L46+8
 431              	.LVL33:
 341:Core/Src/main.c ****     {
 432              		.loc 1 341 9 view .LVU82
 433 0014 FFF7FEFF 		bl	rc522_check
 434              	.LVL34:
 341:Core/Src/main.c ****     {
 435              		.loc 1 341 8 view .LVU83
 436 0018 0028     		cmp	r0, #0
 437 001a F6D1     		bne	.L33
 341:Core/Src/main.c ****     {
 438              		.loc 1 341 59 discriminator 1 view .LVU84
 439 001c 2E4B     		ldr	r3, .L46+12
 440 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 341:Core/Src/main.c ****     {
 441              		.loc 1 341 41 discriminator 1 view .LVU85
 442 0020 002B     		cmp	r3, #0
 443 0022 F2D0     		beq	.L33
 343:Core/Src/main.c ****       Type_Task = Task_LogoutOrRS232;
 444              		.loc 1 343 7 is_stmt 1 view .LVU86
 343:Core/Src/main.c ****       Type_Task = Task_LogoutOrRS232;
 445              		.loc 1 343 22 is_stmt 0 view .LVU87
 446 0024 2C4B     		ldr	r3, .L46+12
 447 0026 0022     		movs	r2, #0
 448 0028 1A70     		strb	r2, [r3]
 344:Core/Src/main.c ****       Logout = true;
 449              		.loc 1 344 7 is_stmt 1 view .LVU88
 344:Core/Src/main.c ****       Logout = true;
 450              		.loc 1 344 17 is_stmt 0 view .LVU89
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 16


 451 002a 2C4B     		ldr	r3, .L46+16
 452 002c 0522     		movs	r2, #5
 453 002e 1A60     		str	r2, [r3]
 345:Core/Src/main.c ****     }
 454              		.loc 1 345 7 is_stmt 1 view .LVU90
 345:Core/Src/main.c ****     }
 455              		.loc 1 345 14 is_stmt 0 view .LVU91
 456 0030 2B4B     		ldr	r3, .L46+20
 457 0032 0122     		movs	r2, #1
 458 0034 1A70     		strb	r2, [r3]
 459 0036 E8E7     		b	.L33
 460              	.L41:
 350:Core/Src/main.c ****     {
 461              		.loc 1 350 5 is_stmt 1 view .LVU92
 350:Core/Src/main.c ****     {
 462              		.loc 1 350 19 is_stmt 0 view .LVU93
 463 0038 284B     		ldr	r3, .L46+16
 464 003a 1B68     		ldr	r3, [r3]
 350:Core/Src/main.c ****     {
 465              		.loc 1 350 8 view .LVU94
 466 003c CBB1     		cbz	r3, .L42
 357:Core/Src/main.c ****     {
 467              		.loc 1 357 5 is_stmt 1 view .LVU95
 357:Core/Src/main.c ****     {
 468              		.loc 1 357 19 is_stmt 0 view .LVU96
 469 003e 274B     		ldr	r3, .L46+16
 470 0040 1B68     		ldr	r3, [r3]
 357:Core/Src/main.c ****     {
 471              		.loc 1 357 8 view .LVU97
 472 0042 012B     		cmp	r3, #1
 473 0044 20D0     		beq	.L43
 364:Core/Src/main.c ****     {
 474              		.loc 1 364 5 is_stmt 1 view .LVU98
 364:Core/Src/main.c ****     {
 475              		.loc 1 364 19 is_stmt 0 view .LVU99
 476 0046 254B     		ldr	r3, .L46+16
 477 0048 1B68     		ldr	r3, [r3]
 364:Core/Src/main.c ****     {
 478              		.loc 1 364 8 view .LVU100
 479 004a 022B     		cmp	r3, #2
 480 004c 27D0     		beq	.L44
 371:Core/Src/main.c ****     {
 481              		.loc 1 371 5 is_stmt 1 view .LVU101
 371:Core/Src/main.c ****     {
 482              		.loc 1 371 19 is_stmt 0 view .LVU102
 483 004e 234B     		ldr	r3, .L46+16
 484 0050 1B68     		ldr	r3, [r3]
 371:Core/Src/main.c ****     {
 485              		.loc 1 371 8 view .LVU103
 486 0052 032B     		cmp	r3, #3
 487 0054 2ED0     		beq	.L45
 378:Core/Src/main.c ****     {
 488              		.loc 1 378 5 is_stmt 1 view .LVU104
 378:Core/Src/main.c ****     {
 489              		.loc 1 378 19 is_stmt 0 view .LVU105
 490 0056 214B     		ldr	r3, .L46+16
 491 0058 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 17


 378:Core/Src/main.c ****     {
 492              		.loc 1 378 8 view .LVU106
 493 005a 042B     		cmp	r3, #4
 494 005c D8D1     		bne	.L32
 380:Core/Src/main.c ****       Type_Task = Task_Sensors;
 495              		.loc 1 380 7 is_stmt 1 view .LVU107
 380:Core/Src/main.c ****       Type_Task = Task_Sensors;
 496              		.loc 1 380 31 is_stmt 0 view .LVU108
 497 005e 0023     		movs	r3, #0
 498 0060 204A     		ldr	r2, .L46+24
 499 0062 1371     		strb	r3, [r2, #4]
 381:Core/Src/main.c ****       set_timer(1000);
 500              		.loc 1 381 7 is_stmt 1 view .LVU109
 381:Core/Src/main.c ****       set_timer(1000);
 501              		.loc 1 381 17 is_stmt 0 view .LVU110
 502 0064 1D4A     		ldr	r2, .L46+16
 503 0066 1360     		str	r3, [r2]
 382:Core/Src/main.c ****       return;
 504              		.loc 1 382 7 is_stmt 1 view .LVU111
 505 0068 4FF47A70 		mov	r0, #1000
 506 006c FFF7FEFF 		bl	set_timer
 507              	.LVL35:
 383:Core/Src/main.c ****     }
 508              		.loc 1 383 7 view .LVU112
 509 0070 CEE7     		b	.L32
 510              	.L42:
 352:Core/Src/main.c ****       Type_Task = Task_GNSS;
 511              		.loc 1 352 7 view .LVU113
 352:Core/Src/main.c ****       Type_Task = Task_GNSS;
 512              		.loc 1 352 31 is_stmt 0 view .LVU114
 513 0072 1C4B     		ldr	r3, .L46+24
 514 0074 0022     		movs	r2, #0
 515 0076 1A70     		strb	r2, [r3]
 353:Core/Src/main.c ****       set_timer(500);
 516              		.loc 1 353 7 is_stmt 1 view .LVU115
 353:Core/Src/main.c ****       set_timer(500);
 517              		.loc 1 353 17 is_stmt 0 view .LVU116
 518 0078 184B     		ldr	r3, .L46+16
 519 007a 0122     		movs	r2, #1
 520 007c 1A60     		str	r2, [r3]
 354:Core/Src/main.c ****       return;
 521              		.loc 1 354 7 is_stmt 1 view .LVU117
 522 007e 4FF4FA70 		mov	r0, #500
 523 0082 FFF7FEFF 		bl	set_timer
 524              	.LVL36:
 355:Core/Src/main.c ****     }
 525              		.loc 1 355 7 view .LVU118
 526 0086 C3E7     		b	.L32
 527              	.L43:
 359:Core/Src/main.c ****       Type_Task = Task_SIM;
 528              		.loc 1 359 7 view .LVU119
 359:Core/Src/main.c ****       Type_Task = Task_SIM;
 529              		.loc 1 359 28 is_stmt 0 view .LVU120
 530 0088 164B     		ldr	r3, .L46+24
 531 008a 0022     		movs	r2, #0
 532 008c 5A70     		strb	r2, [r3, #1]
 360:Core/Src/main.c ****       set_timer(1500);
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 18


 533              		.loc 1 360 7 is_stmt 1 view .LVU121
 360:Core/Src/main.c ****       set_timer(1500);
 534              		.loc 1 360 17 is_stmt 0 view .LVU122
 535 008e 134B     		ldr	r3, .L46+16
 536 0090 0222     		movs	r2, #2
 537 0092 1A60     		str	r2, [r3]
 361:Core/Src/main.c ****       return;
 538              		.loc 1 361 7 is_stmt 1 view .LVU123
 539 0094 40F2DC50 		movw	r0, #1500
 540 0098 FFF7FEFF 		bl	set_timer
 541              	.LVL37:
 362:Core/Src/main.c ****     }
 542              		.loc 1 362 7 view .LVU124
 543 009c B8E7     		b	.L32
 544              	.L44:
 366:Core/Src/main.c ****       Type_Task = Task_Store;
 545              		.loc 1 366 7 view .LVU125
 366:Core/Src/main.c ****       Type_Task = Task_Store;
 546              		.loc 1 366 27 is_stmt 0 view .LVU126
 547 009e 114B     		ldr	r3, .L46+24
 548 00a0 0022     		movs	r2, #0
 549 00a2 9A70     		strb	r2, [r3, #2]
 367:Core/Src/main.c ****       set_timer(500);
 550              		.loc 1 367 7 is_stmt 1 view .LVU127
 367:Core/Src/main.c ****       set_timer(500);
 551              		.loc 1 367 17 is_stmt 0 view .LVU128
 552 00a4 0D4B     		ldr	r3, .L46+16
 553 00a6 0322     		movs	r2, #3
 554 00a8 1A60     		str	r2, [r3]
 368:Core/Src/main.c ****       return;
 555              		.loc 1 368 7 is_stmt 1 view .LVU129
 556 00aa 4FF4FA70 		mov	r0, #500
 557 00ae FFF7FEFF 		bl	set_timer
 558              	.LVL38:
 369:Core/Src/main.c ****     }
 559              		.loc 1 369 7 view .LVU130
 560 00b2 ADE7     		b	.L32
 561              	.L45:
 373:Core/Src/main.c ****       Type_Task = Task_Display;
 562              		.loc 1 373 7 view .LVU131
 373:Core/Src/main.c ****       Type_Task = Task_Display;
 563              		.loc 1 373 29 is_stmt 0 view .LVU132
 564 00b4 0B4B     		ldr	r3, .L46+24
 565 00b6 0022     		movs	r2, #0
 566 00b8 DA70     		strb	r2, [r3, #3]
 374:Core/Src/main.c ****       set_timer(500);
 567              		.loc 1 374 7 is_stmt 1 view .LVU133
 374:Core/Src/main.c ****       set_timer(500);
 568              		.loc 1 374 17 is_stmt 0 view .LVU134
 569 00ba 084B     		ldr	r3, .L46+16
 570 00bc 0422     		movs	r2, #4
 571 00be 1A60     		str	r2, [r3]
 375:Core/Src/main.c ****       return;
 572              		.loc 1 375 7 is_stmt 1 view .LVU135
 573 00c0 4FF4FA70 		mov	r0, #500
 574 00c4 FFF7FEFF 		bl	set_timer
 575              	.LVL39:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 19


 376:Core/Src/main.c ****     }
 576              		.loc 1 376 7 view .LVU136
 577 00c8 A2E7     		b	.L32
 578              	.L47:
 579 00ca 00BF     		.align	2
 580              	.L46:
 581 00cc 00000000 		.word	htim2
 582 00d0 00000000 		.word	htim3
 583 00d4 00000000 		.word	.LANCHOR12
 584 00d8 00000000 		.word	.LANCHOR13
 585 00dc 00000000 		.word	.LANCHOR1
 586 00e0 00000000 		.word	.LANCHOR14
 587 00e4 00000000 		.word	.LANCHOR15
 588              		.cfi_endproc
 589              	.LFE75:
 591              		.section	.text.Error_Handler,"ax",%progbits
 592              		.align	1
 593              		.global	Error_Handler
 594              		.syntax unified
 595              		.thumb
 596              		.thumb_func
 598              	Error_Handler:
 599              	.LFB78:
 387:Core/Src/main.c **** 
 388:Core/Src/main.c **** /* USER CODE END 0 */
 389:Core/Src/main.c **** 
 390:Core/Src/main.c **** /**
 391:Core/Src/main.c ****  * @brief  The application entry point.
 392:Core/Src/main.c ****  * @retval int
 393:Core/Src/main.c ****  */
 394:Core/Src/main.c **** int main(void)
 395:Core/Src/main.c **** {
 396:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 397:Core/Src/main.c **** 
 398:Core/Src/main.c ****   /* USER CODE END 1 */
 399:Core/Src/main.c **** 
 400:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 401:Core/Src/main.c **** 
 402:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 403:Core/Src/main.c ****   HAL_Init();
 404:Core/Src/main.c **** 
 405:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 406:Core/Src/main.c **** 
 407:Core/Src/main.c ****   /* USER CODE END Init */
 408:Core/Src/main.c **** 
 409:Core/Src/main.c ****   /* Configure the system clock */
 410:Core/Src/main.c ****   SystemClock_Config();
 411:Core/Src/main.c **** 
 412:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 413:Core/Src/main.c **** 
 414:Core/Src/main.c ****   /* USER CODE END SysInit */
 415:Core/Src/main.c **** 
 416:Core/Src/main.c ****   /* Initialize all configured peripherals */
 417:Core/Src/main.c ****   MX_GPIO_Init();
 418:Core/Src/main.c ****   MX_ADC1_Init();
 419:Core/Src/main.c ****   MX_SPI1_Init();
 420:Core/Src/main.c ****   MX_ADC2_Init();
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 20


 421:Core/Src/main.c ****   MX_TIM1_Init();
 422:Core/Src/main.c ****   MX_UART5_Init();
 423:Core/Src/main.c ****   MX_I2C1_Init();
 424:Core/Src/main.c ****   MX_SPI2_Init();
 425:Core/Src/main.c ****   MX_SPI3_Init();
 426:Core/Src/main.c ****   MX_UART4_Init();
 427:Core/Src/main.c ****   MX_USART1_UART_Init();
 428:Core/Src/main.c ****   MX_USART2_UART_Init();
 429:Core/Src/main.c ****   MX_TIM2_Init();
 430:Core/Src/main.c ****   MX_TIM3_Init();
 431:Core/Src/main.c ****   MX_RTC_Init();
 432:Core/Src/main.c ****   MX_FATFS_Init();
 433:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 434:Core/Src/main.c ****   log_data("\nGSHT START\n");
 435:Core/Src/main.c ****   // init all
 436:Core/Src/main.c ****   rc522_init();
 437:Core/Src/main.c ****   log_data("RFID init successfull\n");
 438:Core/Src/main.c ****   HAL_Delay(10);
 439:Core/Src/main.c **** 
 440:Core/Src/main.c ****   l70_init();
 441:Core/Src/main.c ****   log_data("GNSS init successfull\n");
 442:Core/Src/main.c ****   HAL_Delay(500);
 443:Core/Src/main.c **** 
 444:Core/Src/main.c ****   // sim7672_pwrOn();
 445:Core/Src/main.c ****   // HAL_Delay(4000);
 446:Core/Src/main.c ****   //  sim7672_init();
 447:Core/Src/main.c ****   //  sim7672_check_signalStrength();
 448:Core/Src/main.c ****   //  mqtt_connectServer();
 449:Core/Src/main.c ****   //  HAL_Delay(100);
 450:Core/Src/main.c **** 
 451:Core/Src/main.c ****   // w25q32_init();
 452:Core/Src/main.c ****   // log_data("FLASH init successfull\n");
 453:Core/Src/main.c **** 
 454:Core/Src/main.c ****   SSD1306_Init();
 455:Core/Src/main.c **** 
 456:Core/Src/main.c ****   SSD1306_Clear();
 457:Core/Src/main.c ****   SSD1306_DrawBitmap(0, 0, bitmap, 128, 64, 1);
 458:Core/Src/main.c ****   SSD1306_GotoXY(75, 2);
 459:Core/Src/main.c ****   SSD1306_Puts("2:53", &Font_7x10, 1);
 460:Core/Src/main.c ****   SSD1306_GotoXY(30, 16);
 461:Core/Src/main.c ****   SSD1306_Puts("1/1/2023", &Font_7x10, 1);
 462:Core/Src/main.c ****   SSD1306_GotoXY(1, 28);
 463:Core/Src/main.c ****   SSD1306_Puts("Lon:            E", &Font_7x10, 1);
 464:Core/Src/main.c ****   SSD1306_GotoXY(1, 40);
 465:Core/Src/main.c ****   SSD1306_Puts("Lat:           N", &Font_7x10, 1);
 466:Core/Src/main.c ****   SSD1306_GotoXY(1, 52);
 467:Core/Src/main.c ****   SSD1306_Puts("Speed:      m/s", &Font_7x10, 1);
 468:Core/Src/main.c ****   SSD1306_UpdateScreen();
 469:Core/Src/main.c **** 
 470:Core/Src/main.c ****   fresult = f_mount(&fs, "/", 1);
 471:Core/Src/main.c ****   if (fresult != FR_OK)
 472:Core/Src/main.c ****     log_data("ERROR!!! in mounting SD CARD...\n\n");
 473:Core/Src/main.c ****   else
 474:Core/Src/main.c ****     log_data("SD CARD mounted successfully...\n\n");
 475:Core/Src/main.c ****   // Read data FLASH
 476:Core/Src/main.c ****   strcpy(stateDevice.online, "1");
 477:Core/Src/main.c ****   strcpy(stateDevice.offline, "0");
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 21


 478:Core/Src/main.c ****   strcpy(stateDevice.sleep, "0");
 479:Core/Src/main.c ****   strcpy(stateDevice.signal, "OK");
 480:Core/Src/main.c **** 
 481:Core/Src/main.c ****   strcpy(infoUser1.ID, "64C43951");
 482:Core/Src/main.c ****   strcpy(infoUser1.name, "Nguyen_Huy_Hoang");
 483:Core/Src/main.c ****   strcpy(infoUser1.phoneNum, "VIE_0987035442");
 484:Core/Src/main.c ****   strcpy(infoUser1.license, "30N-1234");
 485:Core/Src/main.c **** 
 486:Core/Src/main.c ****   strcpy(infoUser2.ID, "1243");
 487:Core/Src/main.c ****   strcpy(infoUser2.name, "Nguyen_Van_A");
 488:Core/Src/main.c ****   strcpy(infoUser2.phoneNum, "VIE_0123562571");
 489:Core/Src/main.c ****   strcpy(infoUser2.license, "30N-3611");
 490:Core/Src/main.c **** 
 491:Core/Src/main.c ****   strcpy(infoUser.deviceID, "GSHT_ID01");
 492:Core/Src/main.c ****   // READ TAG RFID
 493:Core/Src/main.c ****   while (strcmp(infoUser1.ID, Card_Startbuff) != 0 || strcmp(infoUser2.ID, Card_Startbuff) != 0)
 494:Core/Src/main.c ****   {
 495:Core/Src/main.c ****     // log_data("wait\n");
 496:Core/Src/main.c ****     if (rc522_check(CardID) == RC522_OK)
 497:Core/Src/main.c ****     {
 498:Core/Src/main.c ****       sprintf(Card_Startbuff, "%02X%02X%02X%02X", CardID[0], CardID[1], CardID[2], CardID[3]);
 499:Core/Src/main.c ****       log_data(Card_Startbuff);
 500:Core/Src/main.c ****       if (strcmp(infoUser1.ID, Card_Startbuff) != 0)
 501:Core/Src/main.c ****       {
 502:Core/Src/main.c ****         strcpy(infoUser.ID, infoUser1.ID);
 503:Core/Src/main.c ****         strcpy(infoUser.name, infoUser1.name);
 504:Core/Src/main.c ****         strcpy(infoUser.phoneNum, infoUser1.phoneNum);
 505:Core/Src/main.c ****         strcpy(infoUser.license, infoUser1.license);
 506:Core/Src/main.c ****         buzzer(200);
 507:Core/Src/main.c ****         HAL_Delay(200);
 508:Core/Src/main.c ****         buzzer(200);
 509:Core/Src/main.c ****         log_data("ID1 TAG invalid\n");
 510:Core/Src/main.c ****       }
 511:Core/Src/main.c ****       if (strcmp(infoUser2.ID, Card_Startbuff) != 0)
 512:Core/Src/main.c ****       {
 513:Core/Src/main.c ****         strcpy(infoUser.ID, infoUser2.ID);
 514:Core/Src/main.c ****         strcpy(infoUser.name, infoUser2.name);
 515:Core/Src/main.c ****         strcpy(infoUser.phoneNum, infoUser2.phoneNum);
 516:Core/Src/main.c ****         strcpy(infoUser.license, infoUser2.license);
 517:Core/Src/main.c ****         buzzer(200);
 518:Core/Src/main.c ****         HAL_Delay(200);
 519:Core/Src/main.c ****         buzzer(200);
 520:Core/Src/main.c ****         log_data("ID2 TAG invalid\n");
 521:Core/Src/main.c ****       }
 522:Core/Src/main.c ****       else
 523:Core/Src/main.c ****       {
 524:Core/Src/main.c ****         waiting4LogOut = true;
 525:Core/Src/main.c ****         buzzer(200);
 526:Core/Src/main.c ****         log_data("ID TAG valid\n");
 527:Core/Src/main.c ****         break;
 528:Core/Src/main.c ****       }
 529:Core/Src/main.c ****     }
 530:Core/Src/main.c ****   }
 531:Core/Src/main.c ****   // collect time at having RFID TAG
 532:Core/Src/main.c ****   HAL_RTC_GetTime(&hrtc, &current_sTime, RTC_FORMAT_BIN);
 533:Core/Src/main.c ****   HAL_RTC_GetDate(&hrtc, &current_sDate, RTC_FORMAT_BIN);
 534:Core/Src/main.c ****   set_alarm(4);
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 22


 535:Core/Src/main.c ****   sprintf(time_buff, "%d:%d:%d", current_sTime.Hours, current_sTime.Minutes, current_sTime.Seconds)
 536:Core/Src/main.c ****   log_data(time_buff);
 537:Core/Src/main.c ****   log_data("\n");
 538:Core/Src/main.c ****   sprintf(date_buff, "%d/%d/%d", current_sDate.Date, current_sDate.Month, current_sDate.Year);
 539:Core/Src/main.c ****   log_data(date_buff);
 540:Core/Src/main.c ****   log_data("\n");
 541:Core/Src/main.c ****   HAL_RTC_GetTime(&hrtc, &last_sTime, RTC_FORMAT_BIN);
 542:Core/Src/main.c ****   HAL_RTC_GetDate(&hrtc, &last_sDate, RTC_FORMAT_BIN);
 543:Core/Src/main.c ****   totalMinute_OperateTime = (60 * last_sTime.Hours + last_sTime.Minutes) - (60 * current_sTime.Hour
 544:Core/Src/main.c ****   time_hour = totalMinute_OperateTime / 60;
 545:Core/Src/main.c ****   time_minute = totalMinute_OperateTime - time_hour * 60;
 546:Core/Src/main.c ****   sprintf(totalMinute_OperateTime_buff, "%dh%d", time_hour, time_minute);
 547:Core/Src/main.c ****   // wait for gps
 548:Core/Src/main.c ****   do
 549:Core/Src/main.c ****   {
 550:Core/Src/main.c ****     GPSResponse = l70_receiveGPS();
 551:Core/Src/main.c ****     l70_handleGPS(GPSResponse);
 552:Core/Src/main.c ****     HAL_Delay(1000);
 553:Core/Src/main.c ****   } while (strstr(l70DataAfterHadler.latitude, ".000000") != NULL && strstr(l70DataAfterHadler.long
 554:Core/Src/main.c ****   log_data("\nGSHT Start\n");
 555:Core/Src/main.c ****   // Check ID tag in Flash
 556:Core/Src/main.c **** 
 557:Core/Src/main.c ****   set_timer(1000);
 558:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim3); // Task
 559:Core/Src/main.c ****   HAL_TIM_Base_Start(&htim1);    // Sensors
 560:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim2); // RFID
 561:Core/Src/main.c ****   // set_timer(1000);
 562:Core/Src/main.c ****   HAL_UART_Receive_IT(&huart2, (uint8_t *)&rs232_data, 1);
 563:Core/Src/main.c ****   /* USER CODE END 2 */
 564:Core/Src/main.c **** 
 565:Core/Src/main.c ****   /* Infinite loop */
 566:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 567:Core/Src/main.c ****   while (1)
 568:Core/Src/main.c ****   {
 569:Core/Src/main.c ****     /* USER CODE END WHILE */
 570:Core/Src/main.c **** 
 571:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 572:Core/Src/main.c **** #if SWITCH_CASE
 573:Core/Src/main.c ****     switch (Type_Task)
 574:Core/Src/main.c ****     {
 575:Core/Src/main.c ****     case Task_Sensors:
 576:Core/Src/main.c ****       if (!Taskperform.TaskSensors)
 577:Core/Src/main.c ****       {
 578:Core/Src/main.c ****         log_data("TAKS SENSORS\n");
 579:Core/Src/main.c ****         Taskperform.TaskSensors = true;
 580:Core/Src/main.c ****         ds18_temp = (int)DS18B20_Result();
 581:Core/Src/main.c ****         // DHT11_Result(dht_temp, dht_hum);
 582:Core/Src/main.c ****         sprintf(sensors.ds18_buff, "%d", ds18_temp);
 583:Core/Src/main.c ****         // ftoa(ds18_temp, ds18_buff, 1);
 584:Core/Src/main.c ****         //  w25q32_pageWrite(0x00000000,ds18_buff);
 585:Core/Src/main.c ****         //  ftoa(dht_temp, dhtTemp_buff, 1);
 586:Core/Src/main.c ****         //  ftoa(dht_hum, dhtHum_buff, 1);
 587:Core/Src/main.c ****         strcpy(sensors.dhtTemp_buff, "20");
 588:Core/Src/main.c ****         strcpy(sensors.dhtHum_buff, "80");
 589:Core/Src/main.c ****         strcpy(sensors.fuel, "80");
 590:Core/Src/main.c ****         log_data("Nhiet do thiet bi: ");
 591:Core/Src/main.c ****         log_data(sensors.ds18_buff);
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 23


 592:Core/Src/main.c ****         log_data("\n");
 593:Core/Src/main.c ****       }
 594:Core/Src/main.c ****       break;
 595:Core/Src/main.c ****     case Task_GNSS:
 596:Core/Src/main.c ****       if (!Taskperform.TaskGNSS)
 597:Core/Src/main.c ****       {
 598:Core/Src/main.c ****         log_data("TAKS GNSS\n");
 599:Core/Src/main.c ****         Taskperform.TaskGNSS = true;
 600:Core/Src/main.c ****         GPSResponse = l70_receiveGPS();
 601:Core/Src/main.c ****         l70_handleGPS(GPSResponse);
 602:Core/Src/main.c ****       }
 603:Core/Src/main.c ****       break;
 604:Core/Src/main.c ****     case Task_SIM:
 605:Core/Src/main.c ****       if (!Taskperform.TaskSIM)
 606:Core/Src/main.c ****       {
 607:Core/Src/main.c ****         log_data("TAKS SIM\n");
 608:Core/Src/main.c ****         Taskperform.TaskSIM = true;
 609:Core/Src/main.c ****         memset(Json_Data,'\0',sizeof(Json_Data));
 610:Core/Src/main.c ****         sprintf(Json_Data, "{\"online\":%s,\"offline\":%s,\"sleep\":%s,\"deviceID\":%s,\"license\":
 611:Core/Src/main.c ****                 stateDevice.online, stateDevice.offline, stateDevice.sleep, infoUser.deviceID, info
 612:Core/Src/main.c ****                 stateDevice.signal, l70DataAfterHadler.latitude, l70DataAfterHadler.longitude, sens
 613:Core/Src/main.c ****                 sensors.dhtHum_buff, sensors.fuel);
 614:Core/Src/main.c ****         mqtt_pub(TOPIC, Json_Data);
 615:Core/Src/main.c ****         numCheck_time++;
 616:Core/Src/main.c ****         if (numCheck_time == 10)
 617:Core/Src/main.c ****         {
 618:Core/Src/main.c ****           numCheck_time = 0;
 619:Core/Src/main.c ****           HAL_RTC_GetTime(&hrtc, &last_sTime, RTC_FORMAT_BIN);
 620:Core/Src/main.c ****           HAL_RTC_GetDate(&hrtc, &last_sDate, RTC_FORMAT_BIN);
 621:Core/Src/main.c ****           totalMinute_OperateTime = (60 * last_sTime.Hours + last_sTime.Minutes) - (60 * current_sT
 622:Core/Src/main.c ****           time_hour = totalMinute_OperateTime / 60;
 623:Core/Src/main.c ****           time_minute = totalMinute_OperateTime - time_hour * 60;
 624:Core/Src/main.c ****           sprintf(totalMinute_OperateTime_buff, "%dh%d", time_hour, time_minute);
 625:Core/Src/main.c ****           log_data(totalMinute_OperateTime_buff);
 626:Core/Src/main.c ****         }
 627:Core/Src/main.c ****       }
 628:Core/Src/main.c ****       break;
 629:Core/Src/main.c ****     case Task_Store:
 630:Core/Src/main.c ****       if (!Taskperform.TaskStore)
 631:Core/Src/main.c ****       {
 632:Core/Src/main.c ****         log_data("TASK STORE\n");
 633:Core/Src/main.c ****         Taskperform.TaskStore = true;
 634:Core/Src/main.c **** 
 635:Core/Src/main.c ****         fresult = f_open(&fil, "GSHT1.txt", FA_WRITE);
 636:Core/Src/main.c ****         if (fresult != FR_OK)
 637:Core/Src/main.c ****           log_data("open error...\n\n");
 638:Core/Src/main.c ****         else
 639:Core/Src/main.c ****           log_data("open successfully...\n\n");
 640:Core/Src/main.c **** 
 641:Core/Src/main.c ****         f_lseek(&fil, f_size(&fil));
 642:Core/Src/main.c **** 
 643:Core/Src/main.c ****         f_puts(l70DataAfterHadler.utcTime, &fil);
 644:Core/Src/main.c ****         f_puts("\t", &fil);
 645:Core/Src/main.c ****         f_puts(Card_Startbuff, &fil);
 646:Core/Src/main.c ****         f_puts("\t", &fil);
 647:Core/Src/main.c ****         f_puts(l70DataAfterHadler.latitude, &fil);
 648:Core/Src/main.c ****         f_puts("\t", &fil);
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 24


 649:Core/Src/main.c ****         f_puts(l70DataAfterHadler.longitude, &fil);
 650:Core/Src/main.c ****         f_puts("\t", &fil);
 651:Core/Src/main.c ****         f_puts(l70DataAfterHadler.Speed, &fil);
 652:Core/Src/main.c ****         f_puts("\t", &fil);
 653:Core/Src/main.c ****         f_puts(sensors.ds18_buff, &fil);
 654:Core/Src/main.c ****         f_puts("\n", &fil);
 655:Core/Src/main.c **** 
 656:Core/Src/main.c ****         fresult = f_close(&fil);
 657:Core/Src/main.c ****       }
 658:Core/Src/main.c ****       break;
 659:Core/Src/main.c ****     case Task_Display:
 660:Core/Src/main.c ****       if (!Taskperform.TaskDisplay)
 661:Core/Src/main.c ****       {
 662:Core/Src/main.c ****         log_data("TASK DISPLAY\n");
 663:Core/Src/main.c ****         Taskperform.TaskDisplay = true;
 664:Core/Src/main.c ****         SSD1306_GotoXY(75, 2);
 665:Core/Src/main.c ****         SSD1306_Puts(l70DataAfterHadler.utcTime, &Font_7x10, 1);
 666:Core/Src/main.c ****         SSD1306_GotoXY(30, 16);
 667:Core/Src/main.c ****         SSD1306_Puts(l70DataAfterHadler.Date, &Font_7x10, 1);
 668:Core/Src/main.c ****         SSD1306_GotoXY(25, 28);
 669:Core/Src/main.c ****         SSD1306_Puts(l70DataAfterHadler.longitude, &Font_7x10, 1);
 670:Core/Src/main.c ****         SSD1306_GotoXY(25, 40);
 671:Core/Src/main.c ****         SSD1306_Puts(l70DataAfterHadler.latitude, &Font_7x10, 1);
 672:Core/Src/main.c ****         SSD1306_GotoXY(35, 52);
 673:Core/Src/main.c ****         SSD1306_Puts(l70DataAfterHadler.Speed, &Font_7x10, 1);
 674:Core/Src/main.c ****         SSD1306_UpdateScreen();
 675:Core/Src/main.c ****       }
 676:Core/Src/main.c ****       break;
 677:Core/Src/main.c ****     case Task_LogoutOrRS232:
 678:Core/Src/main.c ****       // log_data("Task Logout or RS232\n");
 679:Core/Src/main.c ****       if (Logout)
 680:Core/Src/main.c ****       {
 681:Core/Src/main.c ****         Logout = false;
 682:Core/Src/main.c ****         sprintf(Card_Endbuff, "%02X%02X%02X%02X", CardID[0], CardID[1], CardID[2], CardID[3]);
 683:Core/Src/main.c ****         if (strcmp(Card_Startbuff, Card_Endbuff) != 0)
 684:Core/Src/main.c ****         {
 685:Core/Src/main.c ****           log_data("Tag invalid\n");
 686:Core/Src/main.c ****         }
 687:Core/Src/main.c ****         else
 688:Core/Src/main.c ****         {
 689:Core/Src/main.c ****           log_data("Tag valid, End of schedual\n");
 690:Core/Src/main.c ****           // write flash totaltime
 691:Core/Src/main.c ****           HAL_RTC_GetTime(&hrtc, &last_sTime, RTC_FORMAT_BIN);
 692:Core/Src/main.c ****           HAL_RTC_GetDate(&hrtc, &last_sDate, RTC_FORMAT_BIN);
 693:Core/Src/main.c ****           totalMinute_OperateTime = (60 * last_sTime.Hours + last_sTime.Minutes) - (60 * current_sT
 694:Core/Src/main.c ****           set_alarm(10);
 695:Core/Src/main.c ****         }
 696:Core/Src/main.c ****         // sleep
 697:Core/Src/main.c ****         HAL_Delay(1000);
 698:Core/Src/main.c ****         log_data("Device start sleep\n");
 699:Core/Src/main.c ****       }
 700:Core/Src/main.c ****       if (rs232_flag)
 701:Core/Src/main.c ****       {
 702:Core/Src/main.c ****         rs232_flag = false;
 703:Core/Src/main.c ****         if (strstr(rs232_buff, "Trich xuat du lieu\n") != NULL)
 704:Core/Src/main.c ****         {
 705:Core/Src/main.c ****           fresult = f_open(&fil, "GSHT1.txt", FA_READ);
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 25


 706:Core/Src/main.c ****           if (fresult != FR_OK)
 707:Core/Src/main.c ****             log_data("open error...\n\n");
 708:Core/Src/main.c ****           else
 709:Core/Src/main.c ****             log_data("open successfully...\n\n");
 710:Core/Src/main.c ****           while (f_gets(SD_read, sizeof(SD_read), &fil) != NULL)
 711:Core/Src/main.c ****           {
 712:Core/Src/main.c ****             rs232_logdata(SD_read);
 713:Core/Src/main.c ****           }
 714:Core/Src/main.c ****         }
 715:Core/Src/main.c ****       }
 716:Core/Src/main.c ****       break;
 717:Core/Src/main.c ****     }
 718:Core/Src/main.c ****     HAL_Delay(100);
 719:Core/Src/main.c **** #endif
 720:Core/Src/main.c ****     // HAL_Delay(100);
 721:Core/Src/main.c ****   }
 722:Core/Src/main.c ****   /* USER CODE END 3 */
 723:Core/Src/main.c **** }
 724:Core/Src/main.c **** 
 725:Core/Src/main.c **** /**
 726:Core/Src/main.c ****  * @brief System Clock Configuration
 727:Core/Src/main.c ****  * @retval None
 728:Core/Src/main.c ****  */
 729:Core/Src/main.c **** void SystemClock_Config(void)
 730:Core/Src/main.c **** {
 731:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 732:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 733:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 734:Core/Src/main.c **** 
 735:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 736:Core/Src/main.c ****    * in the RCC_OscInitTypeDef structure.
 737:Core/Src/main.c ****    */
 738:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE | RCC_OSCILLATORTYPE_LSE;
 739:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 740:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 741:Core/Src/main.c ****   RCC_OscInitStruct.LSEState = RCC_LSE_ON;
 742:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 743:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 744:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 745:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 746:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 747:Core/Src/main.c ****   {
 748:Core/Src/main.c ****     Error_Handler();
 749:Core/Src/main.c ****   }
 750:Core/Src/main.c **** 
 751:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 752:Core/Src/main.c ****    */
 753:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1 | R
 754:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 755:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 756:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 757:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 758:Core/Src/main.c **** 
 759:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 760:Core/Src/main.c ****   {
 761:Core/Src/main.c ****     Error_Handler();
 762:Core/Src/main.c ****   }
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 26


 763:Core/Src/main.c ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_RTC | RCC_PERIPHCLK_ADC;
 764:Core/Src/main.c ****   PeriphClkInit.RTCClockSelection = RCC_RTCCLKSOURCE_LSE;
 765:Core/Src/main.c ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV6;
 766:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 767:Core/Src/main.c ****   {
 768:Core/Src/main.c ****     Error_Handler();
 769:Core/Src/main.c ****   }
 770:Core/Src/main.c **** }
 771:Core/Src/main.c **** 
 772:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 773:Core/Src/main.c **** #if IF_SIUTATION
 774:Core/Src/main.c **** if (Type_Task == Task_Sensors && !Taskperform.TaskSensors)
 775:Core/Src/main.c **** {
 776:Core/Src/main.c ****   log_data("TAKS SENSORS\n");
 777:Core/Src/main.c ****   Taskperform.TaskSensors = true;
 778:Core/Src/main.c ****   log_data("TAKS SENSORS\n");
 779:Core/Src/main.c ****   Taskperform.TaskSensors = true;
 780:Core/Src/main.c ****   ds18_temp = (int)DS18B20_Result();
 781:Core/Src/main.c ****   // DHT11_Result(dht_temp, dht_hum);
 782:Core/Src/main.c ****   sprintf(ds18_buff, "%d", ds18_temp);
 783:Core/Src/main.c ****   // ftoa(ds18_temp, ds18_buff, 1);
 784:Core/Src/main.c ****   //  w25q32_pageWrite(0x00000000,ds18_buff);
 785:Core/Src/main.c ****   //  ftoa(dht_temp, dhtTemp_buff, 1);
 786:Core/Src/main.c ****   //  ftoa(dht_hum, dhtHum_buff, 1);
 787:Core/Src/main.c ****   log_data("Nhiet do thiet bi: ");
 788:Core/Src/main.c ****   log_data(ds18_buff);
 789:Core/Src/main.c ****   log_data("\n");
 790:Core/Src/main.c **** }
 791:Core/Src/main.c **** if (Type_Task == Task_GNSS && !Taskperform.TaskGNSS)
 792:Core/Src/main.c **** {
 793:Core/Src/main.c ****   log_data("TAKS GNSS\n");
 794:Core/Src/main.c ****   Taskperform.TaskGNSS = true;
 795:Core/Src/main.c ****   GPSResponse = l70_receiveGPS();
 796:Core/Src/main.c ****   l70_handleGPS(GPSResponse);
 797:Core/Src/main.c **** }
 798:Core/Src/main.c **** if (Type_Task == Task_SIM && !Taskperform.TaskSIM)
 799:Core/Src/main.c **** {
 800:Core/Src/main.c **** 
 801:Core/Src/main.c ****   log_data("TAKS SIM\n");
 802:Core/Src/main.c ****   Taskperform.TaskSIM = true;
 803:Core/Src/main.c ****   // mqtt_pub(TOPIC_TEST, Card_Startbuff);
 804:Core/Src/main.c ****   // mqtt_pub(TOPIC_TEST, ds18_buff);
 805:Core/Src/main.c ****   // // mqtt_pub(TOPIC_TEST, dhtHum_buff);
 806:Core/Src/main.c ****   // // mqtt_pub(TOPIC_TEST, dhtTemp_buff);
 807:Core/Src/main.c ****   // mqtt_pub(TOPIC_TEST, l70DataAfterHadler.longitude);
 808:Core/Src/main.c ****   // mqtt_pub(TOPIC_TEST, l70DataAfterHadler.latitude);
 809:Core/Src/main.c ****   // numCheck_time++;
 810:Core/Src/main.c ****   // if (numCheck_time == 10)
 811:Core/Src/main.c ****   // {
 812:Core/Src/main.c ****   //   numCheck_time = 0;
 813:Core/Src/main.c ****   //   HAL_RTC_GetTime(&hrtc, &last_sTime, RTC_FORMAT_BIN);
 814:Core/Src/main.c ****   //   HAL_RTC_GetDate(&hrtc, &last_sDate, RTC_FORMAT_BIN);
 815:Core/Src/main.c ****   //   totalMinute_OperateTime = (60 * last_sTime.Hours + last_sTime.Minutes) - (60 * current_sTime
 816:Core/Src/main.c ****   //   sprintf(totalMinute_OperateTime_buff, "totalTime: %d", totalMinute_OperateTime);
 817:Core/Src/main.c ****   //   mqtt_pub(TOPIC_TEST, totalMinute_OperateTime_buff);
 818:Core/Src/main.c ****   // }
 819:Core/Src/main.c **** }
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 27


 820:Core/Src/main.c **** if (Type_Task == Task_Store && !Taskperform.TaskStore)
 821:Core/Src/main.c **** {
 822:Core/Src/main.c ****   log_data("TASK STORE\n");
 823:Core/Src/main.c ****   Taskperform.TaskStore = true;
 824:Core/Src/main.c **** 
 825:Core/Src/main.c ****   fresult = f_open(&fil, "GSHT1.txt", FA_WRITE);
 826:Core/Src/main.c ****   if (fresult != FR_OK)
 827:Core/Src/main.c ****     log_data("open error...\n\n");
 828:Core/Src/main.c ****   else
 829:Core/Src/main.c ****     log_data("open successfully...\n\n");
 830:Core/Src/main.c **** 
 831:Core/Src/main.c ****   f_lseek(&fil, f_size(&fil));
 832:Core/Src/main.c **** 
 833:Core/Src/main.c ****   f_puts(l70DataAfterHadler.utcTime, &fil);
 834:Core/Src/main.c ****   f_puts("\t", &fil);
 835:Core/Src/main.c ****   f_puts(Card_Startbuff, &fil);
 836:Core/Src/main.c ****   f_puts("\t", &fil);
 837:Core/Src/main.c ****   f_puts(l70DataAfterHadler.latitude, &fil);
 838:Core/Src/main.c ****   f_puts("\t", &fil);
 839:Core/Src/main.c ****   f_puts(l70DataAfterHadler.longitude, &fil);
 840:Core/Src/main.c ****   f_puts("\t", &fil);
 841:Core/Src/main.c ****   f_puts(l70DataAfterHadler.Speed, &fil);
 842:Core/Src/main.c ****   f_puts("\t", &fil);
 843:Core/Src/main.c ****   f_puts(ds18_buff, &fil);
 844:Core/Src/main.c ****   f_puts("\n", &fil);
 845:Core/Src/main.c **** 
 846:Core/Src/main.c ****   fresult = f_close(&fil);
 847:Core/Src/main.c **** }
 848:Core/Src/main.c **** if (Type_Task == Task_Display && !Taskperform.TaskDisplay)
 849:Core/Src/main.c **** {
 850:Core/Src/main.c ****   log_data("TASK DISPLAY\n");
 851:Core/Src/main.c ****   Taskperform.TaskDisplay = true;
 852:Core/Src/main.c **** }
 853:Core/Src/main.c **** HAL_Delay(100);
 854:Core/Src/main.c **** #endif
 855:Core/Src/main.c **** // #if SIM
 856:Core/Src/main.c **** //   // sim7672_pwrOn();
 857:Core/Src/main.c **** //   // HAL_Delay(5000);
 858:Core/Src/main.c **** //   sim7672_init();
 859:Core/Src/main.c **** //   sim7672_check_signalStrength();
 860:Core/Src/main.c **** //   HAL_Delay(500);
 861:Core/Src/main.c **** //   // mqtt_disconnectServer();
 862:Core/Src/main.c **** //   HAL_Delay(1000);
 863:Core/Src/main.c **** //   mqtt_connectServer();
 864:Core/Src/main.c **** //   mqtt_pub("test1z", "123456789");
 865:Core/Src/main.c **** //   HAL_Delay(500);
 866:Core/Src/main.c **** //   mqtt_sub("test1z");
 867:Core/Src/main.c **** // #endif
 868:Core/Src/main.c **** 
 869:Core/Src/main.c **** // #if GPS
 870:Core/Src/main.c **** //   sim7672_pwrOff();
 871:Core/Src/main.c **** //   l70_init();
 872:Core/Src/main.c **** //   HAL_Delay(1000);
 873:Core/Src/main.c **** // #endif
 874:Core/Src/main.c **** 
 875:Core/Src/main.c **** // #if SDCard
 876:Core/Src/main.c **** 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 28


 877:Core/Src/main.c **** //   fresult = f_mount(&fs, "/", 1);
 878:Core/Src/main.c **** //   if (fresult != FR_OK)
 879:Core/Src/main.c **** //     log_data("ERROR!!! in mounting SD CARD...\n\n");
 880:Core/Src/main.c **** //   else
 881:Core/Src/main.c **** //     log_data("*******************\nSD CARD mounted successfully...\n\n");
 882:Core/Src/main.c **** 
 883:Core/Src/main.c **** //   /* ********************************Create second file with read write access and open it */
 884:Core/Src/main.c **** //   fresult = f_open(&fil, "file2.txt", FA_WRITE);
 885:Core/Src/main.c **** //   if (fresult != FR_OK)
 886:Core/Src/main.c **** //     log_data("open error...\n\n");
 887:Core/Src/main.c **** //   else
 888:Core/Src/main.c **** //     log_data("open successfully...\n\n");
 889:Core/Src/main.c **** //   // f_lseek(&fil, f_size(&fil));
 890:Core/Src/main.c **** //   f_puts("This data is from the FILE1.txt. And it was written using ...f_puts... \nthis full fun
 891:Core/Src/main.c **** //   // f_puts("\nThis is updated data and it should be in the end",&fil);
 892:Core/Src/main.c **** //   fresult = f_close(&fil);
 893:Core/Src/main.c **** //   if (fresult != FR_OK)
 894:Core/Src/main.c **** //     log_data("write error...\n\n");
 895:Core/Src/main.c **** //   else
 896:Core/Src/main.c **** //     log_data("write successfully...\n\n");
 897:Core/Src/main.c **** //   log_data("File2.txt created and data is written\n");
 898:Core/Src/main.c **** //   // clearing buffer to show that result obtained is from the file
 899:Core/Src/main.c **** 
 900:Core/Src/main.c **** //   /* ***********************************Open second file to read */
 901:Core/Src/main.c **** //   fresult = f_open(&fil, "file2.txt", FA_READ);
 902:Core/Src/main.c **** //   if (fresult != FR_OK)
 903:Core/Src/main.c **** //     log_data("open error...\n\n");
 904:Core/Src/main.c **** //   else
 905:Core/Src/main.c **** //     log_data("open successfully...\n\n");
 906:Core/Src/main.c **** 
 907:Core/Src/main.c **** //   /* Read data from the file
 908:Core/Src/main.c **** //    * Please see the function details for the arguments */
 909:Core/Src/main.c **** //   // f_gets(buffer, f_size(&fil), &fil);
 910:Core/Src/main.c **** //   while (f_gets(buffer, sizeof(buffer), &fil) != NULL)
 911:Core/Src/main.c **** //   {
 912:Core/Src/main.c **** //     // Xử lý dữ liệu theo nhu cầu của bạn, ví dụ: gửi qua UART
 913:Core/Src/main.c **** //     log_data(buffer);
 914:Core/Src/main.c **** //   }
 915:Core/Src/main.c **** //   // f_read (&fil, buffer, f_size(&fil), &br);
 916:Core/Src/main.c **** //   log_data("data: ");
 917:Core/Src/main.c **** //   log_data(buffer);
 918:Core/Src/main.c **** //   log_data("\n\n");
 919:Core/Src/main.c **** 
 920:Core/Src/main.c **** //   /* Close file */
 921:Core/Src/main.c **** //   f_close(&fil);
 922:Core/Src/main.c **** // // HAL_GPIO_WritePin(BUZZER_GPIO_Port, BUZZER_Pin, GPIO_PIN_SET);
 923:Core/Src/main.c **** // // HAL_Delay(1000);
 924:Core/Src/main.c **** // // HAL_GPIO_WritePin(BUZZER_GPIO_Port,BUZZER_Pin,GPIO_PIN_RESET);
 925:Core/Src/main.c **** // #endif
 926:Core/Src/main.c **** /* USER CODE END 4 */
 927:Core/Src/main.c **** 
 928:Core/Src/main.c **** /**
 929:Core/Src/main.c ****  * @brief  This function is executed in case of error occurrence.
 930:Core/Src/main.c ****  * @retval None
 931:Core/Src/main.c ****  */
 932:Core/Src/main.c **** void Error_Handler(void)
 933:Core/Src/main.c **** {
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 29


 600              		.loc 1 933 1 view -0
 601              		.cfi_startproc
 602              		@ Volatile: function does not return.
 603              		@ args = 0, pretend = 0, frame = 0
 604              		@ frame_needed = 0, uses_anonymous_args = 0
 605              		@ link register save eliminated.
 934:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 935:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 936:Core/Src/main.c ****   __disable_irq();
 606              		.loc 1 936 3 view .LVU138
 607              	.LBB5:
 608              	.LBI5:
 609              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 30


  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 31


 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 610              		.loc 2 140 27 view .LVU139
 611              	.LBB6:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 612              		.loc 2 142 3 view .LVU140
 613              		.syntax unified
 614              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 615 0000 72B6     		cpsid i
 616              	@ 0 "" 2
 617              		.thumb
 618              		.syntax unified
 619              	.L49:
 620              	.LBE6:
 621              	.LBE5:
 937:Core/Src/main.c ****   while (1)
 622              		.loc 1 937 3 discriminator 1 view .LVU141
 938:Core/Src/main.c ****   {
 939:Core/Src/main.c ****   }
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 32


 623              		.loc 1 939 3 discriminator 1 view .LVU142
 937:Core/Src/main.c ****   while (1)
 624              		.loc 1 937 9 discriminator 1 view .LVU143
 625 0002 FEE7     		b	.L49
 626              		.cfi_endproc
 627              	.LFE78:
 629              		.section	.text.set_alarm,"ax",%progbits
 630              		.align	1
 631              		.global	set_alarm
 632              		.syntax unified
 633              		.thumb
 634              		.thumb_func
 636              	set_alarm:
 637              	.LVL40:
 638              	.LFB70:
 268:Core/Src/main.c ****   RTC_AlarmTypeDef sAlarm = {0};
 639              		.loc 1 268 1 view -0
 640              		.cfi_startproc
 641              		@ args = 0, pretend = 0, frame = 8
 642              		@ frame_needed = 0, uses_anonymous_args = 0
 268:Core/Src/main.c ****   RTC_AlarmTypeDef sAlarm = {0};
 643              		.loc 1 268 1 is_stmt 0 view .LVU145
 644 0000 00B5     		push	{lr}
 645              	.LCFI6:
 646              		.cfi_def_cfa_offset 4
 647              		.cfi_offset 14, -4
 648 0002 83B0     		sub	sp, sp, #12
 649              	.LCFI7:
 650              		.cfi_def_cfa_offset 16
 269:Core/Src/main.c ****   sAlarm.AlarmTime.Hours = current_sTime.Hours + intervalHour;
 651              		.loc 1 269 3 is_stmt 1 view .LVU146
 269:Core/Src/main.c ****   sAlarm.AlarmTime.Hours = current_sTime.Hours + intervalHour;
 652              		.loc 1 269 20 is_stmt 0 view .LVU147
 653 0004 0022     		movs	r2, #0
 654 0006 0092     		str	r2, [sp]
 655 0008 0192     		str	r2, [sp, #4]
 270:Core/Src/main.c ****   sAlarm.AlarmTime.Minutes = current_sTime.Minutes;
 656              		.loc 1 270 3 is_stmt 1 view .LVU148
 270:Core/Src/main.c ****   sAlarm.AlarmTime.Minutes = current_sTime.Minutes;
 657              		.loc 1 270 41 is_stmt 0 view .LVU149
 658 000a 0A4B     		ldr	r3, .L54
 659 000c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 270:Core/Src/main.c ****   sAlarm.AlarmTime.Minutes = current_sTime.Minutes;
 660              		.loc 1 270 48 view .LVU150
 661 000e 0144     		add	r1, r1, r0
 270:Core/Src/main.c ****   sAlarm.AlarmTime.Minutes = current_sTime.Minutes;
 662              		.loc 1 270 26 view .LVU151
 663 0010 8DF80010 		strb	r1, [sp]
 271:Core/Src/main.c ****   sAlarm.AlarmTime.Seconds = current_sTime.Seconds;
 664              		.loc 1 271 3 is_stmt 1 view .LVU152
 271:Core/Src/main.c ****   sAlarm.AlarmTime.Seconds = current_sTime.Seconds;
 665              		.loc 1 271 43 is_stmt 0 view .LVU153
 666 0014 5978     		ldrb	r1, [r3, #1]	@ zero_extendqisi2
 271:Core/Src/main.c ****   sAlarm.AlarmTime.Seconds = current_sTime.Seconds;
 667              		.loc 1 271 28 view .LVU154
 668 0016 8DF80110 		strb	r1, [sp, #1]
 272:Core/Src/main.c ****   sAlarm.Alarm = RTC_ALARM_A;
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 33


 669              		.loc 1 272 3 is_stmt 1 view .LVU155
 272:Core/Src/main.c ****   sAlarm.Alarm = RTC_ALARM_A;
 670              		.loc 1 272 43 is_stmt 0 view .LVU156
 671 001a 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 272:Core/Src/main.c ****   sAlarm.Alarm = RTC_ALARM_A;
 672              		.loc 1 272 28 view .LVU157
 673 001c 8DF80230 		strb	r3, [sp, #2]
 273:Core/Src/main.c ****   if (HAL_RTC_SetAlarm_IT(&hrtc, &sAlarm, RTC_FORMAT_BIN) != HAL_OK)
 674              		.loc 1 273 3 is_stmt 1 view .LVU158
 274:Core/Src/main.c ****   {
 675              		.loc 1 274 3 view .LVU159
 274:Core/Src/main.c ****   {
 676              		.loc 1 274 7 is_stmt 0 view .LVU160
 677 0020 6946     		mov	r1, sp
 678 0022 0548     		ldr	r0, .L54+4
 679              	.LVL41:
 274:Core/Src/main.c ****   {
 680              		.loc 1 274 7 view .LVU161
 681 0024 FFF7FEFF 		bl	HAL_RTC_SetAlarm_IT
 682              	.LVL42:
 274:Core/Src/main.c ****   {
 683              		.loc 1 274 6 view .LVU162
 684 0028 10B9     		cbnz	r0, .L53
 278:Core/Src/main.c **** 
 685              		.loc 1 278 1 view .LVU163
 686 002a 03B0     		add	sp, sp, #12
 687              	.LCFI8:
 688              		.cfi_remember_state
 689              		.cfi_def_cfa_offset 4
 690              		@ sp needed
 691 002c 5DF804FB 		ldr	pc, [sp], #4
 692              	.L53:
 693              	.LCFI9:
 694              		.cfi_restore_state
 276:Core/Src/main.c ****   }
 695              		.loc 1 276 5 is_stmt 1 view .LVU164
 696 0030 FFF7FEFF 		bl	Error_Handler
 697              	.LVL43:
 698              	.L55:
 699              		.align	2
 700              	.L54:
 701 0034 00000000 		.word	.LANCHOR16
 702 0038 00000000 		.word	hrtc
 703              		.cfi_endproc
 704              	.LFE70:
 706              		.section	.text.SystemClock_Config,"ax",%progbits
 707              		.align	1
 708              		.global	SystemClock_Config
 709              		.syntax unified
 710              		.thumb
 711              		.thumb_func
 713              	SystemClock_Config:
 714              	.LFB77:
 730:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 715              		.loc 1 730 1 view -0
 716              		.cfi_startproc
 717              		@ args = 0, pretend = 0, frame = 88
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 34


 718              		@ frame_needed = 0, uses_anonymous_args = 0
 719 0000 00B5     		push	{lr}
 720              	.LCFI10:
 721              		.cfi_def_cfa_offset 4
 722              		.cfi_offset 14, -4
 723 0002 97B0     		sub	sp, sp, #92
 724              	.LCFI11:
 725              		.cfi_def_cfa_offset 96
 731:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 726              		.loc 1 731 3 view .LVU166
 731:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 727              		.loc 1 731 22 is_stmt 0 view .LVU167
 728 0004 2822     		movs	r2, #40
 729 0006 0021     		movs	r1, #0
 730 0008 0CA8     		add	r0, sp, #48
 731 000a FFF7FEFF 		bl	memset
 732              	.LVL44:
 732:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 733              		.loc 1 732 3 is_stmt 1 view .LVU168
 732:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 734              		.loc 1 732 22 is_stmt 0 view .LVU169
 735 000e 0023     		movs	r3, #0
 736 0010 0793     		str	r3, [sp, #28]
 737 0012 0893     		str	r3, [sp, #32]
 738 0014 0993     		str	r3, [sp, #36]
 739 0016 0A93     		str	r3, [sp, #40]
 740 0018 0B93     		str	r3, [sp, #44]
 733:Core/Src/main.c **** 
 741              		.loc 1 733 3 is_stmt 1 view .LVU170
 733:Core/Src/main.c **** 
 742              		.loc 1 733 28 is_stmt 0 view .LVU171
 743 001a 0193     		str	r3, [sp, #4]
 744 001c 0293     		str	r3, [sp, #8]
 745 001e 0393     		str	r3, [sp, #12]
 746 0020 0493     		str	r3, [sp, #16]
 747 0022 0593     		str	r3, [sp, #20]
 748 0024 0693     		str	r3, [sp, #24]
 738:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 749              		.loc 1 738 3 is_stmt 1 view .LVU172
 738:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 750              		.loc 1 738 36 is_stmt 0 view .LVU173
 751 0026 0523     		movs	r3, #5
 752 0028 0C93     		str	r3, [sp, #48]
 739:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 753              		.loc 1 739 3 is_stmt 1 view .LVU174
 739:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 754              		.loc 1 739 30 is_stmt 0 view .LVU175
 755 002a 4FF48033 		mov	r3, #65536
 756 002e 0D93     		str	r3, [sp, #52]
 740:Core/Src/main.c ****   RCC_OscInitStruct.LSEState = RCC_LSE_ON;
 757              		.loc 1 740 3 is_stmt 1 view .LVU176
 741:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 758              		.loc 1 741 3 view .LVU177
 741:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 759              		.loc 1 741 30 is_stmt 0 view .LVU178
 760 0030 0122     		movs	r2, #1
 761 0032 0F92     		str	r2, [sp, #60]
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 35


 742:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 762              		.loc 1 742 3 is_stmt 1 view .LVU179
 742:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 763              		.loc 1 742 30 is_stmt 0 view .LVU180
 764 0034 1092     		str	r2, [sp, #64]
 743:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 765              		.loc 1 743 3 is_stmt 1 view .LVU181
 743:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 766              		.loc 1 743 34 is_stmt 0 view .LVU182
 767 0036 0222     		movs	r2, #2
 768 0038 1392     		str	r2, [sp, #76]
 744:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 769              		.loc 1 744 3 is_stmt 1 view .LVU183
 744:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 770              		.loc 1 744 35 is_stmt 0 view .LVU184
 771 003a 1493     		str	r3, [sp, #80]
 745:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 772              		.loc 1 745 3 is_stmt 1 view .LVU185
 745:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 773              		.loc 1 745 32 is_stmt 0 view .LVU186
 774 003c 4FF4E013 		mov	r3, #1835008
 775 0040 1593     		str	r3, [sp, #84]
 746:Core/Src/main.c ****   {
 776              		.loc 1 746 3 is_stmt 1 view .LVU187
 746:Core/Src/main.c ****   {
 777              		.loc 1 746 7 is_stmt 0 view .LVU188
 778 0042 0CA8     		add	r0, sp, #48
 779 0044 FFF7FEFF 		bl	HAL_RCC_OscConfig
 780              	.LVL45:
 746:Core/Src/main.c ****   {
 781              		.loc 1 746 6 view .LVU189
 782 0048 E0B9     		cbnz	r0, .L61
 753:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 783              		.loc 1 753 3 is_stmt 1 view .LVU190
 753:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 784              		.loc 1 753 31 is_stmt 0 view .LVU191
 785 004a 0F23     		movs	r3, #15
 786 004c 0793     		str	r3, [sp, #28]
 754:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 787              		.loc 1 754 3 is_stmt 1 view .LVU192
 754:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 788              		.loc 1 754 34 is_stmt 0 view .LVU193
 789 004e 0221     		movs	r1, #2
 790 0050 0891     		str	r1, [sp, #32]
 755:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 791              		.loc 1 755 3 is_stmt 1 view .LVU194
 755:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 792              		.loc 1 755 35 is_stmt 0 view .LVU195
 793 0052 0023     		movs	r3, #0
 794 0054 0993     		str	r3, [sp, #36]
 756:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 795              		.loc 1 756 3 is_stmt 1 view .LVU196
 756:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 796              		.loc 1 756 36 is_stmt 0 view .LVU197
 797 0056 4FF48062 		mov	r2, #1024
 798 005a 0A92     		str	r2, [sp, #40]
 757:Core/Src/main.c **** 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 36


 799              		.loc 1 757 3 is_stmt 1 view .LVU198
 757:Core/Src/main.c **** 
 800              		.loc 1 757 36 is_stmt 0 view .LVU199
 801 005c 0B93     		str	r3, [sp, #44]
 759:Core/Src/main.c ****   {
 802              		.loc 1 759 3 is_stmt 1 view .LVU200
 759:Core/Src/main.c ****   {
 803              		.loc 1 759 7 is_stmt 0 view .LVU201
 804 005e 07A8     		add	r0, sp, #28
 805 0060 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 806              	.LVL46:
 759:Core/Src/main.c ****   {
 807              		.loc 1 759 6 view .LVU202
 808 0064 80B9     		cbnz	r0, .L62
 763:Core/Src/main.c ****   PeriphClkInit.RTCClockSelection = RCC_RTCCLKSOURCE_LSE;
 809              		.loc 1 763 3 is_stmt 1 view .LVU203
 763:Core/Src/main.c ****   PeriphClkInit.RTCClockSelection = RCC_RTCCLKSOURCE_LSE;
 810              		.loc 1 763 38 is_stmt 0 view .LVU204
 811 0066 0323     		movs	r3, #3
 812 0068 0193     		str	r3, [sp, #4]
 764:Core/Src/main.c ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV6;
 813              		.loc 1 764 3 is_stmt 1 view .LVU205
 764:Core/Src/main.c ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV6;
 814              		.loc 1 764 35 is_stmt 0 view .LVU206
 815 006a 4FF48073 		mov	r3, #256
 816 006e 0293     		str	r3, [sp, #8]
 765:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 817              		.loc 1 765 3 is_stmt 1 view .LVU207
 765:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 818              		.loc 1 765 35 is_stmt 0 view .LVU208
 819 0070 4FF40043 		mov	r3, #32768
 820 0074 0393     		str	r3, [sp, #12]
 766:Core/Src/main.c ****   {
 821              		.loc 1 766 3 is_stmt 1 view .LVU209
 766:Core/Src/main.c ****   {
 822              		.loc 1 766 7 is_stmt 0 view .LVU210
 823 0076 01A8     		add	r0, sp, #4
 824 0078 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 825              	.LVL47:
 766:Core/Src/main.c ****   {
 826              		.loc 1 766 6 view .LVU211
 827 007c 30B9     		cbnz	r0, .L63
 770:Core/Src/main.c **** 
 828              		.loc 1 770 1 view .LVU212
 829 007e 17B0     		add	sp, sp, #92
 830              	.LCFI12:
 831              		.cfi_remember_state
 832              		.cfi_def_cfa_offset 4
 833              		@ sp needed
 834 0080 5DF804FB 		ldr	pc, [sp], #4
 835              	.L61:
 836              	.LCFI13:
 837              		.cfi_restore_state
 748:Core/Src/main.c ****   }
 838              		.loc 1 748 5 is_stmt 1 view .LVU213
 839 0084 FFF7FEFF 		bl	Error_Handler
 840              	.LVL48:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 37


 841              	.L62:
 761:Core/Src/main.c ****   }
 842              		.loc 1 761 5 view .LVU214
 843 0088 FFF7FEFF 		bl	Error_Handler
 844              	.LVL49:
 845              	.L63:
 768:Core/Src/main.c ****   }
 846              		.loc 1 768 5 view .LVU215
 847 008c FFF7FEFF 		bl	Error_Handler
 848              	.LVL50:
 849              		.cfi_endproc
 850              	.LFE77:
 852              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 853              		.align	2
 854              	.LC1:
 855 0000 0A475348 		.ascii	"\012GSHT START\012\000"
 855      54205354 
 855      4152540A 
 855      00
 856 000d 000000   		.align	2
 857              	.LC2:
 858 0010 52464944 		.ascii	"RFID init successfull\012\000"
 858      20696E69 
 858      74207375 
 858      63636573 
 858      7366756C 
 859 0027 00       		.align	2
 860              	.LC3:
 861 0028 474E5353 		.ascii	"GNSS init successfull\012\000"
 861      20696E69 
 861      74207375 
 861      63636573 
 861      7366756C 
 862 003f 00       		.align	2
 863              	.LC4:
 864 0040 323A3533 		.ascii	"2:53\000"
 864      00
 865 0045 000000   		.align	2
 866              	.LC5:
 867 0048 312F312F 		.ascii	"1/1/2023\000"
 867      32303233 
 867      00
 868 0051 000000   		.align	2
 869              	.LC6:
 870 0054 4C6F6E3A 		.ascii	"Lon:            E\000"
 870      20202020 
 870      20202020 
 870      20202020 
 870      4500
 871 0066 0000     		.align	2
 872              	.LC7:
 873 0068 4C61743A 		.ascii	"Lat:           N\000"
 873      20202020 
 873      20202020 
 873      2020204E 
 873      00
 874 0079 000000   		.align	2
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 38


 875              	.LC8:
 876 007c 53706565 		.ascii	"Speed:      m/s\000"
 876      643A2020 
 876      20202020 
 876      6D2F7300 
 877              		.align	2
 878              	.LC9:
 879 008c 2F00     		.ascii	"/\000"
 880 008e 0000     		.align	2
 881              	.LC10:
 882 0090 4552524F 		.ascii	"ERROR!!! in mounting SD CARD...\012\012\000"
 882      52212121 
 882      20696E20 
 882      6D6F756E 
 882      74696E67 
 883 00b2 0000     		.align	2
 884              	.LC11:
 885 00b4 53442043 		.ascii	"SD CARD mounted successfully...\012\012\000"
 885      41524420 
 885      6D6F756E 
 885      74656420 
 885      73756363 
 886 00d6 0000     		.align	2
 887              	.LC12:
 888 00d8 4F4B00   		.ascii	"OK\000"
 889 00db 00       		.align	2
 890              	.LC13:
 891 00dc 36344334 		.ascii	"64C43951\000"
 891      33393531 
 891      00
 892 00e5 000000   		.align	2
 893              	.LC14:
 894 00e8 4E677579 		.ascii	"Nguyen_Huy_Hoang\000"
 894      656E5F48 
 894      75795F48 
 894      6F616E67 
 894      00
 895 00f9 000000   		.align	2
 896              	.LC15:
 897 00fc 5649455F 		.ascii	"VIE_0987035442\000"
 897      30393837 
 897      30333534 
 897      343200
 898 010b 00       		.align	2
 899              	.LC16:
 900 010c 33304E2D 		.ascii	"30N-1234\000"
 900      31323334 
 900      00
 901 0115 000000   		.align	2
 902              	.LC17:
 903 0118 31323433 		.ascii	"1243\000"
 903      00
 904 011d 000000   		.align	2
 905              	.LC18:
 906 0120 4E677579 		.ascii	"Nguyen_Van_A\000"
 906      656E5F56 
 906      616E5F41 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 39


 906      00
 907 012d 000000   		.align	2
 908              	.LC19:
 909 0130 5649455F 		.ascii	"VIE_0123562571\000"
 909      30313233 
 909      35363235 
 909      373100
 910 013f 00       		.align	2
 911              	.LC20:
 912 0140 33304E2D 		.ascii	"30N-3611\000"
 912      33363131 
 912      00
 913 0149 000000   		.align	2
 914              	.LC21:
 915 014c 47534854 		.ascii	"GSHT_ID01\000"
 915      5F494430 
 915      3100
 916 0156 0000     		.align	2
 917              	.LC22:
 918 0158 25303258 		.ascii	"%02X%02X%02X%02X\000"
 918      25303258 
 918      25303258 
 918      25303258 
 918      00
 919 0169 000000   		.align	2
 920              	.LC23:
 921 016c 49443120 		.ascii	"ID1 TAG invalid\012\000"
 921      54414720 
 921      696E7661 
 921      6C69640A 
 921      00
 922 017d 000000   		.align	2
 923              	.LC24:
 924 0180 49443220 		.ascii	"ID2 TAG invalid\012\000"
 924      54414720 
 924      696E7661 
 924      6C69640A 
 924      00
 925 0191 000000   		.align	2
 926              	.LC25:
 927 0194 49442054 		.ascii	"ID TAG valid\012\000"
 927      41472076 
 927      616C6964 
 927      0A00
 928 01a2 0000     		.align	2
 929              	.LC26:
 930 01a4 25643A25 		.ascii	"%d:%d:%d\000"
 930      643A2564 
 930      00
 931 01ad 000000   		.align	2
 932              	.LC27:
 933 01b0 0A00     		.ascii	"\012\000"
 934 01b2 0000     		.align	2
 935              	.LC28:
 936 01b4 25642F25 		.ascii	"%d/%d/%d\000"
 936      642F2564 
 936      00
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 40


 937 01bd 000000   		.align	2
 938              	.LC29:
 939 01c0 25646825 		.ascii	"%dh%d\000"
 939      6400
 940 01c6 0000     		.align	2
 941              	.LC30:
 942 01c8 2E303030 		.ascii	".000000\000"
 942      30303000 
 943              		.align	2
 944              	.LC31:
 945 01d0 0A475348 		.ascii	"\012GSHT Start\012\000"
 945      54205374 
 945      6172740A 
 945      00
 946 01dd 000000   		.align	2
 947              	.LC32:
 948 01e0 54414B53 		.ascii	"TAKS SENSORS\012\000"
 948      2053454E 
 948      534F5253 
 948      0A00
 949              		.global	__aeabi_f2iz
 950 01ee 0000     		.align	2
 951              	.LC33:
 952 01f0 256400   		.ascii	"%d\000"
 953 01f3 00       		.align	2
 954              	.LC34:
 955 01f4 323000   		.ascii	"20\000"
 956 01f7 00       		.align	2
 957              	.LC35:
 958 01f8 383000   		.ascii	"80\000"
 959 01fb 00       		.align	2
 960              	.LC36:
 961 01fc 4E686965 		.ascii	"Nhiet do thiet bi: \000"
 961      7420646F 
 961      20746869 
 961      65742062 
 961      693A2000 
 962              		.align	2
 963              	.LC37:
 964 0210 54414B53 		.ascii	"TAKS GNSS\012\000"
 964      20474E53 
 964      530A00
 965 021b 00       		.align	2
 966              	.LC38:
 967 021c 54414B53 		.ascii	"TAKS SIM\012\000"
 967      2053494D 
 967      0A00
 968 0226 0000     		.align	2
 969              	.LC39:
 970 0228 7B226F6E 		.ascii	"{\"online\":%s,\"offline\":%s,\"sleep\":%s,\"device"
 970      6C696E65 
 970      223A2573 
 970      2C226F66 
 970      666C696E 
 971 0254 4944223A 		.ascii	"ID\":%s,\"license\":%s,\"name\":%s,\"phone\":%s,\"s"
 971      25732C22 
 971      6C696365 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 41


 971      6E736522 
 971      3A25732C 
 972 027f 69676E61 		.ascii	"ignal\":%s,\"latitude\":%s,\"longitude\":%s,\"ds18b"
 972      6C223A25 
 972      732C226C 
 972      61746974 
 972      75646522 
 973 02ac 3230223A 		.ascii	"20\":%s,\"dhttemp\":%s,\"dhthum\":%s,\"fuel\":%s}\000"
 973      25732C22 
 973      64687474 
 973      656D7022 
 973      3A25732C 
 974 02d7 00       		.align	2
 975              	.LC40:
 976 02d8 76312F64 		.ascii	"v1/devices/me/telemetry\000"
 976      65766963 
 976      65732F6D 
 976      652F7465 
 976      6C656D65 
 977              		.align	2
 978              	.LC41:
 979 02f0 5441534B 		.ascii	"TASK STORE\012\000"
 979      2053544F 
 979      52450A00 
 980              		.align	2
 981              	.LC42:
 982 02fc 47534854 		.ascii	"GSHT1.txt\000"
 982      312E7478 
 982      7400
 983 0306 0000     		.align	2
 984              	.LC43:
 985 0308 6F70656E 		.ascii	"open error...\012\012\000"
 985      20657272 
 985      6F722E2E 
 985      2E0A0A00 
 986              		.align	2
 987              	.LC44:
 988 0318 6F70656E 		.ascii	"open successfully...\012\012\000"
 988      20737563 
 988      63657373 
 988      66756C6C 
 988      792E2E2E 
 989 032f 00       		.align	2
 990              	.LC45:
 991 0330 0900     		.ascii	"\011\000"
 992 0332 0000     		.align	2
 993              	.LC46:
 994 0334 5441534B 		.ascii	"TASK DISPLAY\012\000"
 994      20444953 
 994      504C4159 
 994      0A00
 995 0342 0000     		.align	2
 996              	.LC47:
 997 0344 54616720 		.ascii	"Tag invalid\012\000"
 997      696E7661 
 997      6C69640A 
 997      00
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 42


 998 0351 000000   		.align	2
 999              	.LC48:
 1000 0354 54616720 		.ascii	"Tag valid, End of schedual\012\000"
 1000      76616C69 
 1000      642C2045 
 1000      6E64206F 
 1000      66207363 
 1001              		.align	2
 1002              	.LC49:
 1003 0370 44657669 		.ascii	"Device start sleep\012\000"
 1003      63652073 
 1003      74617274 
 1003      20736C65 
 1003      65700A00 
 1004              		.align	2
 1005              	.LC50:
 1006 0384 54726963 		.ascii	"Trich xuat du lieu\012\000"
 1006      68207875 
 1006      61742064 
 1006      75206C69 
 1006      65750A00 
 1007              		.section	.text.main,"ax",%progbits
 1008              		.align	1
 1009              		.global	main
 1010              		.syntax unified
 1011              		.thumb
 1012              		.thumb_func
 1014              	main:
 1015              	.LFB76:
 395:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 1016              		.loc 1 395 1 view -0
 1017              		.cfi_startproc
 1018              		@ Volatile: function does not return.
 1019              		@ args = 0, pretend = 0, frame = 0
 1020              		@ frame_needed = 0, uses_anonymous_args = 0
 1021 0000 80B5     		push	{r7, lr}
 1022              	.LCFI14:
 1023              		.cfi_def_cfa_offset 8
 1024              		.cfi_offset 7, -8
 1025              		.cfi_offset 14, -4
 1026 0002 8CB0     		sub	sp, sp, #48
 1027              	.LCFI15:
 1028              		.cfi_def_cfa_offset 56
 403:Core/Src/main.c **** 
 1029              		.loc 1 403 3 view .LVU217
 1030 0004 FFF7FEFF 		bl	HAL_Init
 1031              	.LVL51:
 410:Core/Src/main.c **** 
 1032              		.loc 1 410 3 view .LVU218
 1033 0008 FFF7FEFF 		bl	SystemClock_Config
 1034              	.LVL52:
 417:Core/Src/main.c ****   MX_ADC1_Init();
 1035              		.loc 1 417 3 view .LVU219
 1036 000c FFF7FEFF 		bl	MX_GPIO_Init
 1037              	.LVL53:
 418:Core/Src/main.c ****   MX_SPI1_Init();
 1038              		.loc 1 418 3 view .LVU220
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 43


 1039 0010 FFF7FEFF 		bl	MX_ADC1_Init
 1040              	.LVL54:
 419:Core/Src/main.c ****   MX_ADC2_Init();
 1041              		.loc 1 419 3 view .LVU221
 1042 0014 FFF7FEFF 		bl	MX_SPI1_Init
 1043              	.LVL55:
 420:Core/Src/main.c ****   MX_TIM1_Init();
 1044              		.loc 1 420 3 view .LVU222
 1045 0018 FFF7FEFF 		bl	MX_ADC2_Init
 1046              	.LVL56:
 421:Core/Src/main.c ****   MX_UART5_Init();
 1047              		.loc 1 421 3 view .LVU223
 1048 001c FFF7FEFF 		bl	MX_TIM1_Init
 1049              	.LVL57:
 422:Core/Src/main.c ****   MX_I2C1_Init();
 1050              		.loc 1 422 3 view .LVU224
 1051 0020 FFF7FEFF 		bl	MX_UART5_Init
 1052              	.LVL58:
 423:Core/Src/main.c ****   MX_SPI2_Init();
 1053              		.loc 1 423 3 view .LVU225
 1054 0024 FFF7FEFF 		bl	MX_I2C1_Init
 1055              	.LVL59:
 424:Core/Src/main.c ****   MX_SPI3_Init();
 1056              		.loc 1 424 3 view .LVU226
 1057 0028 FFF7FEFF 		bl	MX_SPI2_Init
 1058              	.LVL60:
 425:Core/Src/main.c ****   MX_UART4_Init();
 1059              		.loc 1 425 3 view .LVU227
 1060 002c FFF7FEFF 		bl	MX_SPI3_Init
 1061              	.LVL61:
 426:Core/Src/main.c ****   MX_USART1_UART_Init();
 1062              		.loc 1 426 3 view .LVU228
 1063 0030 FFF7FEFF 		bl	MX_UART4_Init
 1064              	.LVL62:
 427:Core/Src/main.c ****   MX_USART2_UART_Init();
 1065              		.loc 1 427 3 view .LVU229
 1066 0034 FFF7FEFF 		bl	MX_USART1_UART_Init
 1067              	.LVL63:
 428:Core/Src/main.c ****   MX_TIM2_Init();
 1068              		.loc 1 428 3 view .LVU230
 1069 0038 FFF7FEFF 		bl	MX_USART2_UART_Init
 1070              	.LVL64:
 429:Core/Src/main.c ****   MX_TIM3_Init();
 1071              		.loc 1 429 3 view .LVU231
 1072 003c FFF7FEFF 		bl	MX_TIM2_Init
 1073              	.LVL65:
 430:Core/Src/main.c ****   MX_RTC_Init();
 1074              		.loc 1 430 3 view .LVU232
 1075 0040 FFF7FEFF 		bl	MX_TIM3_Init
 1076              	.LVL66:
 431:Core/Src/main.c ****   MX_FATFS_Init();
 1077              		.loc 1 431 3 view .LVU233
 1078 0044 FFF7FEFF 		bl	MX_RTC_Init
 1079              	.LVL67:
 432:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1080              		.loc 1 432 3 view .LVU234
 1081 0048 FFF7FEFF 		bl	MX_FATFS_Init
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 44


 1082              	.LVL68:
 434:Core/Src/main.c ****   // init all
 1083              		.loc 1 434 3 view .LVU235
 1084 004c A848     		ldr	r0, .L98
 1085 004e FFF7FEFF 		bl	log_data
 1086              	.LVL69:
 436:Core/Src/main.c ****   log_data("RFID init successfull\n");
 1087              		.loc 1 436 3 view .LVU236
 1088 0052 FFF7FEFF 		bl	rc522_init
 1089              	.LVL70:
 437:Core/Src/main.c ****   HAL_Delay(10);
 1090              		.loc 1 437 3 view .LVU237
 1091 0056 A748     		ldr	r0, .L98+4
 1092 0058 FFF7FEFF 		bl	log_data
 1093              	.LVL71:
 438:Core/Src/main.c **** 
 1094              		.loc 1 438 3 view .LVU238
 1095 005c 0A20     		movs	r0, #10
 1096 005e FFF7FEFF 		bl	HAL_Delay
 1097              	.LVL72:
 440:Core/Src/main.c ****   log_data("GNSS init successfull\n");
 1098              		.loc 1 440 3 view .LVU239
 1099 0062 FFF7FEFF 		bl	l70_init
 1100              	.LVL73:
 441:Core/Src/main.c ****   HAL_Delay(500);
 1101              		.loc 1 441 3 view .LVU240
 1102 0066 A448     		ldr	r0, .L98+8
 1103 0068 FFF7FEFF 		bl	log_data
 1104              	.LVL74:
 442:Core/Src/main.c **** 
 1105              		.loc 1 442 3 view .LVU241
 1106 006c 4FF4FA70 		mov	r0, #500
 1107 0070 FFF7FEFF 		bl	HAL_Delay
 1108              	.LVL75:
 454:Core/Src/main.c **** 
 1109              		.loc 1 454 3 view .LVU242
 1110 0074 FFF7FEFF 		bl	SSD1306_Init
 1111              	.LVL76:
 456:Core/Src/main.c ****   SSD1306_DrawBitmap(0, 0, bitmap, 128, 64, 1);
 1112              		.loc 1 456 3 view .LVU243
 1113 0078 FFF7FEFF 		bl	SSD1306_Clear
 1114              	.LVL77:
 457:Core/Src/main.c ****   SSD1306_GotoXY(75, 2);
 1115              		.loc 1 457 3 view .LVU244
 1116 007c 0124     		movs	r4, #1
 1117 007e 0194     		str	r4, [sp, #4]
 1118 0080 4023     		movs	r3, #64
 1119 0082 0093     		str	r3, [sp]
 1120 0084 8023     		movs	r3, #128
 1121 0086 9D4A     		ldr	r2, .L98+12
 1122 0088 0021     		movs	r1, #0
 1123 008a 0846     		mov	r0, r1
 1124 008c FFF7FEFF 		bl	SSD1306_DrawBitmap
 1125              	.LVL78:
 458:Core/Src/main.c ****   SSD1306_Puts("2:53", &Font_7x10, 1);
 1126              		.loc 1 458 3 view .LVU245
 1127 0090 0221     		movs	r1, #2
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 45


 1128 0092 4B20     		movs	r0, #75
 1129 0094 FFF7FEFF 		bl	SSD1306_GotoXY
 1130              	.LVL79:
 459:Core/Src/main.c ****   SSD1306_GotoXY(30, 16);
 1131              		.loc 1 459 3 view .LVU246
 1132 0098 994D     		ldr	r5, .L98+16
 1133 009a 2246     		mov	r2, r4
 1134 009c 2946     		mov	r1, r5
 1135 009e 9948     		ldr	r0, .L98+20
 1136 00a0 FFF7FEFF 		bl	SSD1306_Puts
 1137              	.LVL80:
 460:Core/Src/main.c ****   SSD1306_Puts("1/1/2023", &Font_7x10, 1);
 1138              		.loc 1 460 3 view .LVU247
 1139 00a4 1021     		movs	r1, #16
 1140 00a6 1E20     		movs	r0, #30
 1141 00a8 FFF7FEFF 		bl	SSD1306_GotoXY
 1142              	.LVL81:
 461:Core/Src/main.c ****   SSD1306_GotoXY(1, 28);
 1143              		.loc 1 461 3 view .LVU248
 1144 00ac 2246     		mov	r2, r4
 1145 00ae 2946     		mov	r1, r5
 1146 00b0 9548     		ldr	r0, .L98+24
 1147 00b2 FFF7FEFF 		bl	SSD1306_Puts
 1148              	.LVL82:
 462:Core/Src/main.c ****   SSD1306_Puts("Lon:            E", &Font_7x10, 1);
 1149              		.loc 1 462 3 view .LVU249
 1150 00b6 1C21     		movs	r1, #28
 1151 00b8 2046     		mov	r0, r4
 1152 00ba FFF7FEFF 		bl	SSD1306_GotoXY
 1153              	.LVL83:
 463:Core/Src/main.c ****   SSD1306_GotoXY(1, 40);
 1154              		.loc 1 463 3 view .LVU250
 1155 00be 2246     		mov	r2, r4
 1156 00c0 2946     		mov	r1, r5
 1157 00c2 9248     		ldr	r0, .L98+28
 1158 00c4 FFF7FEFF 		bl	SSD1306_Puts
 1159              	.LVL84:
 464:Core/Src/main.c ****   SSD1306_Puts("Lat:           N", &Font_7x10, 1);
 1160              		.loc 1 464 3 view .LVU251
 1161 00c8 2821     		movs	r1, #40
 1162 00ca 2046     		mov	r0, r4
 1163 00cc FFF7FEFF 		bl	SSD1306_GotoXY
 1164              	.LVL85:
 465:Core/Src/main.c ****   SSD1306_GotoXY(1, 52);
 1165              		.loc 1 465 3 view .LVU252
 1166 00d0 2246     		mov	r2, r4
 1167 00d2 2946     		mov	r1, r5
 1168 00d4 8E48     		ldr	r0, .L98+32
 1169 00d6 FFF7FEFF 		bl	SSD1306_Puts
 1170              	.LVL86:
 466:Core/Src/main.c ****   SSD1306_Puts("Speed:      m/s", &Font_7x10, 1);
 1171              		.loc 1 466 3 view .LVU253
 1172 00da 3421     		movs	r1, #52
 1173 00dc 2046     		mov	r0, r4
 1174 00de FFF7FEFF 		bl	SSD1306_GotoXY
 1175              	.LVL87:
 467:Core/Src/main.c ****   SSD1306_UpdateScreen();
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 46


 1176              		.loc 1 467 3 view .LVU254
 1177 00e2 2246     		mov	r2, r4
 1178 00e4 2946     		mov	r1, r5
 1179 00e6 8B48     		ldr	r0, .L98+36
 1180 00e8 FFF7FEFF 		bl	SSD1306_Puts
 1181              	.LVL88:
 468:Core/Src/main.c **** 
 1182              		.loc 1 468 3 view .LVU255
 1183 00ec FFF7FEFF 		bl	SSD1306_UpdateScreen
 1184              	.LVL89:
 470:Core/Src/main.c ****   if (fresult != FR_OK)
 1185              		.loc 1 470 3 view .LVU256
 470:Core/Src/main.c ****   if (fresult != FR_OK)
 1186              		.loc 1 470 13 is_stmt 0 view .LVU257
 1187 00f0 2246     		mov	r2, r4
 1188 00f2 8949     		ldr	r1, .L98+40
 1189 00f4 8948     		ldr	r0, .L98+44
 1190 00f6 FFF7FEFF 		bl	f_mount
 1191              	.LVL90:
 470:Core/Src/main.c ****   if (fresult != FR_OK)
 1192              		.loc 1 470 11 view .LVU258
 1193 00fa 894B     		ldr	r3, .L98+48
 1194 00fc 1870     		strb	r0, [r3]
 471:Core/Src/main.c ****     log_data("ERROR!!! in mounting SD CARD...\n\n");
 1195              		.loc 1 471 3 is_stmt 1 view .LVU259
 471:Core/Src/main.c ****     log_data("ERROR!!! in mounting SD CARD...\n\n");
 1196              		.loc 1 471 6 is_stmt 0 view .LVU260
 1197 00fe 0028     		cmp	r0, #0
 1198 0100 57D0     		beq	.L65
 472:Core/Src/main.c ****   else
 1199              		.loc 1 472 5 is_stmt 1 view .LVU261
 1200 0102 8848     		ldr	r0, .L98+52
 1201 0104 FFF7FEFF 		bl	log_data
 1202              	.LVL91:
 1203              	.L66:
 476:Core/Src/main.c ****   strcpy(stateDevice.offline, "0");
 1204              		.loc 1 476 3 view .LVU262
 1205 0108 874B     		ldr	r3, .L98+56
 1206 010a 3122     		movs	r2, #49
 1207 010c 1A80     		strh	r2, [r3]	@ movhi
 477:Core/Src/main.c ****   strcpy(stateDevice.sleep, "0");
 1208              		.loc 1 477 3 view .LVU263
 1209 010e 3022     		movs	r2, #48
 1210 0110 5A80     		strh	r2, [r3, #2]	@ movhi
 478:Core/Src/main.c ****   strcpy(stateDevice.signal, "OK");
 1211              		.loc 1 478 3 view .LVU264
 1212 0112 9A80     		strh	r2, [r3, #4]	@ movhi
 479:Core/Src/main.c **** 
 1213              		.loc 1 479 3 view .LVU265
 1214 0114 854A     		ldr	r2, .L98+60
 1215 0116 1188     		ldrh	r1, [r2]	@ unaligned
 1216 0118 9278     		ldrb	r2, [r2, #2]	@ zero_extendqisi2
 1217 011a D980     		strh	r1, [r3, #6]	@ unaligned
 1218 011c 1A72     		strb	r2, [r3, #8]
 481:Core/Src/main.c ****   strcpy(infoUser1.name, "Nguyen_Huy_Hoang");
 1219              		.loc 1 481 3 view .LVU266
 1220 011e 844C     		ldr	r4, .L98+64
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 47


 1221 0120 844A     		ldr	r2, .L98+68
 1222 0122 2346     		mov	r3, r4
 1223 0124 07CA     		ldm	r2, {r0, r1, r2}
 1224 0126 03C3     		stmia	r3!, {r0, r1}
 1225 0128 1A70     		strb	r2, [r3]
 482:Core/Src/main.c ****   strcpy(infoUser1.phoneNum, "VIE_0987035442");
 1226              		.loc 1 482 3 view .LVU267
 1227 012a 04F11405 		add	r5, r4, #20
 1228 012e 824E     		ldr	r6, .L98+72
 1229 0130 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 1230 0132 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 1231 0134 3368     		ldr	r3, [r6]
 1232 0136 2B70     		strb	r3, [r5]
 483:Core/Src/main.c ****   strcpy(infoUser1.license, "30N-1234");
 1233              		.loc 1 483 3 view .LVU268
 1234 0138 804B     		ldr	r3, .L98+76
 1235 013a 07CB     		ldmia	r3!, {r0, r1, r2}
 1236 013c C4F83200 		str	r0, [r4, #50]	@ unaligned
 1237 0140 C4F83610 		str	r1, [r4, #54]	@ unaligned
 1238 0144 C4F83A20 		str	r2, [r4, #58]	@ unaligned
 1239 0148 1A88     		ldrh	r2, [r3]	@ unaligned
 1240 014a 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1241 014c E287     		strh	r2, [r4, #62]	@ unaligned
 1242 014e 84F84030 		strb	r3, [r4, #64]
 484:Core/Src/main.c **** 
 1243              		.loc 1 484 3 view .LVU269
 1244 0152 7B4B     		ldr	r3, .L98+80
 1245 0154 2834     		adds	r4, r4, #40
 1246 0156 93E80700 		ldm	r3, {r0, r1, r2}
 1247 015a 03C4     		stmia	r4!, {r0, r1}
 1248 015c 2270     		strb	r2, [r4]
 486:Core/Src/main.c ****   strcpy(infoUser2.name, "Nguyen_Van_A");
 1249              		.loc 1 486 3 view .LVU270
 1250 015e 794C     		ldr	r4, .L98+84
 1251 0160 794B     		ldr	r3, .L98+88
 1252 0162 93E80300 		ldm	r3, {r0, r1}
 1253 0166 2060     		str	r0, [r4]
 1254 0168 2171     		strb	r1, [r4, #4]
 487:Core/Src/main.c ****   strcpy(infoUser2.phoneNum, "VIE_0123562571");
 1255              		.loc 1 487 3 view .LVU271
 1256 016a 784B     		ldr	r3, .L98+92
 1257 016c 04F11405 		add	r5, r4, #20
 1258 0170 0FCB     		ldm	r3, {r0, r1, r2, r3}
 1259 0172 07C5     		stmia	r5!, {r0, r1, r2}
 1260 0174 2B70     		strb	r3, [r5]
 488:Core/Src/main.c ****   strcpy(infoUser2.license, "30N-3611");
 1261              		.loc 1 488 3 view .LVU272
 1262 0176 764B     		ldr	r3, .L98+96
 1263 0178 07CB     		ldmia	r3!, {r0, r1, r2}
 1264 017a C4F83200 		str	r0, [r4, #50]	@ unaligned
 1265 017e C4F83610 		str	r1, [r4, #54]	@ unaligned
 1266 0182 C4F83A20 		str	r2, [r4, #58]	@ unaligned
 1267 0186 1A88     		ldrh	r2, [r3]	@ unaligned
 1268 0188 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1269 018a E287     		strh	r2, [r4, #62]	@ unaligned
 1270 018c 84F84030 		strb	r3, [r4, #64]
 489:Core/Src/main.c **** 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 48


 1271              		.loc 1 489 3 view .LVU273
 1272 0190 704B     		ldr	r3, .L98+100
 1273 0192 2834     		adds	r4, r4, #40
 1274 0194 93E80700 		ldm	r3, {r0, r1, r2}
 1275 0198 03C4     		stmia	r4!, {r0, r1}
 1276 019a 2270     		strb	r2, [r4]
 491:Core/Src/main.c ****   // READ TAG RFID
 1277              		.loc 1 491 3 view .LVU274
 1278 019c 6E4A     		ldr	r2, .L98+104
 1279 019e 6F4B     		ldr	r3, .L98+108
 1280 01a0 03CB     		ldmia	r3!, {r0, r1}
 1281 01a2 C2F84600 		str	r0, [r2, #70]	@ unaligned
 1282 01a6 C2F84A10 		str	r1, [r2, #74]	@ unaligned
 1283 01aa 1B88     		ldrh	r3, [r3]	@ unaligned
 1284 01ac A2F84E30 		strh	r3, [r2, #78]	@ unaligned
 493:Core/Src/main.c ****   {
 1285              		.loc 1 493 3 view .LVU275
 493:Core/Src/main.c ****   {
 1286              		.loc 1 493 9 is_stmt 0 view .LVU276
 1287 01b0 09E0     		b	.L68
 1288              	.L65:
 474:Core/Src/main.c ****   // Read data FLASH
 1289              		.loc 1 474 5 is_stmt 1 view .LVU277
 1290 01b2 6B48     		ldr	r0, .L98+112
 1291 01b4 FFF7FEFF 		bl	log_data
 1292              	.LVL92:
 1293 01b8 A6E7     		b	.L66
 1294              	.L72:
 496:Core/Src/main.c ****     {
 1295              		.loc 1 496 5 view .LVU278
 496:Core/Src/main.c ****     {
 1296              		.loc 1 496 9 is_stmt 0 view .LVU279
 1297 01ba 6A48     		ldr	r0, .L98+116
 1298 01bc FFF7FEFF 		bl	rc522_check
 1299              	.LVL93:
 496:Core/Src/main.c ****     {
 1300              		.loc 1 496 8 view .LVU280
 1301 01c0 0028     		cmp	r0, #0
 1302 01c2 00F00781 		beq	.L94
 1303              	.L68:
 493:Core/Src/main.c ****   {
 1304              		.loc 1 493 9 is_stmt 1 view .LVU281
 493:Core/Src/main.c ****   {
 1305              		.loc 1 493 10 is_stmt 0 view .LVU282
 1306 01c6 6849     		ldr	r1, .L98+120
 1307 01c8 5948     		ldr	r0, .L98+64
 1308 01ca FFF7FEFF 		bl	strcmp
 1309              	.LVL94:
 493:Core/Src/main.c ****   {
 1310              		.loc 1 493 9 view .LVU283
 1311 01ce 0028     		cmp	r0, #0
 1312 01d0 F3D1     		bne	.L72
 493:Core/Src/main.c ****   {
 1313              		.loc 1 493 55 discriminator 1 view .LVU284
 1314 01d2 6549     		ldr	r1, .L98+120
 1315 01d4 5B48     		ldr	r0, .L98+84
 1316 01d6 FFF7FEFF 		bl	strcmp
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 49


 1317              	.LVL95:
 493:Core/Src/main.c ****   {
 1318              		.loc 1 493 52 discriminator 1 view .LVU285
 1319 01da 0028     		cmp	r0, #0
 1320 01dc EDD1     		bne	.L72
 1321              	.L71:
 532:Core/Src/main.c ****   HAL_RTC_GetDate(&hrtc, &current_sDate, RTC_FORMAT_BIN);
 1322              		.loc 1 532 3 is_stmt 1 view .LVU286
 1323 01de 634C     		ldr	r4, .L98+124
 1324 01e0 634D     		ldr	r5, .L98+128
 1325 01e2 0022     		movs	r2, #0
 1326 01e4 2146     		mov	r1, r4
 1327 01e6 2846     		mov	r0, r5
 1328 01e8 FFF7FEFF 		bl	HAL_RTC_GetTime
 1329              	.LVL96:
 533:Core/Src/main.c ****   set_alarm(4);
 1330              		.loc 1 533 3 view .LVU287
 1331 01ec 614E     		ldr	r6, .L98+132
 1332 01ee 0022     		movs	r2, #0
 1333 01f0 3146     		mov	r1, r6
 1334 01f2 2846     		mov	r0, r5
 1335 01f4 FFF7FEFF 		bl	HAL_RTC_GetDate
 1336              	.LVL97:
 534:Core/Src/main.c ****   sprintf(time_buff, "%d:%d:%d", current_sTime.Hours, current_sTime.Minutes, current_sTime.Seconds)
 1337              		.loc 1 534 3 view .LVU288
 1338 01f8 0420     		movs	r0, #4
 1339 01fa FFF7FEFF 		bl	set_alarm
 1340              	.LVL98:
 535:Core/Src/main.c ****   log_data(time_buff);
 1341              		.loc 1 535 3 view .LVU289
 535:Core/Src/main.c ****   log_data(time_buff);
 1342              		.loc 1 535 91 is_stmt 0 view .LVU290
 1343 01fe A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 535:Core/Src/main.c ****   log_data(time_buff);
 1344              		.loc 1 535 3 view .LVU291
 1345 0200 5D4F     		ldr	r7, .L98+136
 1346 0202 0093     		str	r3, [sp]
 1347 0204 6378     		ldrb	r3, [r4, #1]	@ zero_extendqisi2
 1348 0206 2278     		ldrb	r2, [r4]	@ zero_extendqisi2
 1349 0208 5C49     		ldr	r1, .L98+140
 1350 020a 3846     		mov	r0, r7
 1351 020c FFF7FEFF 		bl	sprintf
 1352              	.LVL99:
 536:Core/Src/main.c ****   log_data("\n");
 1353              		.loc 1 536 3 is_stmt 1 view .LVU292
 1354 0210 3846     		mov	r0, r7
 1355 0212 FFF7FEFF 		bl	log_data
 1356              	.LVL100:
 537:Core/Src/main.c ****   sprintf(date_buff, "%d/%d/%d", current_sDate.Date, current_sDate.Month, current_sDate.Year);
 1357              		.loc 1 537 3 view .LVU293
 1358 0216 5A4F     		ldr	r7, .L98+144
 1359 0218 3846     		mov	r0, r7
 1360 021a FFF7FEFF 		bl	log_data
 1361              	.LVL101:
 538:Core/Src/main.c ****   log_data(date_buff);
 1362              		.loc 1 538 3 view .LVU294
 538:Core/Src/main.c ****   log_data(date_buff);
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 50


 1363              		.loc 1 538 88 is_stmt 0 view .LVU295
 1364 021e F378     		ldrb	r3, [r6, #3]	@ zero_extendqisi2
 538:Core/Src/main.c ****   log_data(date_buff);
 1365              		.loc 1 538 3 view .LVU296
 1366 0220 DFF86081 		ldr	r8, .L98+148
 1367 0224 0093     		str	r3, [sp]
 1368 0226 7378     		ldrb	r3, [r6, #1]	@ zero_extendqisi2
 1369 0228 B278     		ldrb	r2, [r6, #2]	@ zero_extendqisi2
 1370 022a 5749     		ldr	r1, .L98+152
 1371 022c 4046     		mov	r0, r8
 1372 022e FFF7FEFF 		bl	sprintf
 1373              	.LVL102:
 539:Core/Src/main.c ****   log_data("\n");
 1374              		.loc 1 539 3 is_stmt 1 view .LVU297
 1375 0232 4046     		mov	r0, r8
 1376 0234 FFF7FEFF 		bl	log_data
 1377              	.LVL103:
 540:Core/Src/main.c ****   HAL_RTC_GetTime(&hrtc, &last_sTime, RTC_FORMAT_BIN);
 1378              		.loc 1 540 3 view .LVU298
 1379 0238 3846     		mov	r0, r7
 1380 023a FFF7FEFF 		bl	log_data
 1381              	.LVL104:
 541:Core/Src/main.c ****   HAL_RTC_GetDate(&hrtc, &last_sDate, RTC_FORMAT_BIN);
 1382              		.loc 1 541 3 view .LVU299
 1383 023e 534E     		ldr	r6, .L98+156
 1384 0240 0022     		movs	r2, #0
 1385 0242 3146     		mov	r1, r6
 1386 0244 2846     		mov	r0, r5
 1387 0246 FFF7FEFF 		bl	HAL_RTC_GetTime
 1388              	.LVL105:
 542:Core/Src/main.c ****   totalMinute_OperateTime = (60 * last_sTime.Hours + last_sTime.Minutes) - (60 * current_sTime.Hour
 1389              		.loc 1 542 3 view .LVU300
 1390 024a 0022     		movs	r2, #0
 1391 024c 5049     		ldr	r1, .L98+160
 1392 024e 2846     		mov	r0, r5
 1393 0250 FFF7FEFF 		bl	HAL_RTC_GetDate
 1394              	.LVL106:
 543:Core/Src/main.c ****   time_hour = totalMinute_OperateTime / 60;
 1395              		.loc 1 543 3 view .LVU301
 543:Core/Src/main.c ****   time_hour = totalMinute_OperateTime / 60;
 1396              		.loc 1 543 45 is_stmt 0 view .LVU302
 1397 0254 3278     		ldrb	r2, [r6]	@ zero_extendqisi2
 543:Core/Src/main.c ****   time_hour = totalMinute_OperateTime / 60;
 1398              		.loc 1 543 64 view .LVU303
 1399 0256 7378     		ldrb	r3, [r6, #1]	@ zero_extendqisi2
 543:Core/Src/main.c ****   time_hour = totalMinute_OperateTime / 60;
 1400              		.loc 1 543 52 view .LVU304
 1401 0258 C2EB0212 		rsb	r2, r2, r2, lsl #4
 1402 025c 03EB8203 		add	r3, r3, r2, lsl #2
 1403 0260 9BB2     		uxth	r3, r3
 543:Core/Src/main.c ****   time_hour = totalMinute_OperateTime / 60;
 1404              		.loc 1 543 95 view .LVU305
 1405 0262 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 543:Core/Src/main.c ****   time_hour = totalMinute_OperateTime / 60;
 1406              		.loc 1 543 117 view .LVU306
 1407 0264 6278     		ldrb	r2, [r4, #1]	@ zero_extendqisi2
 543:Core/Src/main.c ****   time_hour = totalMinute_OperateTime / 60;
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 51


 1408              		.loc 1 543 102 view .LVU307
 1409 0266 C1EB0111 		rsb	r1, r1, r1, lsl #4
 1410 026a 02EB8102 		add	r2, r2, r1, lsl #2
 1411 026e 92B2     		uxth	r2, r2
 543:Core/Src/main.c ****   time_hour = totalMinute_OperateTime / 60;
 1412              		.loc 1 543 74 view .LVU308
 1413 0270 9B1A     		subs	r3, r3, r2
 1414 0272 9BB2     		uxth	r3, r3
 543:Core/Src/main.c ****   time_hour = totalMinute_OperateTime / 60;
 1415              		.loc 1 543 27 view .LVU309
 1416 0274 474A     		ldr	r2, .L98+164
 1417 0276 1380     		strh	r3, [r2]	@ movhi
 544:Core/Src/main.c ****   time_minute = totalMinute_OperateTime - time_hour * 60;
 1418              		.loc 1 544 3 is_stmt 1 view .LVU310
 544:Core/Src/main.c ****   time_minute = totalMinute_OperateTime - time_hour * 60;
 1419              		.loc 1 544 39 is_stmt 0 view .LVU311
 1420 0278 474A     		ldr	r2, .L98+168
 1421 027a A2FB0312 		umull	r1, r2, r2, r3
 1422 027e 5209     		lsrs	r2, r2, #5
 544:Core/Src/main.c ****   time_minute = totalMinute_OperateTime - time_hour * 60;
 1423              		.loc 1 544 13 view .LVU312
 1424 0280 4649     		ldr	r1, .L98+172
 1425 0282 0A60     		str	r2, [r1]
 545:Core/Src/main.c ****   sprintf(totalMinute_OperateTime_buff, "%dh%d", time_hour, time_minute);
 1426              		.loc 1 545 3 is_stmt 1 view .LVU313
 545:Core/Src/main.c ****   sprintf(totalMinute_OperateTime_buff, "%dh%d", time_hour, time_minute);
 1427              		.loc 1 545 53 is_stmt 0 view .LVU314
 1428 0284 A2EB0211 		sub	r1, r2, r2, lsl #4
 545:Core/Src/main.c ****   sprintf(totalMinute_OperateTime_buff, "%dh%d", time_hour, time_minute);
 1429              		.loc 1 545 41 view .LVU315
 1430 0288 03EB8103 		add	r3, r3, r1, lsl #2
 545:Core/Src/main.c ****   sprintf(totalMinute_OperateTime_buff, "%dh%d", time_hour, time_minute);
 1431              		.loc 1 545 15 view .LVU316
 1432 028c 4449     		ldr	r1, .L98+176
 1433 028e 0B60     		str	r3, [r1]
 546:Core/Src/main.c ****   // wait for gps
 1434              		.loc 1 546 3 is_stmt 1 view .LVU317
 1435 0290 4449     		ldr	r1, .L98+180
 1436 0292 4548     		ldr	r0, .L98+184
 1437 0294 FFF7FEFF 		bl	sprintf
 1438              	.LVL107:
 1439              	.L74:
 548:Core/Src/main.c ****   {
 1440              		.loc 1 548 3 discriminator 2 view .LVU318
 550:Core/Src/main.c ****     l70_handleGPS(GPSResponse);
 1441              		.loc 1 550 5 discriminator 2 view .LVU319
 550:Core/Src/main.c ****     l70_handleGPS(GPSResponse);
 1442              		.loc 1 550 19 is_stmt 0 discriminator 2 view .LVU320
 1443 0298 FFF7FEFF 		bl	l70_receiveGPS
 1444              	.LVL108:
 550:Core/Src/main.c ****     l70_handleGPS(GPSResponse);
 1445              		.loc 1 550 17 discriminator 2 view .LVU321
 1446 029c 434B     		ldr	r3, .L98+188
 1447 029e 1860     		str	r0, [r3]
 551:Core/Src/main.c ****     HAL_Delay(1000);
 1448              		.loc 1 551 5 is_stmt 1 discriminator 2 view .LVU322
 1449 02a0 FFF7FEFF 		bl	l70_handleGPS
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 52


 1450              	.LVL109:
 552:Core/Src/main.c ****   } while (strstr(l70DataAfterHadler.latitude, ".000000") != NULL && strstr(l70DataAfterHadler.long
 1451              		.loc 1 552 5 discriminator 2 view .LVU323
 1452 02a4 4FF47A70 		mov	r0, #1000
 1453 02a8 FFF7FEFF 		bl	HAL_Delay
 1454              	.LVL110:
 553:Core/Src/main.c ****   log_data("\nGSHT Start\n");
 1455              		.loc 1 553 11 discriminator 2 view .LVU324
 553:Core/Src/main.c ****   log_data("\nGSHT Start\n");
 1456              		.loc 1 553 12 is_stmt 0 discriminator 2 view .LVU325
 1457 02ac 4049     		ldr	r1, .L98+192
 1458 02ae 4148     		ldr	r0, .L98+196
 1459 02b0 FFF7FEFF 		bl	strstr
 1460              	.LVL111:
 553:Core/Src/main.c ****   log_data("\nGSHT Start\n");
 1461              		.loc 1 553 3 discriminator 2 view .LVU326
 1462 02b4 28B1     		cbz	r0, .L73
 553:Core/Src/main.c ****   log_data("\nGSHT Start\n");
 1463              		.loc 1 553 70 discriminator 1 view .LVU327
 1464 02b6 3E49     		ldr	r1, .L98+192
 1465 02b8 3F48     		ldr	r0, .L98+200
 1466 02ba FFF7FEFF 		bl	strstr
 1467              	.LVL112:
 553:Core/Src/main.c ****   log_data("\nGSHT Start\n");
 1468              		.loc 1 553 67 discriminator 1 view .LVU328
 1469 02be 0028     		cmp	r0, #0
 1470 02c0 EAD1     		bne	.L74
 1471              	.L73:
 554:Core/Src/main.c ****   // Check ID tag in Flash
 1472              		.loc 1 554 3 is_stmt 1 view .LVU329
 1473 02c2 3E48     		ldr	r0, .L98+204
 1474 02c4 FFF7FEFF 		bl	log_data
 1475              	.LVL113:
 557:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim3); // Task
 1476              		.loc 1 557 3 view .LVU330
 1477 02c8 4FF47A70 		mov	r0, #1000
 1478 02cc FFF7FEFF 		bl	set_timer
 1479              	.LVL114:
 558:Core/Src/main.c ****   HAL_TIM_Base_Start(&htim1);    // Sensors
 1480              		.loc 1 558 3 view .LVU331
 1481 02d0 3B48     		ldr	r0, .L98+208
 1482 02d2 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 1483              	.LVL115:
 559:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim2); // RFID
 1484              		.loc 1 559 3 view .LVU332
 1485 02d6 3B48     		ldr	r0, .L98+212
 1486 02d8 FFF7FEFF 		bl	HAL_TIM_Base_Start
 1487              	.LVL116:
 560:Core/Src/main.c ****   // set_timer(1000);
 1488              		.loc 1 560 3 view .LVU333
 1489 02dc 3A48     		ldr	r0, .L98+216
 1490 02de FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 1491              	.LVL117:
 562:Core/Src/main.c ****   /* USER CODE END 2 */
 1492              		.loc 1 562 3 view .LVU334
 1493 02e2 0122     		movs	r2, #1
 1494 02e4 3949     		ldr	r1, .L98+220
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 53


 1495 02e6 3A48     		ldr	r0, .L98+224
 1496 02e8 FFF7FEFF 		bl	HAL_UART_Receive_IT
 1497              	.LVL118:
 1498 02ec E6E0     		b	.L92
 1499              	.L99:
 1500 02ee 00BF     		.align	2
 1501              	.L98:
 1502 02f0 00000000 		.word	.LC1
 1503 02f4 10000000 		.word	.LC2
 1504 02f8 28000000 		.word	.LC3
 1505 02fc 00000000 		.word	.LANCHOR17
 1506 0300 00000000 		.word	Font_7x10
 1507 0304 40000000 		.word	.LC4
 1508 0308 48000000 		.word	.LC5
 1509 030c 54000000 		.word	.LC6
 1510 0310 68000000 		.word	.LC7
 1511 0314 7C000000 		.word	.LC8
 1512 0318 8C000000 		.word	.LC9
 1513 031c 00000000 		.word	fs
 1514 0320 00000000 		.word	.LANCHOR18
 1515 0324 90000000 		.word	.LC10
 1516 0328 00000000 		.word	.LANCHOR19
 1517 032c D8000000 		.word	.LC12
 1518 0330 00000000 		.word	.LANCHOR20
 1519 0334 DC000000 		.word	.LC13
 1520 0338 E8000000 		.word	.LC14
 1521 033c FC000000 		.word	.LC15
 1522 0340 0C010000 		.word	.LC16
 1523 0344 00000000 		.word	.LANCHOR21
 1524 0348 18010000 		.word	.LC17
 1525 034c 20010000 		.word	.LC18
 1526 0350 30010000 		.word	.LC19
 1527 0354 40010000 		.word	.LC20
 1528 0358 00000000 		.word	.LANCHOR0
 1529 035c 4C010000 		.word	.LC21
 1530 0360 B4000000 		.word	.LC11
 1531 0364 00000000 		.word	.LANCHOR12
 1532 0368 00000000 		.word	.LANCHOR22
 1533 036c 00000000 		.word	.LANCHOR16
 1534 0370 00000000 		.word	hrtc
 1535 0374 00000000 		.word	.LANCHOR23
 1536 0378 00000000 		.word	.LANCHOR24
 1537 037c A4010000 		.word	.LC26
 1538 0380 B0010000 		.word	.LC27
 1539 0384 00000000 		.word	.LANCHOR25
 1540 0388 B4010000 		.word	.LC28
 1541 038c 00000000 		.word	.LANCHOR26
 1542 0390 00000000 		.word	.LANCHOR27
 1543 0394 00000000 		.word	.LANCHOR28
 1544 0398 89888888 		.word	-2004318071
 1545 039c 00000000 		.word	.LANCHOR29
 1546 03a0 00000000 		.word	.LANCHOR30
 1547 03a4 C0010000 		.word	.LC29
 1548 03a8 00000000 		.word	.LANCHOR31
 1549 03ac 00000000 		.word	.LANCHOR32
 1550 03b0 C8010000 		.word	.LC30
 1551 03b4 0C000000 		.word	l70DataAfterHadler+12
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 54


 1552 03b8 20000000 		.word	l70DataAfterHadler+32
 1553 03bc D0010000 		.word	.LC31
 1554 03c0 00000000 		.word	htim3
 1555 03c4 00000000 		.word	htim1
 1556 03c8 00000000 		.word	htim2
 1557 03cc 00000000 		.word	.LANCHOR3
 1558 03d0 00000000 		.word	huart2
 1559              	.L94:
 498:Core/Src/main.c ****       log_data(Card_Startbuff);
 1560              		.loc 1 498 7 view .LVU335
 498:Core/Src/main.c ****       log_data(Card_Startbuff);
 1561              		.loc 1 498 57 is_stmt 0 view .LVU336
 1562 03d4 9D4A     		ldr	r2, .L100
 498:Core/Src/main.c ****       log_data(Card_Startbuff);
 1563              		.loc 1 498 79 view .LVU337
 1564 03d6 9378     		ldrb	r3, [r2, #2]	@ zero_extendqisi2
 498:Core/Src/main.c ****       log_data(Card_Startbuff);
 1565              		.loc 1 498 90 view .LVU338
 1566 03d8 D178     		ldrb	r1, [r2, #3]	@ zero_extendqisi2
 498:Core/Src/main.c ****       log_data(Card_Startbuff);
 1567              		.loc 1 498 7 view .LVU339
 1568 03da 9D4C     		ldr	r4, .L100+4
 1569 03dc 0191     		str	r1, [sp, #4]
 1570 03de 0093     		str	r3, [sp]
 1571 03e0 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 1572 03e2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1573 03e4 9B49     		ldr	r1, .L100+8
 1574 03e6 2046     		mov	r0, r4
 1575 03e8 FFF7FEFF 		bl	sprintf
 1576              	.LVL119:
 499:Core/Src/main.c ****       if (strcmp(infoUser1.ID, Card_Startbuff) != 0)
 1577              		.loc 1 499 7 is_stmt 1 view .LVU340
 1578 03ec 2046     		mov	r0, r4
 1579 03ee FFF7FEFF 		bl	log_data
 1580              	.LVL120:
 500:Core/Src/main.c ****       {
 1581              		.loc 1 500 7 view .LVU341
 500:Core/Src/main.c ****       {
 1582              		.loc 1 500 11 is_stmt 0 view .LVU342
 1583 03f2 2146     		mov	r1, r4
 1584 03f4 9848     		ldr	r0, .L100+12
 1585 03f6 FFF7FEFF 		bl	strcmp
 1586              	.LVL121:
 500:Core/Src/main.c ****       {
 1587              		.loc 1 500 10 view .LVU343
 1588 03fa 50BB     		cbnz	r0, .L95
 1589              	.L69:
 511:Core/Src/main.c ****       {
 1590              		.loc 1 511 7 is_stmt 1 view .LVU344
 511:Core/Src/main.c ****       {
 1591              		.loc 1 511 11 is_stmt 0 view .LVU345
 1592 03fc 9449     		ldr	r1, .L100+4
 1593 03fe 9748     		ldr	r0, .L100+16
 1594 0400 FFF7FEFF 		bl	strcmp
 1595              	.LVL122:
 511:Core/Src/main.c ****       {
 1596              		.loc 1 511 10 view .LVU346
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 55


 1597 0404 0028     		cmp	r0, #0
 1598 0406 49D0     		beq	.L70
 513:Core/Src/main.c ****         strcpy(infoUser.name, infoUser2.name);
 1599              		.loc 1 513 9 is_stmt 1 view .LVU347
 1600 0408 944D     		ldr	r5, .L100+16
 1601 040a 954C     		ldr	r4, .L100+20
 1602 040c 2946     		mov	r1, r5
 1603 040e 2046     		mov	r0, r4
 1604 0410 FFF7FEFF 		bl	strcpy
 1605              	.LVL123:
 514:Core/Src/main.c ****         strcpy(infoUser.phoneNum, infoUser2.phoneNum);
 1606              		.loc 1 514 9 view .LVU348
 1607 0414 05F11401 		add	r1, r5, #20
 1608 0418 04F11400 		add	r0, r4, #20
 1609 041c FFF7FEFF 		bl	strcpy
 1610              	.LVL124:
 515:Core/Src/main.c ****         strcpy(infoUser.license, infoUser2.license);
 1611              		.loc 1 515 9 view .LVU349
 1612 0420 05F13201 		add	r1, r5, #50
 1613 0424 04F13200 		add	r0, r4, #50
 1614 0428 FFF7FEFF 		bl	strcpy
 1615              	.LVL125:
 516:Core/Src/main.c ****         buzzer(200);
 1616              		.loc 1 516 9 view .LVU350
 1617 042c 05F12801 		add	r1, r5, #40
 1618 0430 04F12800 		add	r0, r4, #40
 1619 0434 FFF7FEFF 		bl	strcpy
 1620              	.LVL126:
 517:Core/Src/main.c ****         HAL_Delay(200);
 1621              		.loc 1 517 9 view .LVU351
 1622 0438 C820     		movs	r0, #200
 1623 043a FFF7FEFF 		bl	buzzer
 1624              	.LVL127:
 518:Core/Src/main.c ****         buzzer(200);
 1625              		.loc 1 518 9 view .LVU352
 1626 043e C820     		movs	r0, #200
 1627 0440 FFF7FEFF 		bl	HAL_Delay
 1628              	.LVL128:
 519:Core/Src/main.c ****         log_data("ID2 TAG invalid\n");
 1629              		.loc 1 519 9 view .LVU353
 1630 0444 C820     		movs	r0, #200
 1631 0446 FFF7FEFF 		bl	buzzer
 1632              	.LVL129:
 520:Core/Src/main.c ****       }
 1633              		.loc 1 520 9 view .LVU354
 1634 044a 8648     		ldr	r0, .L100+24
 1635 044c FFF7FEFF 		bl	log_data
 1636              	.LVL130:
 1637 0450 B9E6     		b	.L68
 1638              	.L95:
 502:Core/Src/main.c ****         strcpy(infoUser.name, infoUser1.name);
 1639              		.loc 1 502 9 view .LVU355
 1640 0452 814D     		ldr	r5, .L100+12
 1641 0454 824C     		ldr	r4, .L100+20
 1642 0456 2946     		mov	r1, r5
 1643 0458 2046     		mov	r0, r4
 1644 045a FFF7FEFF 		bl	strcpy
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 56


 1645              	.LVL131:
 503:Core/Src/main.c ****         strcpy(infoUser.phoneNum, infoUser1.phoneNum);
 1646              		.loc 1 503 9 view .LVU356
 1647 045e 05F11401 		add	r1, r5, #20
 1648 0462 04F11400 		add	r0, r4, #20
 1649 0466 FFF7FEFF 		bl	strcpy
 1650              	.LVL132:
 504:Core/Src/main.c ****         strcpy(infoUser.license, infoUser1.license);
 1651              		.loc 1 504 9 view .LVU357
 1652 046a 05F13201 		add	r1, r5, #50
 1653 046e 04F13200 		add	r0, r4, #50
 1654 0472 FFF7FEFF 		bl	strcpy
 1655              	.LVL133:
 505:Core/Src/main.c ****         buzzer(200);
 1656              		.loc 1 505 9 view .LVU358
 1657 0476 05F12801 		add	r1, r5, #40
 1658 047a 04F12800 		add	r0, r4, #40
 1659 047e FFF7FEFF 		bl	strcpy
 1660              	.LVL134:
 506:Core/Src/main.c ****         HAL_Delay(200);
 1661              		.loc 1 506 9 view .LVU359
 1662 0482 C820     		movs	r0, #200
 1663 0484 FFF7FEFF 		bl	buzzer
 1664              	.LVL135:
 507:Core/Src/main.c ****         buzzer(200);
 1665              		.loc 1 507 9 view .LVU360
 1666 0488 C820     		movs	r0, #200
 1667 048a FFF7FEFF 		bl	HAL_Delay
 1668              	.LVL136:
 508:Core/Src/main.c ****         log_data("ID1 TAG invalid\n");
 1669              		.loc 1 508 9 view .LVU361
 1670 048e C820     		movs	r0, #200
 1671 0490 FFF7FEFF 		bl	buzzer
 1672              	.LVL137:
 509:Core/Src/main.c ****       }
 1673              		.loc 1 509 9 view .LVU362
 1674 0494 7448     		ldr	r0, .L100+28
 1675 0496 FFF7FEFF 		bl	log_data
 1676              	.LVL138:
 1677 049a AFE7     		b	.L69
 1678              	.L70:
 524:Core/Src/main.c ****         buzzer(200);
 1679              		.loc 1 524 9 view .LVU363
 524:Core/Src/main.c ****         buzzer(200);
 1680              		.loc 1 524 24 is_stmt 0 view .LVU364
 1681 049c 734B     		ldr	r3, .L100+32
 1682 049e 0122     		movs	r2, #1
 1683 04a0 1A70     		strb	r2, [r3]
 525:Core/Src/main.c ****         log_data("ID TAG valid\n");
 1684              		.loc 1 525 9 is_stmt 1 view .LVU365
 1685 04a2 C820     		movs	r0, #200
 1686 04a4 FFF7FEFF 		bl	buzzer
 1687              	.LVL139:
 526:Core/Src/main.c ****         break;
 1688              		.loc 1 526 9 view .LVU366
 1689 04a8 7148     		ldr	r0, .L100+36
 1690 04aa FFF7FEFF 		bl	log_data
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 57


 1691              	.LVL140:
 527:Core/Src/main.c ****       }
 1692              		.loc 1 527 9 view .LVU367
 1693 04ae 96E6     		b	.L71
 1694              	.L82:
 576:Core/Src/main.c ****       {
 1695              		.loc 1 576 7 view .LVU368
 576:Core/Src/main.c ****       {
 1696              		.loc 1 576 23 is_stmt 0 view .LVU369
 1697 04b0 704B     		ldr	r3, .L100+40
 1698 04b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 576:Core/Src/main.c ****       {
 1699              		.loc 1 576 10 view .LVU370
 1700 04b4 B3B1     		cbz	r3, .L96
 1701              	.L75:
 718:Core/Src/main.c **** #endif
 1702              		.loc 1 718 5 is_stmt 1 view .LVU371
 1703 04b6 6420     		movs	r0, #100
 1704 04b8 FFF7FEFF 		bl	HAL_Delay
 1705              	.LVL141:
 567:Core/Src/main.c ****   {
 1706              		.loc 1 567 9 view .LVU372
 1707              	.L92:
 567:Core/Src/main.c ****   {
 1708              		.loc 1 567 3 view .LVU373
 573:Core/Src/main.c ****     {
 1709              		.loc 1 573 5 view .LVU374
 1710 04bc 6E4B     		ldr	r3, .L100+44
 1711 04be 1B68     		ldr	r3, [r3]
 1712 04c0 052B     		cmp	r3, #5
 1713 04c2 F8D8     		bhi	.L75
 1714 04c4 01A2     		adr	r2, .L77
 1715 04c6 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1716 04ca 00BF     		.p2align 2
 1717              	.L77:
 1718 04cc B1040000 		.word	.L82+1
 1719 04d0 3F050000 		.word	.L81+1
 1720 04d4 61050000 		.word	.L80+1
 1721 04d8 E9060000 		.word	.L79+1
 1722 04dc A3070000 		.word	.L78+1
 1723 04e0 25080000 		.word	.L76+1
 1724              		.p2align 1
 1725              	.L96:
 578:Core/Src/main.c ****         Taskperform.TaskSensors = true;
 1726              		.loc 1 578 9 view .LVU375
 1727 04e4 6548     		ldr	r0, .L100+48
 1728 04e6 FFF7FEFF 		bl	log_data
 1729              	.LVL142:
 579:Core/Src/main.c ****         ds18_temp = (int)DS18B20_Result();
 1730              		.loc 1 579 9 view .LVU376
 579:Core/Src/main.c ****         ds18_temp = (int)DS18B20_Result();
 1731              		.loc 1 579 33 is_stmt 0 view .LVU377
 1732 04ea 624B     		ldr	r3, .L100+40
 1733 04ec 0122     		movs	r2, #1
 1734 04ee 1A70     		strb	r2, [r3]
 580:Core/Src/main.c ****         // DHT11_Result(dht_temp, dht_hum);
 1735              		.loc 1 580 9 is_stmt 1 view .LVU378
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 58


 580:Core/Src/main.c ****         // DHT11_Result(dht_temp, dht_hum);
 1736              		.loc 1 580 26 is_stmt 0 view .LVU379
 1737 04f0 FFF7FEFF 		bl	DS18B20_Result
 1738              	.LVL143:
 580:Core/Src/main.c ****         // DHT11_Result(dht_temp, dht_hum);
 1739              		.loc 1 580 21 view .LVU380
 1740 04f4 FFF7FEFF 		bl	__aeabi_f2iz
 1741              	.LVL144:
 1742 04f8 0246     		mov	r2, r0
 580:Core/Src/main.c ****         // DHT11_Result(dht_temp, dht_hum);
 1743              		.loc 1 580 19 view .LVU381
 1744 04fa 614B     		ldr	r3, .L100+52
 1745 04fc 1860     		str	r0, [r3]
 582:Core/Src/main.c ****         // ftoa(ds18_temp, ds18_buff, 1);
 1746              		.loc 1 582 9 is_stmt 1 view .LVU382
 1747 04fe 614C     		ldr	r4, .L100+56
 1748 0500 6149     		ldr	r1, .L100+60
 1749 0502 2046     		mov	r0, r4
 1750 0504 FFF7FEFF 		bl	sprintf
 1751              	.LVL145:
 587:Core/Src/main.c ****         strcpy(sensors.dhtHum_buff, "80");
 1752              		.loc 1 587 9 view .LVU383
 1753 0508 604B     		ldr	r3, .L100+64
 1754 050a 1A88     		ldrh	r2, [r3]	@ unaligned
 1755 050c 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1756 050e A4F80520 		strh	r2, [r4, #5]	@ unaligned
 1757 0512 E371     		strb	r3, [r4, #7]
 588:Core/Src/main.c ****         strcpy(sensors.fuel, "80");
 1758              		.loc 1 588 9 view .LVU384
 1759 0514 5E4B     		ldr	r3, .L100+68
 1760 0516 1A88     		ldrh	r2, [r3]	@ unaligned
 1761 0518 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1762 051a A4F83720 		strh	r2, [r4, #55]	@ unaligned
 1763 051e 84F83930 		strb	r3, [r4, #57]
 589:Core/Src/main.c ****         log_data("Nhiet do thiet bi: ");
 1764              		.loc 1 589 9 view .LVU385
 1765 0522 A4F86920 		strh	r2, [r4, #105]	@ unaligned
 1766 0526 84F86B30 		strb	r3, [r4, #107]
 590:Core/Src/main.c ****         log_data(sensors.ds18_buff);
 1767              		.loc 1 590 9 view .LVU386
 1768 052a 5A48     		ldr	r0, .L100+72
 1769 052c FFF7FEFF 		bl	log_data
 1770              	.LVL146:
 591:Core/Src/main.c ****         log_data("\n");
 1771              		.loc 1 591 9 view .LVU387
 1772 0530 2046     		mov	r0, r4
 1773 0532 FFF7FEFF 		bl	log_data
 1774              	.LVL147:
 592:Core/Src/main.c ****       }
 1775              		.loc 1 592 9 view .LVU388
 1776 0536 5848     		ldr	r0, .L100+76
 1777 0538 FFF7FEFF 		bl	log_data
 1778              	.LVL148:
 1779 053c BBE7     		b	.L75
 1780              	.L81:
 596:Core/Src/main.c ****       {
 1781              		.loc 1 596 7 view .LVU389
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 59


 596:Core/Src/main.c ****       {
 1782              		.loc 1 596 23 is_stmt 0 view .LVU390
 1783 053e 4D4B     		ldr	r3, .L100+40
 1784 0540 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 596:Core/Src/main.c ****       {
 1785              		.loc 1 596 10 view .LVU391
 1786 0542 002B     		cmp	r3, #0
 1787 0544 B7D1     		bne	.L75
 598:Core/Src/main.c ****         Taskperform.TaskGNSS = true;
 1788              		.loc 1 598 9 is_stmt 1 view .LVU392
 1789 0546 5548     		ldr	r0, .L100+80
 1790 0548 FFF7FEFF 		bl	log_data
 1791              	.LVL149:
 599:Core/Src/main.c ****         GPSResponse = l70_receiveGPS();
 1792              		.loc 1 599 9 view .LVU393
 599:Core/Src/main.c ****         GPSResponse = l70_receiveGPS();
 1793              		.loc 1 599 30 is_stmt 0 view .LVU394
 1794 054c 494B     		ldr	r3, .L100+40
 1795 054e 0122     		movs	r2, #1
 1796 0550 5A70     		strb	r2, [r3, #1]
 600:Core/Src/main.c ****         l70_handleGPS(GPSResponse);
 1797              		.loc 1 600 9 is_stmt 1 view .LVU395
 600:Core/Src/main.c ****         l70_handleGPS(GPSResponse);
 1798              		.loc 1 600 23 is_stmt 0 view .LVU396
 1799 0552 FFF7FEFF 		bl	l70_receiveGPS
 1800              	.LVL150:
 600:Core/Src/main.c ****         l70_handleGPS(GPSResponse);
 1801              		.loc 1 600 21 view .LVU397
 1802 0556 524B     		ldr	r3, .L100+84
 1803 0558 1860     		str	r0, [r3]
 601:Core/Src/main.c ****       }
 1804              		.loc 1 601 9 is_stmt 1 view .LVU398
 1805 055a FFF7FEFF 		bl	l70_handleGPS
 1806              	.LVL151:
 1807 055e AAE7     		b	.L75
 1808              	.L80:
 605:Core/Src/main.c ****       {
 1809              		.loc 1 605 7 view .LVU399
 605:Core/Src/main.c ****       {
 1810              		.loc 1 605 23 is_stmt 0 view .LVU400
 1811 0560 444B     		ldr	r3, .L100+40
 1812 0562 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 605:Core/Src/main.c ****       {
 1813              		.loc 1 605 10 view .LVU401
 1814 0564 002B     		cmp	r3, #0
 1815 0566 A6D1     		bne	.L75
 607:Core/Src/main.c ****         Taskperform.TaskSIM = true;
 1816              		.loc 1 607 9 is_stmt 1 view .LVU402
 1817 0568 4E48     		ldr	r0, .L100+88
 1818 056a FFF7FEFF 		bl	log_data
 1819              	.LVL152:
 608:Core/Src/main.c ****         memset(Json_Data,'\0',sizeof(Json_Data));
 1820              		.loc 1 608 9 view .LVU403
 608:Core/Src/main.c ****         memset(Json_Data,'\0',sizeof(Json_Data));
 1821              		.loc 1 608 29 is_stmt 0 view .LVU404
 1822 056e 414B     		ldr	r3, .L100+40
 1823 0570 0122     		movs	r2, #1
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 60


 1824 0572 9A70     		strb	r2, [r3, #2]
 609:Core/Src/main.c ****         sprintf(Json_Data, "{\"online\":%s,\"offline\":%s,\"sleep\":%s,\"deviceID\":%s,\"license\":
 1825              		.loc 1 609 9 is_stmt 1 view .LVU405
 1826 0574 4C4C     		ldr	r4, .L100+92
 1827 0576 4FF4FA72 		mov	r2, #500
 1828 057a 0021     		movs	r1, #0
 1829 057c 2046     		mov	r0, r4
 1830 057e FFF7FEFF 		bl	memset
 1831              	.LVL153:
 610:Core/Src/main.c ****                 stateDevice.online, stateDevice.offline, stateDevice.sleep, infoUser.deviceID, info
 1832              		.loc 1 610 9 view .LVU406
 1833 0582 4A4A     		ldr	r2, .L100+96
 1834 0584 3F4B     		ldr	r3, .L100+56
 1835 0586 03F16901 		add	r1, r3, #105
 1836 058a 0B91     		str	r1, [sp, #44]
 1837 058c 03F13701 		add	r1, r3, #55
 1838 0590 0A91     		str	r1, [sp, #40]
 1839 0592 591D     		adds	r1, r3, #5
 1840 0594 0991     		str	r1, [sp, #36]
 1841 0596 0893     		str	r3, [sp, #32]
 1842 0598 454B     		ldr	r3, .L100+100
 1843 059a 0793     		str	r3, [sp, #28]
 1844 059c 143B     		subs	r3, r3, #20
 1845 059e 0693     		str	r3, [sp, #24]
 1846 05a0 931D     		adds	r3, r2, #6
 1847 05a2 0593     		str	r3, [sp, #20]
 1848 05a4 2E4B     		ldr	r3, .L100+20
 1849 05a6 03F13201 		add	r1, r3, #50
 1850 05aa 0491     		str	r1, [sp, #16]
 1851 05ac 03F11401 		add	r1, r3, #20
 1852 05b0 0391     		str	r1, [sp, #12]
 1853 05b2 03F12801 		add	r1, r3, #40
 1854 05b6 0291     		str	r1, [sp, #8]
 1855 05b8 4633     		adds	r3, r3, #70
 1856 05ba 0193     		str	r3, [sp, #4]
 1857 05bc 131D     		adds	r3, r2, #4
 1858 05be 0093     		str	r3, [sp]
 1859 05c0 931C     		adds	r3, r2, #2
 1860 05c2 3C49     		ldr	r1, .L100+104
 1861 05c4 2046     		mov	r0, r4
 1862 05c6 FFF7FEFF 		bl	sprintf
 1863              	.LVL154:
 614:Core/Src/main.c ****         numCheck_time++;
 1864              		.loc 1 614 9 view .LVU407
 1865 05ca 2146     		mov	r1, r4
 1866 05cc 3A48     		ldr	r0, .L100+108
 1867 05ce FFF7FEFF 		bl	mqtt_pub
 1868              	.LVL155:
 615:Core/Src/main.c ****         if (numCheck_time == 10)
 1869              		.loc 1 615 9 view .LVU408
 615:Core/Src/main.c ****         if (numCheck_time == 10)
 1870              		.loc 1 615 22 is_stmt 0 view .LVU409
 1871 05d2 3A4A     		ldr	r2, .L100+112
 1872 05d4 1368     		ldr	r3, [r2]
 1873 05d6 0133     		adds	r3, r3, #1
 1874 05d8 1360     		str	r3, [r2]
 616:Core/Src/main.c ****         {
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 61


 1875              		.loc 1 616 9 is_stmt 1 view .LVU410
 616:Core/Src/main.c ****         {
 1876              		.loc 1 616 12 is_stmt 0 view .LVU411
 1877 05da 0A2B     		cmp	r3, #10
 1878 05dc 7FF46BAF 		bne	.L75
 618:Core/Src/main.c ****           HAL_RTC_GetTime(&hrtc, &last_sTime, RTC_FORMAT_BIN);
 1879              		.loc 1 618 11 is_stmt 1 view .LVU412
 618:Core/Src/main.c ****           HAL_RTC_GetTime(&hrtc, &last_sTime, RTC_FORMAT_BIN);
 1880              		.loc 1 618 25 is_stmt 0 view .LVU413
 1881 05e0 0025     		movs	r5, #0
 1882 05e2 1560     		str	r5, [r2]
 619:Core/Src/main.c ****           HAL_RTC_GetDate(&hrtc, &last_sDate, RTC_FORMAT_BIN);
 1883              		.loc 1 619 11 is_stmt 1 view .LVU414
 1884 05e4 364C     		ldr	r4, .L100+116
 1885 05e6 374E     		ldr	r6, .L100+120
 1886 05e8 2A46     		mov	r2, r5
 1887 05ea 2146     		mov	r1, r4
 1888 05ec 3046     		mov	r0, r6
 1889 05ee FFF7FEFF 		bl	HAL_RTC_GetTime
 1890              	.LVL156:
 620:Core/Src/main.c ****           totalMinute_OperateTime = (60 * last_sTime.Hours + last_sTime.Minutes) - (60 * current_sT
 1891              		.loc 1 620 11 view .LVU415
 1892 05f2 2A46     		mov	r2, r5
 1893 05f4 3449     		ldr	r1, .L100+124
 1894 05f6 3046     		mov	r0, r6
 1895 05f8 FFF7FEFF 		bl	HAL_RTC_GetDate
 1896              	.LVL157:
 621:Core/Src/main.c ****           time_hour = totalMinute_OperateTime / 60;
 1897              		.loc 1 621 11 view .LVU416
 621:Core/Src/main.c ****           time_hour = totalMinute_OperateTime / 60;
 1898              		.loc 1 621 53 is_stmt 0 view .LVU417
 1899 05fc 2278     		ldrb	r2, [r4]	@ zero_extendqisi2
 621:Core/Src/main.c ****           time_hour = totalMinute_OperateTime / 60;
 1900              		.loc 1 621 72 view .LVU418
 1901 05fe 6378     		ldrb	r3, [r4, #1]	@ zero_extendqisi2
 621:Core/Src/main.c ****           time_hour = totalMinute_OperateTime / 60;
 1902              		.loc 1 621 60 view .LVU419
 1903 0600 C2EB0212 		rsb	r2, r2, r2, lsl #4
 1904 0604 03EB8203 		add	r3, r3, r2, lsl #2
 1905 0608 9BB2     		uxth	r3, r3
 621:Core/Src/main.c ****           time_hour = totalMinute_OperateTime / 60;
 1906              		.loc 1 621 103 view .LVU420
 1907 060a 304A     		ldr	r2, .L100+128
 1908 060c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 621:Core/Src/main.c ****           time_hour = totalMinute_OperateTime / 60;
 1909              		.loc 1 621 125 view .LVU421
 1910 060e 5278     		ldrb	r2, [r2, #1]	@ zero_extendqisi2
 621:Core/Src/main.c ****           time_hour = totalMinute_OperateTime / 60;
 1911              		.loc 1 621 110 view .LVU422
 1912 0610 C1EB0111 		rsb	r1, r1, r1, lsl #4
 1913 0614 02EB8102 		add	r2, r2, r1, lsl #2
 1914 0618 92B2     		uxth	r2, r2
 621:Core/Src/main.c ****           time_hour = totalMinute_OperateTime / 60;
 1915              		.loc 1 621 82 view .LVU423
 1916 061a 9B1A     		subs	r3, r3, r2
 1917 061c 9BB2     		uxth	r3, r3
 621:Core/Src/main.c ****           time_hour = totalMinute_OperateTime / 60;
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 62


 1918              		.loc 1 621 35 view .LVU424
 1919 061e 2C4A     		ldr	r2, .L100+132
 1920 0620 1380     		strh	r3, [r2]	@ movhi
 622:Core/Src/main.c ****           time_minute = totalMinute_OperateTime - time_hour * 60;
 1921              		.loc 1 622 11 is_stmt 1 view .LVU425
 622:Core/Src/main.c ****           time_minute = totalMinute_OperateTime - time_hour * 60;
 1922              		.loc 1 622 47 is_stmt 0 view .LVU426
 1923 0622 2C4A     		ldr	r2, .L100+136
 1924 0624 A2FB0312 		umull	r1, r2, r2, r3
 1925 0628 5209     		lsrs	r2, r2, #5
 622:Core/Src/main.c ****           time_minute = totalMinute_OperateTime - time_hour * 60;
 1926              		.loc 1 622 21 view .LVU427
 1927 062a 2B49     		ldr	r1, .L100+140
 1928 062c 0A60     		str	r2, [r1]
 623:Core/Src/main.c ****           sprintf(totalMinute_OperateTime_buff, "%dh%d", time_hour, time_minute);
 1929              		.loc 1 623 11 is_stmt 1 view .LVU428
 623:Core/Src/main.c ****           sprintf(totalMinute_OperateTime_buff, "%dh%d", time_hour, time_minute);
 1930              		.loc 1 623 61 is_stmt 0 view .LVU429
 1931 062e A2EB0211 		sub	r1, r2, r2, lsl #4
 623:Core/Src/main.c ****           sprintf(totalMinute_OperateTime_buff, "%dh%d", time_hour, time_minute);
 1932              		.loc 1 623 49 view .LVU430
 1933 0632 03EB8103 		add	r3, r3, r1, lsl #2
 623:Core/Src/main.c ****           sprintf(totalMinute_OperateTime_buff, "%dh%d", time_hour, time_minute);
 1934              		.loc 1 623 23 view .LVU431
 1935 0636 2949     		ldr	r1, .L100+144
 1936 0638 0B60     		str	r3, [r1]
 624:Core/Src/main.c ****           log_data(totalMinute_OperateTime_buff);
 1937              		.loc 1 624 11 is_stmt 1 view .LVU432
 1938 063a 294C     		ldr	r4, .L100+148
 1939 063c 2949     		ldr	r1, .L100+152
 1940 063e 2046     		mov	r0, r4
 1941 0640 FFF7FEFF 		bl	sprintf
 1942              	.LVL158:
 625:Core/Src/main.c ****         }
 1943              		.loc 1 625 11 view .LVU433
 1944 0644 2046     		mov	r0, r4
 1945 0646 FFF7FEFF 		bl	log_data
 1946              	.LVL159:
 1947 064a 34E7     		b	.L75
 1948              	.L101:
 1949              		.align	2
 1950              	.L100:
 1951 064c 00000000 		.word	.LANCHOR12
 1952 0650 00000000 		.word	.LANCHOR22
 1953 0654 58010000 		.word	.LC22
 1954 0658 00000000 		.word	.LANCHOR20
 1955 065c 00000000 		.word	.LANCHOR21
 1956 0660 00000000 		.word	.LANCHOR0
 1957 0664 80010000 		.word	.LC24
 1958 0668 6C010000 		.word	.LC23
 1959 066c 00000000 		.word	.LANCHOR13
 1960 0670 94010000 		.word	.LC25
 1961 0674 00000000 		.word	.LANCHOR15
 1962 0678 00000000 		.word	.LANCHOR1
 1963 067c E0010000 		.word	.LC32
 1964 0680 00000000 		.word	.LANCHOR33
 1965 0684 00000000 		.word	.LANCHOR34
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 63


 1966 0688 F0010000 		.word	.LC33
 1967 068c F4010000 		.word	.LC34
 1968 0690 F8010000 		.word	.LC35
 1969 0694 FC010000 		.word	.LC36
 1970 0698 B0010000 		.word	.LC27
 1971 069c 10020000 		.word	.LC37
 1972 06a0 00000000 		.word	.LANCHOR32
 1973 06a4 1C020000 		.word	.LC38
 1974 06a8 00000000 		.word	.LANCHOR35
 1975 06ac 00000000 		.word	.LANCHOR19
 1976 06b0 20000000 		.word	l70DataAfterHadler+32
 1977 06b4 28020000 		.word	.LC39
 1978 06b8 D8020000 		.word	.LC40
 1979 06bc 00000000 		.word	.LANCHOR36
 1980 06c0 00000000 		.word	.LANCHOR26
 1981 06c4 00000000 		.word	hrtc
 1982 06c8 00000000 		.word	.LANCHOR27
 1983 06cc 00000000 		.word	.LANCHOR16
 1984 06d0 00000000 		.word	.LANCHOR28
 1985 06d4 89888888 		.word	-2004318071
 1986 06d8 00000000 		.word	.LANCHOR29
 1987 06dc 00000000 		.word	.LANCHOR30
 1988 06e0 00000000 		.word	.LANCHOR31
 1989 06e4 C0010000 		.word	.LC29
 1990              	.L79:
 630:Core/Src/main.c ****       {
 1991              		.loc 1 630 7 view .LVU434
 630:Core/Src/main.c ****       {
 1992              		.loc 1 630 23 is_stmt 0 view .LVU435
 1993 06e8 884B     		ldr	r3, .L102
 1994 06ea DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 630:Core/Src/main.c ****       {
 1995              		.loc 1 630 10 view .LVU436
 1996 06ec 002B     		cmp	r3, #0
 1997 06ee 7FF4E2AE 		bne	.L75
 632:Core/Src/main.c ****         Taskperform.TaskStore = true;
 1998              		.loc 1 632 9 is_stmt 1 view .LVU437
 1999 06f2 8748     		ldr	r0, .L102+4
 2000 06f4 FFF7FEFF 		bl	log_data
 2001              	.LVL160:
 633:Core/Src/main.c **** 
 2002              		.loc 1 633 9 view .LVU438
 633:Core/Src/main.c **** 
 2003              		.loc 1 633 31 is_stmt 0 view .LVU439
 2004 06f8 844B     		ldr	r3, .L102
 2005 06fa 0122     		movs	r2, #1
 2006 06fc DA70     		strb	r2, [r3, #3]
 635:Core/Src/main.c ****         if (fresult != FR_OK)
 2007              		.loc 1 635 9 is_stmt 1 view .LVU440
 635:Core/Src/main.c ****         if (fresult != FR_OK)
 2008              		.loc 1 635 19 is_stmt 0 view .LVU441
 2009 06fe 0222     		movs	r2, #2
 2010 0700 8449     		ldr	r1, .L102+8
 2011 0702 8548     		ldr	r0, .L102+12
 2012 0704 FFF7FEFF 		bl	f_open
 2013              	.LVL161:
 635:Core/Src/main.c ****         if (fresult != FR_OK)
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 64


 2014              		.loc 1 635 17 view .LVU442
 2015 0708 844B     		ldr	r3, .L102+16
 2016 070a 1870     		strb	r0, [r3]
 636:Core/Src/main.c ****           log_data("open error...\n\n");
 2017              		.loc 1 636 9 is_stmt 1 view .LVU443
 636:Core/Src/main.c ****           log_data("open error...\n\n");
 2018              		.loc 1 636 12 is_stmt 0 view .LVU444
 2019 070c 0028     		cmp	r0, #0
 2020 070e 44D0     		beq	.L83
 637:Core/Src/main.c ****         else
 2021              		.loc 1 637 11 is_stmt 1 view .LVU445
 2022 0710 8348     		ldr	r0, .L102+20
 2023 0712 FFF7FEFF 		bl	log_data
 2024              	.LVL162:
 2025              	.L84:
 641:Core/Src/main.c **** 
 2026              		.loc 1 641 9 view .LVU446
 2027 0716 804C     		ldr	r4, .L102+12
 2028 0718 04F58053 		add	r3, r4, #4096
 2029 071c D968     		ldr	r1, [r3, #12]
 2030 071e 2046     		mov	r0, r4
 2031 0720 FFF7FEFF 		bl	f_lseek
 2032              	.LVL163:
 643:Core/Src/main.c ****         f_puts("\t", &fil);
 2033              		.loc 1 643 9 view .LVU447
 2034 0724 7F4E     		ldr	r6, .L102+24
 2035 0726 2146     		mov	r1, r4
 2036 0728 3046     		mov	r0, r6
 2037 072a FFF7FEFF 		bl	f_puts
 2038              	.LVL164:
 644:Core/Src/main.c ****         f_puts(Card_Startbuff, &fil);
 2039              		.loc 1 644 9 view .LVU448
 2040 072e 7E4D     		ldr	r5, .L102+28
 2041 0730 2146     		mov	r1, r4
 2042 0732 2846     		mov	r0, r5
 2043 0734 FFF7FEFF 		bl	f_puts
 2044              	.LVL165:
 645:Core/Src/main.c ****         f_puts("\t", &fil);
 2045              		.loc 1 645 9 view .LVU449
 2046 0738 2146     		mov	r1, r4
 2047 073a 7C48     		ldr	r0, .L102+32
 2048 073c FFF7FEFF 		bl	f_puts
 2049              	.LVL166:
 646:Core/Src/main.c ****         f_puts(l70DataAfterHadler.latitude, &fil);
 2050              		.loc 1 646 9 view .LVU450
 2051 0740 2146     		mov	r1, r4
 2052 0742 2846     		mov	r0, r5
 2053 0744 FFF7FEFF 		bl	f_puts
 2054              	.LVL167:
 647:Core/Src/main.c ****         f_puts("\t", &fil);
 2055              		.loc 1 647 9 view .LVU451
 2056 0748 2146     		mov	r1, r4
 2057 074a 06F10C00 		add	r0, r6, #12
 2058 074e FFF7FEFF 		bl	f_puts
 2059              	.LVL168:
 648:Core/Src/main.c ****         f_puts(l70DataAfterHadler.longitude, &fil);
 2060              		.loc 1 648 9 view .LVU452
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 65


 2061 0752 2146     		mov	r1, r4
 2062 0754 2846     		mov	r0, r5
 2063 0756 FFF7FEFF 		bl	f_puts
 2064              	.LVL169:
 649:Core/Src/main.c ****         f_puts("\t", &fil);
 2065              		.loc 1 649 9 view .LVU453
 2066 075a 2146     		mov	r1, r4
 2067 075c 06F12000 		add	r0, r6, #32
 2068 0760 FFF7FEFF 		bl	f_puts
 2069              	.LVL170:
 650:Core/Src/main.c ****         f_puts(l70DataAfterHadler.Speed, &fil);
 2070              		.loc 1 650 9 view .LVU454
 2071 0764 2146     		mov	r1, r4
 2072 0766 2846     		mov	r0, r5
 2073 0768 FFF7FEFF 		bl	f_puts
 2074              	.LVL171:
 651:Core/Src/main.c ****         f_puts("\t", &fil);
 2075              		.loc 1 651 9 view .LVU455
 2076 076c 2146     		mov	r1, r4
 2077 076e 06F13400 		add	r0, r6, #52
 2078 0772 FFF7FEFF 		bl	f_puts
 2079              	.LVL172:
 652:Core/Src/main.c ****         f_puts(sensors.ds18_buff, &fil);
 2080              		.loc 1 652 9 view .LVU456
 2081 0776 2146     		mov	r1, r4
 2082 0778 2846     		mov	r0, r5
 2083 077a FFF7FEFF 		bl	f_puts
 2084              	.LVL173:
 653:Core/Src/main.c ****         f_puts("\n", &fil);
 2085              		.loc 1 653 9 view .LVU457
 2086 077e 2146     		mov	r1, r4
 2087 0780 6B48     		ldr	r0, .L102+36
 2088 0782 FFF7FEFF 		bl	f_puts
 2089              	.LVL174:
 654:Core/Src/main.c **** 
 2090              		.loc 1 654 9 view .LVU458
 2091 0786 2146     		mov	r1, r4
 2092 0788 6A48     		ldr	r0, .L102+40
 2093 078a FFF7FEFF 		bl	f_puts
 2094              	.LVL175:
 656:Core/Src/main.c ****       }
 2095              		.loc 1 656 9 view .LVU459
 656:Core/Src/main.c ****       }
 2096              		.loc 1 656 19 is_stmt 0 view .LVU460
 2097 078e 2046     		mov	r0, r4
 2098 0790 FFF7FEFF 		bl	f_close
 2099              	.LVL176:
 656:Core/Src/main.c ****       }
 2100              		.loc 1 656 17 view .LVU461
 2101 0794 614B     		ldr	r3, .L102+16
 2102 0796 1870     		strb	r0, [r3]
 2103 0798 8DE6     		b	.L75
 2104              	.L83:
 639:Core/Src/main.c **** 
 2105              		.loc 1 639 11 is_stmt 1 view .LVU462
 2106 079a 6748     		ldr	r0, .L102+44
 2107 079c FFF7FEFF 		bl	log_data
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 66


 2108              	.LVL177:
 2109 07a0 B9E7     		b	.L84
 2110              	.L78:
 660:Core/Src/main.c ****       {
 2111              		.loc 1 660 7 view .LVU463
 660:Core/Src/main.c ****       {
 2112              		.loc 1 660 23 is_stmt 0 view .LVU464
 2113 07a2 5A4B     		ldr	r3, .L102
 2114 07a4 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 660:Core/Src/main.c ****       {
 2115              		.loc 1 660 10 view .LVU465
 2116 07a6 002B     		cmp	r3, #0
 2117 07a8 7FF485AE 		bne	.L75
 662:Core/Src/main.c ****         Taskperform.TaskDisplay = true;
 2118              		.loc 1 662 9 is_stmt 1 view .LVU466
 2119 07ac 6348     		ldr	r0, .L102+48
 2120 07ae FFF7FEFF 		bl	log_data
 2121              	.LVL178:
 663:Core/Src/main.c ****         SSD1306_GotoXY(75, 2);
 2122              		.loc 1 663 9 view .LVU467
 663:Core/Src/main.c ****         SSD1306_GotoXY(75, 2);
 2123              		.loc 1 663 33 is_stmt 0 view .LVU468
 2124 07b2 0124     		movs	r4, #1
 2125 07b4 554B     		ldr	r3, .L102
 2126 07b6 1C71     		strb	r4, [r3, #4]
 664:Core/Src/main.c ****         SSD1306_Puts(l70DataAfterHadler.utcTime, &Font_7x10, 1);
 2127              		.loc 1 664 9 is_stmt 1 view .LVU469
 2128 07b8 0221     		movs	r1, #2
 2129 07ba 4B20     		movs	r0, #75
 2130 07bc FFF7FEFF 		bl	SSD1306_GotoXY
 2131              	.LVL179:
 665:Core/Src/main.c ****         SSD1306_GotoXY(30, 16);
 2132              		.loc 1 665 9 view .LVU470
 2133 07c0 5F4E     		ldr	r6, .L102+52
 2134 07c2 584D     		ldr	r5, .L102+24
 2135 07c4 2246     		mov	r2, r4
 2136 07c6 3146     		mov	r1, r6
 2137 07c8 2846     		mov	r0, r5
 2138 07ca FFF7FEFF 		bl	SSD1306_Puts
 2139              	.LVL180:
 666:Core/Src/main.c ****         SSD1306_Puts(l70DataAfterHadler.Date, &Font_7x10, 1);
 2140              		.loc 1 666 9 view .LVU471
 2141 07ce 1021     		movs	r1, #16
 2142 07d0 1E20     		movs	r0, #30
 2143 07d2 FFF7FEFF 		bl	SSD1306_GotoXY
 2144              	.LVL181:
 667:Core/Src/main.c ****         SSD1306_GotoXY(25, 28);
 2145              		.loc 1 667 9 view .LVU472
 2146 07d6 2246     		mov	r2, r4
 2147 07d8 3146     		mov	r1, r6
 2148 07da 05F14800 		add	r0, r5, #72
 2149 07de FFF7FEFF 		bl	SSD1306_Puts
 2150              	.LVL182:
 668:Core/Src/main.c ****         SSD1306_Puts(l70DataAfterHadler.longitude, &Font_7x10, 1);
 2151              		.loc 1 668 9 view .LVU473
 2152 07e2 1C21     		movs	r1, #28
 2153 07e4 1920     		movs	r0, #25
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 67


 2154 07e6 FFF7FEFF 		bl	SSD1306_GotoXY
 2155              	.LVL183:
 669:Core/Src/main.c ****         SSD1306_GotoXY(25, 40);
 2156              		.loc 1 669 9 view .LVU474
 2157 07ea 2246     		mov	r2, r4
 2158 07ec 3146     		mov	r1, r6
 2159 07ee 05F12000 		add	r0, r5, #32
 2160 07f2 FFF7FEFF 		bl	SSD1306_Puts
 2161              	.LVL184:
 670:Core/Src/main.c ****         SSD1306_Puts(l70DataAfterHadler.latitude, &Font_7x10, 1);
 2162              		.loc 1 670 9 view .LVU475
 2163 07f6 2821     		movs	r1, #40
 2164 07f8 1920     		movs	r0, #25
 2165 07fa FFF7FEFF 		bl	SSD1306_GotoXY
 2166              	.LVL185:
 671:Core/Src/main.c ****         SSD1306_GotoXY(35, 52);
 2167              		.loc 1 671 9 view .LVU476
 2168 07fe 2246     		mov	r2, r4
 2169 0800 3146     		mov	r1, r6
 2170 0802 05F10C00 		add	r0, r5, #12
 2171 0806 FFF7FEFF 		bl	SSD1306_Puts
 2172              	.LVL186:
 672:Core/Src/main.c ****         SSD1306_Puts(l70DataAfterHadler.Speed, &Font_7x10, 1);
 2173              		.loc 1 672 9 view .LVU477
 2174 080a 3421     		movs	r1, #52
 2175 080c 2320     		movs	r0, #35
 2176 080e FFF7FEFF 		bl	SSD1306_GotoXY
 2177              	.LVL187:
 673:Core/Src/main.c ****         SSD1306_UpdateScreen();
 2178              		.loc 1 673 9 view .LVU478
 2179 0812 2246     		mov	r2, r4
 2180 0814 3146     		mov	r1, r6
 2181 0816 05F13400 		add	r0, r5, #52
 2182 081a FFF7FEFF 		bl	SSD1306_Puts
 2183              	.LVL188:
 674:Core/Src/main.c ****       }
 2184              		.loc 1 674 9 view .LVU479
 2185 081e FFF7FEFF 		bl	SSD1306_UpdateScreen
 2186              	.LVL189:
 2187 0822 48E6     		b	.L75
 2188              	.L76:
 679:Core/Src/main.c ****       {
 2189              		.loc 1 679 7 view .LVU480
 679:Core/Src/main.c ****       {
 2190              		.loc 1 679 11 is_stmt 0 view .LVU481
 2191 0824 474B     		ldr	r3, .L102+56
 2192 0826 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 679:Core/Src/main.c ****       {
 2193              		.loc 1 679 10 view .LVU482
 2194 0828 DBB9     		cbnz	r3, .L97
 2195              	.L85:
 700:Core/Src/main.c ****       {
 2196              		.loc 1 700 7 is_stmt 1 view .LVU483
 700:Core/Src/main.c ****       {
 2197              		.loc 1 700 11 is_stmt 0 view .LVU484
 2198 082a 474B     		ldr	r3, .L102+60
 2199 082c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 68


 700:Core/Src/main.c ****       {
 2200              		.loc 1 700 10 view .LVU485
 2201 082e 002B     		cmp	r3, #0
 2202 0830 3FF441AE 		beq	.L75
 702:Core/Src/main.c ****         if (strstr(rs232_buff, "Trich xuat du lieu\n") != NULL)
 2203              		.loc 1 702 9 is_stmt 1 view .LVU486
 702:Core/Src/main.c ****         if (strstr(rs232_buff, "Trich xuat du lieu\n") != NULL)
 2204              		.loc 1 702 20 is_stmt 0 view .LVU487
 2205 0834 444B     		ldr	r3, .L102+60
 2206 0836 0022     		movs	r2, #0
 2207 0838 1A70     		strb	r2, [r3]
 703:Core/Src/main.c ****         {
 2208              		.loc 1 703 9 is_stmt 1 view .LVU488
 703:Core/Src/main.c ****         {
 2209              		.loc 1 703 13 is_stmt 0 view .LVU489
 2210 083a 4449     		ldr	r1, .L102+64
 2211 083c 4448     		ldr	r0, .L102+68
 2212 083e FFF7FEFF 		bl	strstr
 2213              	.LVL190:
 703:Core/Src/main.c ****         {
 2214              		.loc 1 703 12 view .LVU490
 2215 0842 0028     		cmp	r0, #0
 2216 0844 3FF437AE 		beq	.L75
 705:Core/Src/main.c ****           if (fresult != FR_OK)
 2217              		.loc 1 705 11 is_stmt 1 view .LVU491
 705:Core/Src/main.c ****           if (fresult != FR_OK)
 2218              		.loc 1 705 21 is_stmt 0 view .LVU492
 2219 0848 0122     		movs	r2, #1
 2220 084a 3249     		ldr	r1, .L102+8
 2221 084c 3248     		ldr	r0, .L102+12
 2222 084e FFF7FEFF 		bl	f_open
 2223              	.LVL191:
 705:Core/Src/main.c ****           if (fresult != FR_OK)
 2224              		.loc 1 705 19 view .LVU493
 2225 0852 324B     		ldr	r3, .L102+16
 2226 0854 1870     		strb	r0, [r3]
 706:Core/Src/main.c ****             log_data("open error...\n\n");
 2227              		.loc 1 706 11 is_stmt 1 view .LVU494
 706:Core/Src/main.c ****             log_data("open error...\n\n");
 2228              		.loc 1 706 14 is_stmt 0 view .LVU495
 2229 0856 0028     		cmp	r0, #0
 2230 0858 47D0     		beq	.L88
 707:Core/Src/main.c ****           else
 2231              		.loc 1 707 13 is_stmt 1 view .LVU496
 2232 085a 3148     		ldr	r0, .L102+20
 2233 085c FFF7FEFF 		bl	log_data
 2234              	.LVL192:
 2235 0860 4AE0     		b	.L90
 2236              	.L97:
 681:Core/Src/main.c ****         sprintf(Card_Endbuff, "%02X%02X%02X%02X", CardID[0], CardID[1], CardID[2], CardID[3]);
 2237              		.loc 1 681 9 view .LVU497
 681:Core/Src/main.c ****         sprintf(Card_Endbuff, "%02X%02X%02X%02X", CardID[0], CardID[1], CardID[2], CardID[3]);
 2238              		.loc 1 681 16 is_stmt 0 view .LVU498
 2239 0862 384B     		ldr	r3, .L102+56
 2240 0864 0022     		movs	r2, #0
 2241 0866 1A70     		strb	r2, [r3]
 682:Core/Src/main.c ****         if (strcmp(Card_Startbuff, Card_Endbuff) != 0)
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 69


 2242              		.loc 1 682 9 is_stmt 1 view .LVU499
 682:Core/Src/main.c ****         if (strcmp(Card_Startbuff, Card_Endbuff) != 0)
 2243              		.loc 1 682 57 is_stmt 0 view .LVU500
 2244 0868 3A4A     		ldr	r2, .L102+72
 682:Core/Src/main.c ****         if (strcmp(Card_Startbuff, Card_Endbuff) != 0)
 2245              		.loc 1 682 79 view .LVU501
 2246 086a 9378     		ldrb	r3, [r2, #2]	@ zero_extendqisi2
 682:Core/Src/main.c ****         if (strcmp(Card_Startbuff, Card_Endbuff) != 0)
 2247              		.loc 1 682 90 view .LVU502
 2248 086c D178     		ldrb	r1, [r2, #3]	@ zero_extendqisi2
 682:Core/Src/main.c ****         if (strcmp(Card_Startbuff, Card_Endbuff) != 0)
 2249              		.loc 1 682 9 view .LVU503
 2250 086e 3A4C     		ldr	r4, .L102+76
 2251 0870 0191     		str	r1, [sp, #4]
 2252 0872 0093     		str	r3, [sp]
 2253 0874 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 2254 0876 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2255 0878 3849     		ldr	r1, .L102+80
 2256 087a 2046     		mov	r0, r4
 2257 087c FFF7FEFF 		bl	sprintf
 2258              	.LVL193:
 683:Core/Src/main.c ****         {
 2259              		.loc 1 683 9 is_stmt 1 view .LVU504
 683:Core/Src/main.c ****         {
 2260              		.loc 1 683 13 is_stmt 0 view .LVU505
 2261 0880 2146     		mov	r1, r4
 2262 0882 2A48     		ldr	r0, .L102+32
 2263 0884 FFF7FEFF 		bl	strcmp
 2264              	.LVL194:
 683:Core/Src/main.c ****         {
 2265              		.loc 1 683 12 view .LVU506
 2266 0888 50B1     		cbz	r0, .L86
 685:Core/Src/main.c ****         }
 2267              		.loc 1 685 11 is_stmt 1 view .LVU507
 2268 088a 3548     		ldr	r0, .L102+84
 2269 088c FFF7FEFF 		bl	log_data
 2270              	.LVL195:
 2271              	.L87:
 697:Core/Src/main.c ****         log_data("Device start sleep\n");
 2272              		.loc 1 697 9 view .LVU508
 2273 0890 4FF47A70 		mov	r0, #1000
 2274 0894 FFF7FEFF 		bl	HAL_Delay
 2275              	.LVL196:
 698:Core/Src/main.c ****       }
 2276              		.loc 1 698 9 view .LVU509
 2277 0898 3248     		ldr	r0, .L102+88
 2278 089a FFF7FEFF 		bl	log_data
 2279              	.LVL197:
 2280 089e C4E7     		b	.L85
 2281              	.L86:
 689:Core/Src/main.c ****           // write flash totaltime
 2282              		.loc 1 689 11 view .LVU510
 2283 08a0 3148     		ldr	r0, .L102+92
 2284 08a2 FFF7FEFF 		bl	log_data
 2285              	.LVL198:
 691:Core/Src/main.c ****           HAL_RTC_GetDate(&hrtc, &last_sDate, RTC_FORMAT_BIN);
 2286              		.loc 1 691 11 view .LVU511
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 70


 2287 08a6 314C     		ldr	r4, .L102+96
 2288 08a8 314D     		ldr	r5, .L102+100
 2289 08aa 0022     		movs	r2, #0
 2290 08ac 2146     		mov	r1, r4
 2291 08ae 2846     		mov	r0, r5
 2292 08b0 FFF7FEFF 		bl	HAL_RTC_GetTime
 2293              	.LVL199:
 692:Core/Src/main.c ****           totalMinute_OperateTime = (60 * last_sTime.Hours + last_sTime.Minutes) - (60 * current_sT
 2294              		.loc 1 692 11 view .LVU512
 2295 08b4 0022     		movs	r2, #0
 2296 08b6 2F49     		ldr	r1, .L102+104
 2297 08b8 2846     		mov	r0, r5
 2298 08ba FFF7FEFF 		bl	HAL_RTC_GetDate
 2299              	.LVL200:
 693:Core/Src/main.c ****           set_alarm(10);
 2300              		.loc 1 693 11 view .LVU513
 693:Core/Src/main.c ****           set_alarm(10);
 2301              		.loc 1 693 53 is_stmt 0 view .LVU514
 2302 08be 2278     		ldrb	r2, [r4]	@ zero_extendqisi2
 693:Core/Src/main.c ****           set_alarm(10);
 2303              		.loc 1 693 72 view .LVU515
 2304 08c0 6378     		ldrb	r3, [r4, #1]	@ zero_extendqisi2
 693:Core/Src/main.c ****           set_alarm(10);
 2305              		.loc 1 693 60 view .LVU516
 2306 08c2 C2EB0212 		rsb	r2, r2, r2, lsl #4
 2307 08c6 03EB8203 		add	r3, r3, r2, lsl #2
 2308 08ca 9BB2     		uxth	r3, r3
 693:Core/Src/main.c ****           set_alarm(10);
 2309              		.loc 1 693 103 view .LVU517
 2310 08cc 2A4A     		ldr	r2, .L102+108
 2311 08ce 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 693:Core/Src/main.c ****           set_alarm(10);
 2312              		.loc 1 693 125 view .LVU518
 2313 08d0 5278     		ldrb	r2, [r2, #1]	@ zero_extendqisi2
 693:Core/Src/main.c ****           set_alarm(10);
 2314              		.loc 1 693 110 view .LVU519
 2315 08d2 C1EB0111 		rsb	r1, r1, r1, lsl #4
 2316 08d6 02EB8102 		add	r2, r2, r1, lsl #2
 2317 08da 92B2     		uxth	r2, r2
 693:Core/Src/main.c ****           set_alarm(10);
 2318              		.loc 1 693 82 view .LVU520
 2319 08dc 9B1A     		subs	r3, r3, r2
 693:Core/Src/main.c ****           set_alarm(10);
 2320              		.loc 1 693 35 view .LVU521
 2321 08de 274A     		ldr	r2, .L102+112
 2322 08e0 1380     		strh	r3, [r2]	@ movhi
 694:Core/Src/main.c ****         }
 2323              		.loc 1 694 11 is_stmt 1 view .LVU522
 2324 08e2 0A20     		movs	r0, #10
 2325 08e4 FFF7FEFF 		bl	set_alarm
 2326              	.LVL201:
 2327 08e8 D2E7     		b	.L87
 2328              	.L88:
 709:Core/Src/main.c ****           while (f_gets(SD_read, sizeof(SD_read), &fil) != NULL)
 2329              		.loc 1 709 13 view .LVU523
 2330 08ea 1348     		ldr	r0, .L102+44
 2331 08ec FFF7FEFF 		bl	log_data
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 71


 2332              	.LVL202:
 2333 08f0 02E0     		b	.L90
 2334              	.L91:
 712:Core/Src/main.c ****           }
 2335              		.loc 1 712 13 view .LVU524
 2336 08f2 2348     		ldr	r0, .L102+116
 2337 08f4 FFF7FEFF 		bl	rs232_logdata
 2338              	.LVL203:
 2339              	.L90:
 710:Core/Src/main.c ****           {
 2340              		.loc 1 710 17 view .LVU525
 710:Core/Src/main.c ****           {
 2341              		.loc 1 710 18 is_stmt 0 view .LVU526
 2342 08f8 074A     		ldr	r2, .L102+12
 2343 08fa 4FF48071 		mov	r1, #256
 2344 08fe 2048     		ldr	r0, .L102+116
 2345 0900 FFF7FEFF 		bl	f_gets
 2346              	.LVL204:
 710:Core/Src/main.c ****           {
 2347              		.loc 1 710 17 view .LVU527
 2348 0904 0028     		cmp	r0, #0
 2349 0906 F4D1     		bne	.L91
 2350 0908 D5E5     		b	.L75
 2351              	.L103:
 2352 090a 00BF     		.align	2
 2353              	.L102:
 2354 090c 00000000 		.word	.LANCHOR15
 2355 0910 F0020000 		.word	.LC41
 2356 0914 FC020000 		.word	.LC42
 2357 0918 00000000 		.word	fil
 2358 091c 00000000 		.word	.LANCHOR18
 2359 0920 08030000 		.word	.LC43
 2360 0924 00000000 		.word	l70DataAfterHadler
 2361 0928 30030000 		.word	.LC45
 2362 092c 00000000 		.word	.LANCHOR22
 2363 0930 00000000 		.word	.LANCHOR34
 2364 0934 B0010000 		.word	.LC27
 2365 0938 18030000 		.word	.LC44
 2366 093c 34030000 		.word	.LC46
 2367 0940 00000000 		.word	Font_7x10
 2368 0944 00000000 		.word	.LANCHOR14
 2369 0948 00000000 		.word	.LANCHOR5
 2370 094c 84030000 		.word	.LC50
 2371 0950 00000000 		.word	.LANCHOR4
 2372 0954 00000000 		.word	.LANCHOR12
 2373 0958 00000000 		.word	.LANCHOR37
 2374 095c 58010000 		.word	.LC22
 2375 0960 44030000 		.word	.LC47
 2376 0964 70030000 		.word	.LC49
 2377 0968 54030000 		.word	.LC48
 2378 096c 00000000 		.word	.LANCHOR26
 2379 0970 00000000 		.word	hrtc
 2380 0974 00000000 		.word	.LANCHOR27
 2381 0978 00000000 		.word	.LANCHOR16
 2382 097c 00000000 		.word	.LANCHOR28
 2383 0980 00000000 		.word	.LANCHOR38
 2384              		.cfi_endproc
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 72


 2385              	.LFE76:
 2387              		.global	rs232_flag
 2388              		.global	rs232_index
 2389              		.global	rs232_buff
 2390              		.global	rs232_data
 2391              		.global	flash_Readbuff
 2392              		.global	sensors
 2393              		.global	dht_hum
 2394              		.global	dht_temp
 2395              		.global	ds18_temp
 2396              		.global	Task_Mode
 2397              		.global	Taskperform
 2398              		.global	Type_Task
 2399              		.global	infoUser2
 2400              		.global	infoUser1
 2401              		.global	infoUser
 2402              		.global	id_ref
 2403              		.section	.rodata.str1.4,"aMS",%progbits,1
 2404              		.align	2
 2405              	.LC51:
 2406 0000 00       		.ascii	"\000"
 2407              		.global	Card_Endbuff
 2408              		.global	Card_Startbuff
 2409              		.global	Json_Data
 2410              		.global	stateDevice
 2411              		.global	SD_read
 2412              		.global	free_space
 2413              		.global	total
 2414              		.global	fre_clust
 2415              		.global	pfs
 2416              		.global	bw
 2417              		.global	br
 2418              		.global	SD_file_name
 2419              		.global	SD_buffer_r
 2420              		.global	SD_buffer_w
 2421              		.global	fresult
 2422              		.global	fil
 2423              		.global	fs
 2424              		.global	gnss_str
 2425              		.global	l70Data1
 2426              		.global	simMessage
 2427              		.global	longData
 2428              		.global	latData
 2429              		.global	GPSResponse
 2430              		.global	numCheck_time
 2431              		.global	totalMinute_OperateTime_buff
 2432              		.global	time_minute
 2433              		.global	time_hour
 2434              		.global	totalMinute_OperateTime
 2435              		.global	check
 2436              		.global	date_buff
 2437              		.global	time_buff
 2438              		.global	year
 2439              		.global	month
 2440              		.global	day
 2441              		.global	date
 2442              		.global	hour
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 73


 2443              		.global	minute
 2444              		.global	sencond
 2445              		.global	sAlarm
 2446              		.global	last_sDate
 2447              		.global	last_sTime
 2448              		.global	current_sDate
 2449              		.global	current_sTime
 2450              		.global	Vehical_veloc
 2451              		.global	last_time
 2452              		.global	current_time
 2453              		.global	Vehical_State
 2454              		.global	npn_count
 2455              		.global	npn_flag_check
 2456              		.global	Logout
 2457              		.global	waiting4LogOut
 2458              		.global	szBuff
 2459              		.global	CardID
 2460              		.global	bitmap
 2461              		.section	.bss.CardID,"aw",%nobits
 2462              		.align	2
 2463              		.set	.LANCHOR12,. + 0
 2466              	CardID:
 2467 0000 00000000 		.space	5
 2467      00
 2468              		.section	.bss.Card_Endbuff,"aw",%nobits
 2469              		.align	2
 2470              		.set	.LANCHOR37,. + 0
 2473              	Card_Endbuff:
 2474 0000 00000000 		.space	20
 2474      00000000 
 2474      00000000 
 2474      00000000 
 2474      00000000 
 2475              		.section	.bss.Card_Startbuff,"aw",%nobits
 2476              		.align	2
 2477              		.set	.LANCHOR22,. + 0
 2480              	Card_Startbuff:
 2481 0000 00000000 		.space	20
 2481      00000000 
 2481      00000000 
 2481      00000000 
 2481      00000000 
 2482              		.section	.bss.GPSResponse,"aw",%nobits
 2483              		.align	2
 2484              		.set	.LANCHOR32,. + 0
 2487              	GPSResponse:
 2488 0000 00000000 		.space	4
 2489              		.section	.bss.Json_Data,"aw",%nobits
 2490              		.align	2
 2491              		.set	.LANCHOR35,. + 0
 2494              	Json_Data:
 2495 0000 00000000 		.space	500
 2495      00000000 
 2495      00000000 
 2495      00000000 
 2495      00000000 
 2496              		.section	.bss.Logout,"aw",%nobits
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 74


 2497              		.set	.LANCHOR14,. + 0
 2500              	Logout:
 2501 0000 00       		.space	1
 2502              		.section	.bss.SD_buffer_r,"aw",%nobits
 2503              		.align	2
 2506              	SD_buffer_r:
 2507 0000 00000000 		.space	10224
 2507      00000000 
 2507      00000000 
 2507      00000000 
 2507      00000000 
 2508              		.section	.bss.SD_buffer_w,"aw",%nobits
 2509              		.align	2
 2512              	SD_buffer_w:
 2513 0000 00000000 		.space	1024
 2513      00000000 
 2513      00000000 
 2513      00000000 
 2513      00000000 
 2514              		.section	.bss.SD_file_name,"aw",%nobits
 2515              		.align	2
 2518              	SD_file_name:
 2519 0000 00000000 		.space	50
 2519      00000000 
 2519      00000000 
 2519      00000000 
 2519      00000000 
 2520              		.section	.bss.SD_read,"aw",%nobits
 2521              		.align	2
 2522              		.set	.LANCHOR38,. + 0
 2525              	SD_read:
 2526 0000 00000000 		.space	256
 2526      00000000 
 2526      00000000 
 2526      00000000 
 2526      00000000 
 2527              		.section	.bss.Task_Mode,"aw",%nobits
 2528              		.align	2
 2531              	Task_Mode:
 2532 0000 00000000 		.space	4
 2533              		.section	.bss.Taskperform,"aw",%nobits
 2534              		.align	2
 2535              		.set	.LANCHOR15,. + 0
 2538              	Taskperform:
 2539 0000 00000000 		.space	5
 2539      00
 2540              		.section	.bss.Vehical_State,"aw",%nobits
 2541              		.align	2
 2542              		.set	.LANCHOR8,. + 0
 2545              	Vehical_State:
 2546 0000 00000000 		.space	4
 2547              		.section	.bss.Vehical_veloc,"aw",%nobits
 2548              		.align	2
 2549              		.set	.LANCHOR11,. + 0
 2552              	Vehical_veloc:
 2553 0000 00000000 		.space	4
 2554              		.section	.bss.br,"aw",%nobits
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 75


 2555              		.align	2
 2558              	br:
 2559 0000 00000000 		.space	4
 2560              		.section	.bss.bw,"aw",%nobits
 2561              		.align	2
 2564              	bw:
 2565 0000 00000000 		.space	4
 2566              		.section	.bss.check,"aw",%nobits
 2567              		.align	2
 2570              	check:
 2571 0000 00000000 		.space	4
 2572              		.section	.bss.current_sDate,"aw",%nobits
 2573              		.align	2
 2574              		.set	.LANCHOR23,. + 0
 2577              	current_sDate:
 2578 0000 00000000 		.space	4
 2579              		.section	.bss.current_sTime,"aw",%nobits
 2580              		.align	2
 2581              		.set	.LANCHOR16,. + 0
 2584              	current_sTime:
 2585 0000 000000   		.space	3
 2586              		.section	.bss.current_time,"aw",%nobits
 2587              		.align	2
 2588              		.set	.LANCHOR6,. + 0
 2591              	current_time:
 2592 0000 00000000 		.space	4
 2593              		.section	.bss.date,"aw",%nobits
 2596              	date:
 2597 0000 00       		.space	1
 2598              		.section	.bss.date_buff,"aw",%nobits
 2599              		.align	2
 2600              		.set	.LANCHOR25,. + 0
 2603              	date_buff:
 2604 0000 00000000 		.space	20
 2604      00000000 
 2604      00000000 
 2604      00000000 
 2604      00000000 
 2605              		.section	.bss.day,"aw",%nobits
 2608              	day:
 2609 0000 00       		.space	1
 2610              		.section	.bss.dht_hum,"aw",%nobits
 2611              		.align	2
 2614              	dht_hum:
 2615 0000 00000000 		.space	4
 2616              		.section	.bss.dht_temp,"aw",%nobits
 2617              		.align	2
 2620              	dht_temp:
 2621 0000 00000000 		.space	4
 2622              		.section	.bss.ds18_temp,"aw",%nobits
 2623              		.align	2
 2624              		.set	.LANCHOR33,. + 0
 2627              	ds18_temp:
 2628 0000 00000000 		.space	4
 2629              		.section	.bss.fil,"aw",%nobits
 2630              		.align	2
 2633              	fil:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 76


 2634 0000 00000000 		.space	4140
 2634      00000000 
 2634      00000000 
 2634      00000000 
 2634      00000000 
 2635              		.section	.bss.flash_Readbuff,"aw",%nobits
 2636              		.align	2
 2639              	flash_Readbuff:
 2640 0000 00000000 		.space	1024
 2640      00000000 
 2640      00000000 
 2640      00000000 
 2640      00000000 
 2641              		.section	.bss.fre_clust,"aw",%nobits
 2642              		.align	2
 2645              	fre_clust:
 2646 0000 00000000 		.space	4
 2647              		.section	.bss.free_space,"aw",%nobits
 2648              		.align	2
 2651              	free_space:
 2652 0000 00000000 		.space	4
 2653              		.section	.bss.fresult,"aw",%nobits
 2654              		.set	.LANCHOR18,. + 0
 2657              	fresult:
 2658 0000 00       		.space	1
 2659              		.section	.bss.fs,"aw",%nobits
 2660              		.align	2
 2663              	fs:
 2664 0000 00000000 		.space	4144
 2664      00000000 
 2664      00000000 
 2664      00000000 
 2664      00000000 
 2665              		.section	.bss.gnss_str,"aw",%nobits
 2666              		.align	2
 2669              	gnss_str:
 2670 0000 00000000 		.space	100
 2670      00000000 
 2670      00000000 
 2670      00000000 
 2670      00000000 
 2671              		.section	.bss.hour,"aw",%nobits
 2674              	hour:
 2675 0000 00       		.space	1
 2676              		.section	.bss.infoUser,"aw",%nobits
 2677              		.align	2
 2678              		.set	.LANCHOR0,. + 0
 2681              	infoUser:
 2682 0000 00000000 		.space	90
 2682      00000000 
 2682      00000000 
 2682      00000000 
 2682      00000000 
 2683              		.section	.bss.infoUser1,"aw",%nobits
 2684              		.align	2
 2685              		.set	.LANCHOR20,. + 0
 2688              	infoUser1:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 77


 2689 0000 00000000 		.space	90
 2689      00000000 
 2689      00000000 
 2689      00000000 
 2689      00000000 
 2690              		.section	.bss.infoUser2,"aw",%nobits
 2691              		.align	2
 2692              		.set	.LANCHOR21,. + 0
 2695              	infoUser2:
 2696 0000 00000000 		.space	90
 2696      00000000 
 2696      00000000 
 2696      00000000 
 2696      00000000 
 2697              		.section	.bss.l70Data1,"aw",%nobits
 2700              	l70Data1:
 2701 0000 00       		.space	1
 2702              		.section	.bss.last_sDate,"aw",%nobits
 2703              		.align	2
 2704              		.set	.LANCHOR27,. + 0
 2707              	last_sDate:
 2708 0000 00000000 		.space	4
 2709              		.section	.bss.last_sTime,"aw",%nobits
 2710              		.align	2
 2711              		.set	.LANCHOR26,. + 0
 2714              	last_sTime:
 2715 0000 000000   		.space	3
 2716              		.section	.bss.last_time,"aw",%nobits
 2717              		.align	2
 2718              		.set	.LANCHOR10,. + 0
 2721              	last_time:
 2722 0000 00000000 		.space	4
 2723              		.section	.bss.latData,"aw",%nobits
 2724              		.align	2
 2727              	latData:
 2728 0000 00000000 		.space	15
 2728      00000000 
 2728      00000000 
 2728      000000
 2729              		.section	.bss.longData,"aw",%nobits
 2730              		.align	2
 2733              	longData:
 2734 0000 00000000 		.space	15
 2734      00000000 
 2734      00000000 
 2734      000000
 2735              		.section	.bss.minute,"aw",%nobits
 2738              	minute:
 2739 0000 00       		.space	1
 2740              		.section	.bss.month,"aw",%nobits
 2743              	month:
 2744 0000 00       		.space	1
 2745              		.section	.bss.npn_count,"aw",%nobits
 2746              		.align	2
 2747              		.set	.LANCHOR9,. + 0
 2750              	npn_count:
 2751 0000 00000000 		.space	4
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 78


 2752              		.section	.bss.numCheck_time,"aw",%nobits
 2753              		.align	2
 2754              		.set	.LANCHOR36,. + 0
 2757              	numCheck_time:
 2758 0000 00000000 		.space	4
 2759              		.section	.bss.pfs,"aw",%nobits
 2760              		.align	2
 2763              	pfs:
 2764 0000 00000000 		.space	4
 2765              		.section	.bss.rs232_buff,"aw",%nobits
 2766              		.align	2
 2767              		.set	.LANCHOR4,. + 0
 2770              	rs232_buff:
 2771 0000 00000000 		.space	50
 2771      00000000 
 2771      00000000 
 2771      00000000 
 2771      00000000 
 2772              		.section	.bss.rs232_data,"aw",%nobits
 2773              		.set	.LANCHOR3,. + 0
 2776              	rs232_data:
 2777 0000 00       		.space	1
 2778              		.section	.bss.rs232_flag,"aw",%nobits
 2779              		.set	.LANCHOR5,. + 0
 2782              	rs232_flag:
 2783 0000 00       		.space	1
 2784              		.section	.bss.rs232_index,"aw",%nobits
 2785              		.align	2
 2786              		.set	.LANCHOR2,. + 0
 2789              	rs232_index:
 2790 0000 00000000 		.space	4
 2791              		.section	.bss.sAlarm,"aw",%nobits
 2792              		.align	2
 2795              	sAlarm:
 2796 0000 00000000 		.space	8
 2796      00000000 
 2797              		.section	.bss.sencond,"aw",%nobits
 2800              	sencond:
 2801 0000 00       		.space	1
 2802              		.section	.bss.sensors,"aw",%nobits
 2803              		.align	2
 2804              		.set	.LANCHOR34,. + 0
 2807              	sensors:
 2808 0000 00000000 		.space	110
 2808      00000000 
 2808      00000000 
 2808      00000000 
 2808      00000000 
 2809              		.section	.bss.simMessage,"aw",%nobits
 2810              		.align	2
 2813              	simMessage:
 2814 0000 00000000 		.space	200
 2814      00000000 
 2814      00000000 
 2814      00000000 
 2814      00000000 
 2815              		.section	.bss.stateDevice,"aw",%nobits
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 79


 2816              		.align	2
 2817              		.set	.LANCHOR19,. + 0
 2820              	stateDevice:
 2821 0000 00000000 		.space	11
 2821      00000000 
 2821      000000
 2822              		.section	.bss.szBuff,"aw",%nobits
 2823              		.align	2
 2826              	szBuff:
 2827 0000 00000000 		.space	20
 2827      00000000 
 2827      00000000 
 2827      00000000 
 2827      00000000 
 2828              		.section	.bss.time_buff,"aw",%nobits
 2829              		.align	2
 2830              		.set	.LANCHOR24,. + 0
 2833              	time_buff:
 2834 0000 00000000 		.space	20
 2834      00000000 
 2834      00000000 
 2834      00000000 
 2834      00000000 
 2835              		.section	.bss.time_hour,"aw",%nobits
 2836              		.align	2
 2837              		.set	.LANCHOR29,. + 0
 2840              	time_hour:
 2841 0000 00000000 		.space	4
 2842              		.section	.bss.time_minute,"aw",%nobits
 2843              		.align	2
 2844              		.set	.LANCHOR30,. + 0
 2847              	time_minute:
 2848 0000 00000000 		.space	4
 2849              		.section	.bss.total,"aw",%nobits
 2850              		.align	2
 2853              	total:
 2854 0000 00000000 		.space	4
 2855              		.section	.bss.totalMinute_OperateTime,"aw",%nobits
 2856              		.align	1
 2857              		.set	.LANCHOR28,. + 0
 2860              	totalMinute_OperateTime:
 2861 0000 0000     		.space	2
 2862              		.section	.bss.totalMinute_OperateTime_buff,"aw",%nobits
 2863              		.align	2
 2864              		.set	.LANCHOR31,. + 0
 2867              	totalMinute_OperateTime_buff:
 2868 0000 00000000 		.space	30
 2868      00000000 
 2868      00000000 
 2868      00000000 
 2868      00000000 
 2869              		.section	.bss.waiting4LogOut,"aw",%nobits
 2870              		.set	.LANCHOR13,. + 0
 2873              	waiting4LogOut:
 2874 0000 00       		.space	1
 2875              		.section	.bss.year,"aw",%nobits
 2878              	year:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 80


 2879 0000 00       		.space	1
 2880              		.section	.data.Type_Task,"aw"
 2881              		.align	2
 2882              		.set	.LANCHOR1,. + 0
 2885              	Type_Task:
 2886 0000 04000000 		.word	4
 2887              		.section	.data.id_ref,"aw"
 2888              		.align	2
 2891              	id_ref:
 2892 0000 00000000 		.word	.LC51
 2893              		.section	.data.npn_flag_check,"aw"
 2894              		.align	2
 2895              		.set	.LANCHOR7,. + 0
 2898              	npn_flag_check:
 2899 0000 01000000 		.word	1
 2900              		.section	.rodata.bitmap,"a"
 2901              		.align	2
 2902              		.set	.LANCHOR17,. + 0
 2905              	bitmap:
 2906 0000 00       		.byte	0
 2907 0001 00       		.byte	0
 2908 0002 00       		.byte	0
 2909 0003 00       		.byte	0
 2910 0004 00       		.byte	0
 2911 0005 00       		.byte	0
 2912 0006 00       		.byte	0
 2913 0007 00       		.byte	0
 2914 0008 00       		.byte	0
 2915 0009 00       		.byte	0
 2916 000a 00       		.byte	0
 2917 000b 00       		.byte	0
 2918 000c 00       		.byte	0
 2919 000d 00       		.byte	0
 2920 000e 00       		.byte	0
 2921 000f 00       		.byte	0
 2922 0010 7F       		.byte	127
 2923 0011 C0       		.byte	-64
 2924 0012 00       		.byte	0
 2925 0013 01       		.byte	1
 2926 0014 8F       		.byte	-113
 2927 0015 C0       		.byte	-64
 2928 0016 42       		.byte	66
 2929 0017 00       		.byte	0
 2930 0018 80       		.byte	-128
 2931 0019 00       		.byte	0
 2932 001a 00       		.byte	0
 2933 001b 00       		.byte	0
 2934 001c 00       		.byte	0
 2935 001d 00       		.byte	0
 2936 001e 00       		.byte	0
 2937 001f 00       		.byte	0
 2938 0020 20       		.byte	32
 2939 0021 80       		.byte	-128
 2940 0022 18       		.byte	24
 2941 0023 02       		.byte	2
 2942 0024 90       		.byte	-112
 2943 0025 20       		.byte	32
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 81


 2944 0026 E2       		.byte	-30
 2945 0027 01       		.byte	1
 2946 0028 C0       		.byte	-64
 2947 0029 00       		.byte	0
 2948 002a 00       		.byte	0
 2949 002b 00       		.byte	0
 2950 002c 00       		.byte	0
 2951 002d 00       		.byte	0
 2952 002e 00       		.byte	0
 2953 002f 00       		.byte	0
 2954 0030 11       		.byte	17
 2955 0031 00       		.byte	0
 2956 0032 18       		.byte	24
 2957 0033 04       		.byte	4
 2958 0034 90       		.byte	-112
 2959 0035 21       		.byte	33
 2960 0036 52       		.byte	82
 2961 0037 02       		.byte	2
 2962 0038 20       		.byte	32
 2963 0039 00       		.byte	0
 2964 003a 00       		.byte	0
 2965 003b 00       		.byte	0
 2966 003c 00       		.byte	0
 2967 003d 03       		.byte	3
 2968 003e FF       		.byte	-1
 2969 003f FE       		.byte	-2
 2970 0040 0A       		.byte	10
 2971 0041 00       		.byte	0
 2972 0042 D8       		.byte	-40
 2973 0043 08       		.byte	8
 2974 0044 90       		.byte	-112
 2975 0045 00       		.byte	0
 2976 0046 42       		.byte	66
 2977 0047 04       		.byte	4
 2978 0048 10       		.byte	16
 2979 0049 00       		.byte	0
 2980 004a 00       		.byte	0
 2981 004b 00       		.byte	0
 2982 004c 00       		.byte	0
 2983 004d 03       		.byte	3
 2984 004e FF       		.byte	-1
 2985 004f FE       		.byte	-2
 2986 0050 04       		.byte	4
 2987 0051 00       		.byte	0
 2988 0052 D8       		.byte	-40
 2989 0053 10       		.byte	16
 2990 0054 90       		.byte	-112
 2991 0055 00       		.byte	0
 2992 0056 42       		.byte	66
 2993 0057 08       		.byte	8
 2994 0058 08       		.byte	8
 2995 0059 00       		.byte	0
 2996 005a 00       		.byte	0
 2997 005b 00       		.byte	0
 2998 005c 00       		.byte	0
 2999 005d 03       		.byte	3
 3000 005e FF       		.byte	-1
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 82


 3001 005f FE       		.byte	-2
 3002 0060 04       		.byte	4
 3003 0061 06       		.byte	6
 3004 0062 D8       		.byte	-40
 3005 0063 20       		.byte	32
 3006 0064 90       		.byte	-112
 3007 0065 00       		.byte	0
 3008 0066 42       		.byte	66
 3009 0067 18       		.byte	24
 3010 0068 8C       		.byte	-116
 3011 0069 00       		.byte	0
 3012 006a 00       		.byte	0
 3013 006b 00       		.byte	0
 3014 006c 00       		.byte	0
 3015 006d 1F       		.byte	31
 3016 006e FF       		.byte	-1
 3017 006f FE       		.byte	-2
 3018 0070 04       		.byte	4
 3019 0071 06       		.byte	6
 3020 0072 D8       		.byte	-40
 3021 0073 20       		.byte	32
 3022 0074 91       		.byte	-111
 3023 0075 E0       		.byte	-32
 3024 0076 42       		.byte	66
 3025 0077 08       		.byte	8
 3026 0078 08       		.byte	8
 3027 0079 00       		.byte	0
 3028 007a 00       		.byte	0
 3029 007b 00       		.byte	0
 3030 007c 00       		.byte	0
 3031 007d 1F       		.byte	31
 3032 007e FF       		.byte	-1
 3033 007f FE       		.byte	-2
 3034 0080 04       		.byte	4
 3035 0081 36       		.byte	54
 3036 0082 D8       		.byte	-40
 3037 0083 3F       		.byte	63
 3038 0084 D0       		.byte	-48
 3039 0085 20       		.byte	32
 3040 0086 42       		.byte	66
 3041 0087 04       		.byte	4
 3042 0088 10       		.byte	16
 3043 0089 00       		.byte	0
 3044 008a 00       		.byte	0
 3045 008b 00       		.byte	0
 3046 008c 00       		.byte	0
 3047 008d 03       		.byte	3
 3048 008e FF       		.byte	-1
 3049 008f FE       		.byte	-2
 3050 0090 04       		.byte	4
 3051 0091 36       		.byte	54
 3052 0092 D8       		.byte	-40
 3053 0093 00       		.byte	0
 3054 0094 90       		.byte	-112
 3055 0095 20       		.byte	32
 3056 0096 4A       		.byte	74
 3057 0097 82       		.byte	-126
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 83


 3058 0098 20       		.byte	32
 3059 0099 00       		.byte	0
 3060 009a 00       		.byte	0
 3061 009b 00       		.byte	0
 3062 009c 00       		.byte	0
 3063 009d 03       		.byte	3
 3064 009e FF       		.byte	-1
 3065 009f FE       		.byte	-2
 3066 00a0 05       		.byte	5
 3067 00a1 B6       		.byte	-74
 3068 00a2 D8       		.byte	-40
 3069 00a3 00       		.byte	0
 3070 00a4 90       		.byte	-112
 3071 00a5 20       		.byte	32
 3072 00a6 47       		.byte	71
 3073 00a7 01       		.byte	1
 3074 00a8 C0       		.byte	-64
 3075 00a9 00       		.byte	0
 3076 00aa 00       		.byte	0
 3077 00ab 00       		.byte	0
 3078 00ac 00       		.byte	0
 3079 00ad 03       		.byte	3
 3080 00ae FF       		.byte	-1
 3081 00af FE       		.byte	-2
 3082 00b0 05       		.byte	5
 3083 00b1 B6       		.byte	-74
 3084 00b2 D8       		.byte	-40
 3085 00b3 00       		.byte	0
 3086 00b4 8F       		.byte	-113
 3087 00b5 C0       		.byte	-64
 3088 00b6 42       		.byte	66
 3089 00b7 00       		.byte	0
 3090 00b8 80       		.byte	-128
 3091 00b9 00       		.byte	0
 3092 00ba 00       		.byte	0
 3093 00bb 00       		.byte	0
 3094 00bc 00       		.byte	0
 3095 00bd 00       		.byte	0
 3096 00be 00       		.byte	0
 3097 00bf 00       		.byte	0
 3098 00c0 FF       		.byte	-1
 3099 00c1 FF       		.byte	-1
 3100 00c2 FF       		.byte	-1
 3101 00c3 FF       		.byte	-1
 3102 00c4 FF       		.byte	-1
 3103 00c5 FF       		.byte	-1
 3104 00c6 FF       		.byte	-1
 3105 00c7 FF       		.byte	-1
 3106 00c8 FF       		.byte	-1
 3107 00c9 FF       		.byte	-1
 3108 00ca FF       		.byte	-1
 3109 00cb FF       		.byte	-1
 3110 00cc FF       		.byte	-1
 3111 00cd FF       		.byte	-1
 3112 00ce FF       		.byte	-1
 3113 00cf FF       		.byte	-1
 3114 00d0 00       		.byte	0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 84


 3115 00d1 00       		.byte	0
 3116 00d2 00       		.byte	0
 3117 00d3 00       		.byte	0
 3118 00d4 00       		.byte	0
 3119 00d5 00       		.byte	0
 3120 00d6 00       		.byte	0
 3121 00d7 00       		.byte	0
 3122 00d8 00       		.byte	0
 3123 00d9 00       		.byte	0
 3124 00da 00       		.byte	0
 3125 00db 00       		.byte	0
 3126 00dc 00       		.byte	0
 3127 00dd 00       		.byte	0
 3128 00de 00       		.byte	0
 3129 00df 00       		.byte	0
 3130 00e0 00       		.byte	0
 3131 00e1 00       		.byte	0
 3132 00e2 00       		.byte	0
 3133 00e3 00       		.byte	0
 3134 00e4 00       		.byte	0
 3135 00e5 00       		.byte	0
 3136 00e6 00       		.byte	0
 3137 00e7 00       		.byte	0
 3138 00e8 00       		.byte	0
 3139 00e9 00       		.byte	0
 3140 00ea 00       		.byte	0
 3141 00eb 00       		.byte	0
 3142 00ec 00       		.byte	0
 3143 00ed 00       		.byte	0
 3144 00ee 00       		.byte	0
 3145 00ef 00       		.byte	0
 3146 00f0 00       		.byte	0
 3147 00f1 00       		.byte	0
 3148 00f2 00       		.byte	0
 3149 00f3 00       		.byte	0
 3150 00f4 00       		.byte	0
 3151 00f5 00       		.byte	0
 3152 00f6 00       		.byte	0
 3153 00f7 00       		.byte	0
 3154 00f8 00       		.byte	0
 3155 00f9 00       		.byte	0
 3156 00fa 00       		.byte	0
 3157 00fb 00       		.byte	0
 3158 00fc 00       		.byte	0
 3159 00fd 00       		.byte	0
 3160 00fe 00       		.byte	0
 3161 00ff 00       		.byte	0
 3162 0100 00       		.byte	0
 3163 0101 00       		.byte	0
 3164 0102 00       		.byte	0
 3165 0103 00       		.byte	0
 3166 0104 00       		.byte	0
 3167 0105 00       		.byte	0
 3168 0106 00       		.byte	0
 3169 0107 00       		.byte	0
 3170 0108 00       		.byte	0
 3171 0109 00       		.byte	0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 85


 3172 010a 00       		.byte	0
 3173 010b 00       		.byte	0
 3174 010c 00       		.byte	0
 3175 010d 00       		.byte	0
 3176 010e 00       		.byte	0
 3177 010f 00       		.byte	0
 3178 0110 00       		.byte	0
 3179 0111 00       		.byte	0
 3180 0112 00       		.byte	0
 3181 0113 00       		.byte	0
 3182 0114 00       		.byte	0
 3183 0115 00       		.byte	0
 3184 0116 00       		.byte	0
 3185 0117 00       		.byte	0
 3186 0118 00       		.byte	0
 3187 0119 00       		.byte	0
 3188 011a 00       		.byte	0
 3189 011b 00       		.byte	0
 3190 011c 00       		.byte	0
 3191 011d 00       		.byte	0
 3192 011e 00       		.byte	0
 3193 011f 00       		.byte	0
 3194 0120 00       		.byte	0
 3195 0121 00       		.byte	0
 3196 0122 00       		.byte	0
 3197 0123 00       		.byte	0
 3198 0124 00       		.byte	0
 3199 0125 00       		.byte	0
 3200 0126 00       		.byte	0
 3201 0127 00       		.byte	0
 3202 0128 00       		.byte	0
 3203 0129 00       		.byte	0
 3204 012a 00       		.byte	0
 3205 012b 00       		.byte	0
 3206 012c 00       		.byte	0
 3207 012d 00       		.byte	0
 3208 012e 00       		.byte	0
 3209 012f 00       		.byte	0
 3210 0130 00       		.byte	0
 3211 0131 00       		.byte	0
 3212 0132 00       		.byte	0
 3213 0133 00       		.byte	0
 3214 0134 00       		.byte	0
 3215 0135 00       		.byte	0
 3216 0136 00       		.byte	0
 3217 0137 00       		.byte	0
 3218 0138 00       		.byte	0
 3219 0139 00       		.byte	0
 3220 013a 00       		.byte	0
 3221 013b 00       		.byte	0
 3222 013c 00       		.byte	0
 3223 013d 00       		.byte	0
 3224 013e 00       		.byte	0
 3225 013f 00       		.byte	0
 3226 0140 00       		.byte	0
 3227 0141 00       		.byte	0
 3228 0142 00       		.byte	0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 86


 3229 0143 00       		.byte	0
 3230 0144 00       		.byte	0
 3231 0145 00       		.byte	0
 3232 0146 00       		.byte	0
 3233 0147 00       		.byte	0
 3234 0148 00       		.byte	0
 3235 0149 00       		.byte	0
 3236 014a 00       		.byte	0
 3237 014b 00       		.byte	0
 3238 014c 00       		.byte	0
 3239 014d 00       		.byte	0
 3240 014e 00       		.byte	0
 3241 014f 00       		.byte	0
 3242 0150 00       		.byte	0
 3243 0151 00       		.byte	0
 3244 0152 00       		.byte	0
 3245 0153 00       		.byte	0
 3246 0154 00       		.byte	0
 3247 0155 00       		.byte	0
 3248 0156 00       		.byte	0
 3249 0157 00       		.byte	0
 3250 0158 00       		.byte	0
 3251 0159 00       		.byte	0
 3252 015a 00       		.byte	0
 3253 015b 00       		.byte	0
 3254 015c 00       		.byte	0
 3255 015d 00       		.byte	0
 3256 015e 00       		.byte	0
 3257 015f 00       		.byte	0
 3258 0160 00       		.byte	0
 3259 0161 00       		.byte	0
 3260 0162 00       		.byte	0
 3261 0163 00       		.byte	0
 3262 0164 00       		.byte	0
 3263 0165 00       		.byte	0
 3264 0166 00       		.byte	0
 3265 0167 00       		.byte	0
 3266 0168 00       		.byte	0
 3267 0169 00       		.byte	0
 3268 016a 00       		.byte	0
 3269 016b 00       		.byte	0
 3270 016c 00       		.byte	0
 3271 016d 00       		.byte	0
 3272 016e 00       		.byte	0
 3273 016f 00       		.byte	0
 3274 0170 00       		.byte	0
 3275 0171 00       		.byte	0
 3276 0172 00       		.byte	0
 3277 0173 00       		.byte	0
 3278 0174 00       		.byte	0
 3279 0175 00       		.byte	0
 3280 0176 00       		.byte	0
 3281 0177 00       		.byte	0
 3282 0178 00       		.byte	0
 3283 0179 00       		.byte	0
 3284 017a 00       		.byte	0
 3285 017b 00       		.byte	0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 87


 3286 017c 00       		.byte	0
 3287 017d 00       		.byte	0
 3288 017e 00       		.byte	0
 3289 017f 00       		.byte	0
 3290 0180 00       		.byte	0
 3291 0181 00       		.byte	0
 3292 0182 00       		.byte	0
 3293 0183 00       		.byte	0
 3294 0184 00       		.byte	0
 3295 0185 00       		.byte	0
 3296 0186 00       		.byte	0
 3297 0187 00       		.byte	0
 3298 0188 00       		.byte	0
 3299 0189 00       		.byte	0
 3300 018a 00       		.byte	0
 3301 018b 00       		.byte	0
 3302 018c 00       		.byte	0
 3303 018d 00       		.byte	0
 3304 018e 00       		.byte	0
 3305 018f 00       		.byte	0
 3306 0190 00       		.byte	0
 3307 0191 00       		.byte	0
 3308 0192 00       		.byte	0
 3309 0193 00       		.byte	0
 3310 0194 00       		.byte	0
 3311 0195 00       		.byte	0
 3312 0196 00       		.byte	0
 3313 0197 00       		.byte	0
 3314 0198 00       		.byte	0
 3315 0199 00       		.byte	0
 3316 019a 00       		.byte	0
 3317 019b 00       		.byte	0
 3318 019c 00       		.byte	0
 3319 019d 00       		.byte	0
 3320 019e 00       		.byte	0
 3321 019f 00       		.byte	0
 3322 01a0 00       		.byte	0
 3323 01a1 00       		.byte	0
 3324 01a2 00       		.byte	0
 3325 01a3 00       		.byte	0
 3326 01a4 00       		.byte	0
 3327 01a5 00       		.byte	0
 3328 01a6 00       		.byte	0
 3329 01a7 00       		.byte	0
 3330 01a8 00       		.byte	0
 3331 01a9 00       		.byte	0
 3332 01aa 00       		.byte	0
 3333 01ab 00       		.byte	0
 3334 01ac 00       		.byte	0
 3335 01ad 00       		.byte	0
 3336 01ae 00       		.byte	0
 3337 01af 00       		.byte	0
 3338 01b0 00       		.byte	0
 3339 01b1 00       		.byte	0
 3340 01b2 00       		.byte	0
 3341 01b3 00       		.byte	0
 3342 01b4 00       		.byte	0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 88


 3343 01b5 00       		.byte	0
 3344 01b6 00       		.byte	0
 3345 01b7 00       		.byte	0
 3346 01b8 00       		.byte	0
 3347 01b9 00       		.byte	0
 3348 01ba 00       		.byte	0
 3349 01bb 00       		.byte	0
 3350 01bc 00       		.byte	0
 3351 01bd 00       		.byte	0
 3352 01be 00       		.byte	0
 3353 01bf 00       		.byte	0
 3354 01c0 00       		.byte	0
 3355 01c1 00       		.byte	0
 3356 01c2 00       		.byte	0
 3357 01c3 00       		.byte	0
 3358 01c4 00       		.byte	0
 3359 01c5 00       		.byte	0
 3360 01c6 00       		.byte	0
 3361 01c7 00       		.byte	0
 3362 01c8 00       		.byte	0
 3363 01c9 00       		.byte	0
 3364 01ca 00       		.byte	0
 3365 01cb 00       		.byte	0
 3366 01cc 00       		.byte	0
 3367 01cd 00       		.byte	0
 3368 01ce 00       		.byte	0
 3369 01cf 00       		.byte	0
 3370 01d0 00       		.byte	0
 3371 01d1 00       		.byte	0
 3372 01d2 00       		.byte	0
 3373 01d3 00       		.byte	0
 3374 01d4 00       		.byte	0
 3375 01d5 00       		.byte	0
 3376 01d6 00       		.byte	0
 3377 01d7 00       		.byte	0
 3378 01d8 00       		.byte	0
 3379 01d9 00       		.byte	0
 3380 01da 00       		.byte	0
 3381 01db 00       		.byte	0
 3382 01dc 00       		.byte	0
 3383 01dd 00       		.byte	0
 3384 01de 00       		.byte	0
 3385 01df 00       		.byte	0
 3386 01e0 00       		.byte	0
 3387 01e1 00       		.byte	0
 3388 01e2 00       		.byte	0
 3389 01e3 00       		.byte	0
 3390 01e4 00       		.byte	0
 3391 01e5 00       		.byte	0
 3392 01e6 00       		.byte	0
 3393 01e7 00       		.byte	0
 3394 01e8 00       		.byte	0
 3395 01e9 00       		.byte	0
 3396 01ea 00       		.byte	0
 3397 01eb 00       		.byte	0
 3398 01ec 00       		.byte	0
 3399 01ed 00       		.byte	0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 89


 3400 01ee 00       		.byte	0
 3401 01ef 00       		.byte	0
 3402 01f0 00       		.byte	0
 3403 01f1 00       		.byte	0
 3404 01f2 00       		.byte	0
 3405 01f3 00       		.byte	0
 3406 01f4 00       		.byte	0
 3407 01f5 00       		.byte	0
 3408 01f6 00       		.byte	0
 3409 01f7 00       		.byte	0
 3410 01f8 00       		.byte	0
 3411 01f9 00       		.byte	0
 3412 01fa 00       		.byte	0
 3413 01fb 00       		.byte	0
 3414 01fc 00       		.byte	0
 3415 01fd 00       		.byte	0
 3416 01fe 00       		.byte	0
 3417 01ff 00       		.byte	0
 3418 0200 00       		.byte	0
 3419 0201 00       		.byte	0
 3420 0202 00       		.byte	0
 3421 0203 00       		.byte	0
 3422 0204 00       		.byte	0
 3423 0205 00       		.byte	0
 3424 0206 00       		.byte	0
 3425 0207 00       		.byte	0
 3426 0208 00       		.byte	0
 3427 0209 00       		.byte	0
 3428 020a 00       		.byte	0
 3429 020b 00       		.byte	0
 3430 020c 00       		.byte	0
 3431 020d 00       		.byte	0
 3432 020e 00       		.byte	0
 3433 020f 00       		.byte	0
 3434 0210 00       		.byte	0
 3435 0211 00       		.byte	0
 3436 0212 00       		.byte	0
 3437 0213 00       		.byte	0
 3438 0214 00       		.byte	0
 3439 0215 00       		.byte	0
 3440 0216 00       		.byte	0
 3441 0217 00       		.byte	0
 3442 0218 00       		.byte	0
 3443 0219 00       		.byte	0
 3444 021a 00       		.byte	0
 3445 021b 00       		.byte	0
 3446 021c 00       		.byte	0
 3447 021d 00       		.byte	0
 3448 021e 00       		.byte	0
 3449 021f 00       		.byte	0
 3450 0220 00       		.byte	0
 3451 0221 00       		.byte	0
 3452 0222 00       		.byte	0
 3453 0223 00       		.byte	0
 3454 0224 00       		.byte	0
 3455 0225 00       		.byte	0
 3456 0226 00       		.byte	0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 90


 3457 0227 00       		.byte	0
 3458 0228 00       		.byte	0
 3459 0229 00       		.byte	0
 3460 022a 00       		.byte	0
 3461 022b 00       		.byte	0
 3462 022c 00       		.byte	0
 3463 022d 00       		.byte	0
 3464 022e 00       		.byte	0
 3465 022f 00       		.byte	0
 3466 0230 00       		.byte	0
 3467 0231 00       		.byte	0
 3468 0232 00       		.byte	0
 3469 0233 00       		.byte	0
 3470 0234 00       		.byte	0
 3471 0235 00       		.byte	0
 3472 0236 00       		.byte	0
 3473 0237 00       		.byte	0
 3474 0238 00       		.byte	0
 3475 0239 00       		.byte	0
 3476 023a 00       		.byte	0
 3477 023b 00       		.byte	0
 3478 023c 00       		.byte	0
 3479 023d 00       		.byte	0
 3480 023e 00       		.byte	0
 3481 023f 00       		.byte	0
 3482 0240 00       		.byte	0
 3483 0241 00       		.byte	0
 3484 0242 00       		.byte	0
 3485 0243 00       		.byte	0
 3486 0244 00       		.byte	0
 3487 0245 00       		.byte	0
 3488 0246 00       		.byte	0
 3489 0247 00       		.byte	0
 3490 0248 00       		.byte	0
 3491 0249 00       		.byte	0
 3492 024a 00       		.byte	0
 3493 024b 00       		.byte	0
 3494 024c 00       		.byte	0
 3495 024d 00       		.byte	0
 3496 024e 00       		.byte	0
 3497 024f 00       		.byte	0
 3498 0250 00       		.byte	0
 3499 0251 00       		.byte	0
 3500 0252 00       		.byte	0
 3501 0253 00       		.byte	0
 3502 0254 00       		.byte	0
 3503 0255 00       		.byte	0
 3504 0256 00       		.byte	0
 3505 0257 00       		.byte	0
 3506 0258 00       		.byte	0
 3507 0259 00       		.byte	0
 3508 025a 00       		.byte	0
 3509 025b 00       		.byte	0
 3510 025c 00       		.byte	0
 3511 025d 00       		.byte	0
 3512 025e 00       		.byte	0
 3513 025f 00       		.byte	0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 91


 3514 0260 00       		.byte	0
 3515 0261 00       		.byte	0
 3516 0262 00       		.byte	0
 3517 0263 00       		.byte	0
 3518 0264 00       		.byte	0
 3519 0265 00       		.byte	0
 3520 0266 00       		.byte	0
 3521 0267 00       		.byte	0
 3522 0268 00       		.byte	0
 3523 0269 00       		.byte	0
 3524 026a 00       		.byte	0
 3525 026b 00       		.byte	0
 3526 026c 00       		.byte	0
 3527 026d 00       		.byte	0
 3528 026e 00       		.byte	0
 3529 026f 00       		.byte	0
 3530 0270 00       		.byte	0
 3531 0271 00       		.byte	0
 3532 0272 00       		.byte	0
 3533 0273 00       		.byte	0
 3534 0274 00       		.byte	0
 3535 0275 00       		.byte	0
 3536 0276 00       		.byte	0
 3537 0277 00       		.byte	0
 3538 0278 00       		.byte	0
 3539 0279 00       		.byte	0
 3540 027a 00       		.byte	0
 3541 027b 00       		.byte	0
 3542 027c 00       		.byte	0
 3543 027d 00       		.byte	0
 3544 027e 00       		.byte	0
 3545 027f 00       		.byte	0
 3546 0280 00       		.byte	0
 3547 0281 00       		.byte	0
 3548 0282 00       		.byte	0
 3549 0283 00       		.byte	0
 3550 0284 00       		.byte	0
 3551 0285 00       		.byte	0
 3552 0286 00       		.byte	0
 3553 0287 00       		.byte	0
 3554 0288 00       		.byte	0
 3555 0289 00       		.byte	0
 3556 028a 00       		.byte	0
 3557 028b 00       		.byte	0
 3558 028c 00       		.byte	0
 3559 028d 00       		.byte	0
 3560 028e 00       		.byte	0
 3561 028f 00       		.byte	0
 3562 0290 00       		.byte	0
 3563 0291 00       		.byte	0
 3564 0292 00       		.byte	0
 3565 0293 00       		.byte	0
 3566 0294 00       		.byte	0
 3567 0295 00       		.byte	0
 3568 0296 00       		.byte	0
 3569 0297 00       		.byte	0
 3570 0298 00       		.byte	0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 92


 3571 0299 00       		.byte	0
 3572 029a 00       		.byte	0
 3573 029b 00       		.byte	0
 3574 029c 00       		.byte	0
 3575 029d 00       		.byte	0
 3576 029e 00       		.byte	0
 3577 029f 00       		.byte	0
 3578 02a0 00       		.byte	0
 3579 02a1 00       		.byte	0
 3580 02a2 00       		.byte	0
 3581 02a3 00       		.byte	0
 3582 02a4 00       		.byte	0
 3583 02a5 00       		.byte	0
 3584 02a6 00       		.byte	0
 3585 02a7 00       		.byte	0
 3586 02a8 00       		.byte	0
 3587 02a9 00       		.byte	0
 3588 02aa 00       		.byte	0
 3589 02ab 00       		.byte	0
 3590 02ac 00       		.byte	0
 3591 02ad 00       		.byte	0
 3592 02ae 00       		.byte	0
 3593 02af 00       		.byte	0
 3594 02b0 00       		.byte	0
 3595 02b1 00       		.byte	0
 3596 02b2 00       		.byte	0
 3597 02b3 00       		.byte	0
 3598 02b4 00       		.byte	0
 3599 02b5 00       		.byte	0
 3600 02b6 00       		.byte	0
 3601 02b7 00       		.byte	0
 3602 02b8 00       		.byte	0
 3603 02b9 00       		.byte	0
 3604 02ba 00       		.byte	0
 3605 02bb 00       		.byte	0
 3606 02bc 00       		.byte	0
 3607 02bd 00       		.byte	0
 3608 02be 00       		.byte	0
 3609 02bf 00       		.byte	0
 3610 02c0 00       		.byte	0
 3611 02c1 00       		.byte	0
 3612 02c2 00       		.byte	0
 3613 02c3 00       		.byte	0
 3614 02c4 00       		.byte	0
 3615 02c5 00       		.byte	0
 3616 02c6 00       		.byte	0
 3617 02c7 00       		.byte	0
 3618 02c8 00       		.byte	0
 3619 02c9 00       		.byte	0
 3620 02ca 00       		.byte	0
 3621 02cb 00       		.byte	0
 3622 02cc 00       		.byte	0
 3623 02cd 00       		.byte	0
 3624 02ce 00       		.byte	0
 3625 02cf 00       		.byte	0
 3626 02d0 00       		.byte	0
 3627 02d1 00       		.byte	0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 93


 3628 02d2 00       		.byte	0
 3629 02d3 00       		.byte	0
 3630 02d4 00       		.byte	0
 3631 02d5 00       		.byte	0
 3632 02d6 00       		.byte	0
 3633 02d7 00       		.byte	0
 3634 02d8 00       		.byte	0
 3635 02d9 00       		.byte	0
 3636 02da 00       		.byte	0
 3637 02db 00       		.byte	0
 3638 02dc 00       		.byte	0
 3639 02dd 00       		.byte	0
 3640 02de 00       		.byte	0
 3641 02df 00       		.byte	0
 3642 02e0 00       		.byte	0
 3643 02e1 00       		.byte	0
 3644 02e2 00       		.byte	0
 3645 02e3 00       		.byte	0
 3646 02e4 00       		.byte	0
 3647 02e5 00       		.byte	0
 3648 02e6 00       		.byte	0
 3649 02e7 00       		.byte	0
 3650 02e8 00       		.byte	0
 3651 02e9 00       		.byte	0
 3652 02ea 00       		.byte	0
 3653 02eb 00       		.byte	0
 3654 02ec 00       		.byte	0
 3655 02ed 00       		.byte	0
 3656 02ee 00       		.byte	0
 3657 02ef 00       		.byte	0
 3658 02f0 00       		.byte	0
 3659 02f1 00       		.byte	0
 3660 02f2 00       		.byte	0
 3661 02f3 00       		.byte	0
 3662 02f4 00       		.byte	0
 3663 02f5 00       		.byte	0
 3664 02f6 00       		.byte	0
 3665 02f7 00       		.byte	0
 3666 02f8 00       		.byte	0
 3667 02f9 00       		.byte	0
 3668 02fa 00       		.byte	0
 3669 02fb 00       		.byte	0
 3670 02fc 00       		.byte	0
 3671 02fd 00       		.byte	0
 3672 02fe 00       		.byte	0
 3673 02ff 00       		.byte	0
 3674 0300 00       		.byte	0
 3675 0301 00       		.byte	0
 3676 0302 00       		.byte	0
 3677 0303 00       		.byte	0
 3678 0304 00       		.byte	0
 3679 0305 00       		.byte	0
 3680 0306 00       		.byte	0
 3681 0307 00       		.byte	0
 3682 0308 00       		.byte	0
 3683 0309 00       		.byte	0
 3684 030a 00       		.byte	0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 94


 3685 030b 00       		.byte	0
 3686 030c 00       		.byte	0
 3687 030d 00       		.byte	0
 3688 030e 00       		.byte	0
 3689 030f 00       		.byte	0
 3690 0310 00       		.byte	0
 3691 0311 00       		.byte	0
 3692 0312 00       		.byte	0
 3693 0313 00       		.byte	0
 3694 0314 00       		.byte	0
 3695 0315 00       		.byte	0
 3696 0316 00       		.byte	0
 3697 0317 00       		.byte	0
 3698 0318 00       		.byte	0
 3699 0319 00       		.byte	0
 3700 031a 00       		.byte	0
 3701 031b 00       		.byte	0
 3702 031c 00       		.byte	0
 3703 031d 00       		.byte	0
 3704 031e 00       		.byte	0
 3705 031f 00       		.byte	0
 3706 0320 00       		.byte	0
 3707 0321 00       		.byte	0
 3708 0322 00       		.byte	0
 3709 0323 00       		.byte	0
 3710 0324 00       		.byte	0
 3711 0325 00       		.byte	0
 3712 0326 00       		.byte	0
 3713 0327 00       		.byte	0
 3714 0328 00       		.byte	0
 3715 0329 00       		.byte	0
 3716 032a 00       		.byte	0
 3717 032b 00       		.byte	0
 3718 032c 00       		.byte	0
 3719 032d 00       		.byte	0
 3720 032e 00       		.byte	0
 3721 032f 00       		.byte	0
 3722 0330 00       		.byte	0
 3723 0331 00       		.byte	0
 3724 0332 00       		.byte	0
 3725 0333 00       		.byte	0
 3726 0334 00       		.byte	0
 3727 0335 00       		.byte	0
 3728 0336 00       		.byte	0
 3729 0337 00       		.byte	0
 3730 0338 00       		.byte	0
 3731 0339 00       		.byte	0
 3732 033a 00       		.byte	0
 3733 033b 00       		.byte	0
 3734 033c 00       		.byte	0
 3735 033d 00       		.byte	0
 3736 033e 00       		.byte	0
 3737 033f 00       		.byte	0
 3738 0340 00       		.byte	0
 3739 0341 00       		.byte	0
 3740 0342 00       		.byte	0
 3741 0343 00       		.byte	0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 95


 3742 0344 00       		.byte	0
 3743 0345 00       		.byte	0
 3744 0346 00       		.byte	0
 3745 0347 00       		.byte	0
 3746 0348 00       		.byte	0
 3747 0349 00       		.byte	0
 3748 034a 00       		.byte	0
 3749 034b 00       		.byte	0
 3750 034c 00       		.byte	0
 3751 034d 00       		.byte	0
 3752 034e 00       		.byte	0
 3753 034f 00       		.byte	0
 3754 0350 00       		.byte	0
 3755 0351 00       		.byte	0
 3756 0352 00       		.byte	0
 3757 0353 00       		.byte	0
 3758 0354 00       		.byte	0
 3759 0355 00       		.byte	0
 3760 0356 00       		.byte	0
 3761 0357 00       		.byte	0
 3762 0358 00       		.byte	0
 3763 0359 00       		.byte	0
 3764 035a 00       		.byte	0
 3765 035b 00       		.byte	0
 3766 035c 00       		.byte	0
 3767 035d 00       		.byte	0
 3768 035e 00       		.byte	0
 3769 035f 00       		.byte	0
 3770 0360 00       		.byte	0
 3771 0361 00       		.byte	0
 3772 0362 00       		.byte	0
 3773 0363 00       		.byte	0
 3774 0364 00       		.byte	0
 3775 0365 00       		.byte	0
 3776 0366 00       		.byte	0
 3777 0367 00       		.byte	0
 3778 0368 00       		.byte	0
 3779 0369 00       		.byte	0
 3780 036a 00       		.byte	0
 3781 036b 00       		.byte	0
 3782 036c 00       		.byte	0
 3783 036d 00       		.byte	0
 3784 036e 00       		.byte	0
 3785 036f 00       		.byte	0
 3786 0370 00       		.byte	0
 3787 0371 00       		.byte	0
 3788 0372 00       		.byte	0
 3789 0373 00       		.byte	0
 3790 0374 00       		.byte	0
 3791 0375 00       		.byte	0
 3792 0376 00       		.byte	0
 3793 0377 00       		.byte	0
 3794 0378 00       		.byte	0
 3795 0379 00       		.byte	0
 3796 037a 00       		.byte	0
 3797 037b 00       		.byte	0
 3798 037c 00       		.byte	0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 96


 3799 037d 00       		.byte	0
 3800 037e 00       		.byte	0
 3801 037f 00       		.byte	0
 3802 0380 00       		.byte	0
 3803 0381 00       		.byte	0
 3804 0382 00       		.byte	0
 3805 0383 00       		.byte	0
 3806 0384 00       		.byte	0
 3807 0385 00       		.byte	0
 3808 0386 00       		.byte	0
 3809 0387 00       		.byte	0
 3810 0388 00       		.byte	0
 3811 0389 00       		.byte	0
 3812 038a 00       		.byte	0
 3813 038b 00       		.byte	0
 3814 038c 00       		.byte	0
 3815 038d 00       		.byte	0
 3816 038e 00       		.byte	0
 3817 038f 00       		.byte	0
 3818 0390 00       		.byte	0
 3819 0391 00       		.byte	0
 3820 0392 00       		.byte	0
 3821 0393 00       		.byte	0
 3822 0394 00       		.byte	0
 3823 0395 00       		.byte	0
 3824 0396 00       		.byte	0
 3825 0397 00       		.byte	0
 3826 0398 00       		.byte	0
 3827 0399 00       		.byte	0
 3828 039a 00       		.byte	0
 3829 039b 00       		.byte	0
 3830 039c 00       		.byte	0
 3831 039d 00       		.byte	0
 3832 039e 00       		.byte	0
 3833 039f 00       		.byte	0
 3834 03a0 00       		.byte	0
 3835 03a1 00       		.byte	0
 3836 03a2 00       		.byte	0
 3837 03a3 00       		.byte	0
 3838 03a4 00       		.byte	0
 3839 03a5 00       		.byte	0
 3840 03a6 00       		.byte	0
 3841 03a7 00       		.byte	0
 3842 03a8 00       		.byte	0
 3843 03a9 00       		.byte	0
 3844 03aa 00       		.byte	0
 3845 03ab 00       		.byte	0
 3846 03ac 00       		.byte	0
 3847 03ad 00       		.byte	0
 3848 03ae 00       		.byte	0
 3849 03af 00       		.byte	0
 3850 03b0 00       		.byte	0
 3851 03b1 00       		.byte	0
 3852 03b2 00       		.byte	0
 3853 03b3 00       		.byte	0
 3854 03b4 00       		.byte	0
 3855 03b5 00       		.byte	0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 97


 3856 03b6 00       		.byte	0
 3857 03b7 00       		.byte	0
 3858 03b8 00       		.byte	0
 3859 03b9 00       		.byte	0
 3860 03ba 00       		.byte	0
 3861 03bb 00       		.byte	0
 3862 03bc 00       		.byte	0
 3863 03bd 00       		.byte	0
 3864 03be 00       		.byte	0
 3865 03bf 00       		.byte	0
 3866 03c0 00       		.byte	0
 3867 03c1 00       		.byte	0
 3868 03c2 00       		.byte	0
 3869 03c3 00       		.byte	0
 3870 03c4 00       		.byte	0
 3871 03c5 00       		.byte	0
 3872 03c6 00       		.byte	0
 3873 03c7 00       		.byte	0
 3874 03c8 00       		.byte	0
 3875 03c9 00       		.byte	0
 3876 03ca 00       		.byte	0
 3877 03cb 00       		.byte	0
 3878 03cc 00       		.byte	0
 3879 03cd 00       		.byte	0
 3880 03ce 00       		.byte	0
 3881 03cf 00       		.byte	0
 3882 03d0 00       		.byte	0
 3883 03d1 00       		.byte	0
 3884 03d2 00       		.byte	0
 3885 03d3 00       		.byte	0
 3886 03d4 00       		.byte	0
 3887 03d5 00       		.byte	0
 3888 03d6 00       		.byte	0
 3889 03d7 00       		.byte	0
 3890 03d8 00       		.byte	0
 3891 03d9 00       		.byte	0
 3892 03da 00       		.byte	0
 3893 03db 00       		.byte	0
 3894 03dc 00       		.byte	0
 3895 03dd 00       		.byte	0
 3896 03de 00       		.byte	0
 3897 03df 00       		.byte	0
 3898 03e0 00       		.byte	0
 3899 03e1 00       		.byte	0
 3900 03e2 00       		.byte	0
 3901 03e3 00       		.byte	0
 3902 03e4 00       		.byte	0
 3903 03e5 00       		.byte	0
 3904 03e6 00       		.byte	0
 3905 03e7 00       		.byte	0
 3906 03e8 00       		.byte	0
 3907 03e9 00       		.byte	0
 3908 03ea 00       		.byte	0
 3909 03eb 00       		.byte	0
 3910 03ec 00       		.byte	0
 3911 03ed 00       		.byte	0
 3912 03ee 00       		.byte	0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 98


 3913 03ef 00       		.byte	0
 3914 03f0 00       		.byte	0
 3915 03f1 00       		.byte	0
 3916 03f2 00       		.byte	0
 3917 03f3 00       		.byte	0
 3918 03f4 00       		.byte	0
 3919 03f5 00       		.byte	0
 3920 03f6 00       		.byte	0
 3921 03f7 00       		.byte	0
 3922 03f8 00       		.byte	0
 3923 03f9 00       		.byte	0
 3924 03fa 00       		.byte	0
 3925 03fb 00       		.byte	0
 3926 03fc 00       		.byte	0
 3927 03fd 00       		.byte	0
 3928 03fe 00       		.byte	0
 3929 03ff 00       		.byte	0
 3930              		.text
 3931              	.Letext0:
 3932              		.file 3 "d:\\10 2021.10\\arm-none-eabi\\include\\machine\\_default_types.h"
 3933              		.file 4 "d:\\10 2021.10\\arm-none-eabi\\include\\sys\\_stdint.h"
 3934              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xe.h"
 3935              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 3936              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 3937              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 3938              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 3939              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 3940              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rtc.h"
 3941              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 3942              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 3943              		.file 14 "Middlewares/Third_Party/FatFs/src/integer.h"
 3944              		.file 15 "Middlewares/Third_Party/FatFs/src/ff.h"
 3945              		.file 16 "Core/Inc/rtc.h"
 3946              		.file 17 "Core/Inc/tim.h"
 3947              		.file 18 "Core/Inc/usart.h"
 3948              		.file 19 "Core/Inc/rc522.h"
 3949              		.file 20 "Core/Inc/gnss.h"
 3950              		.file 21 "Core/Inc/fonts.h"
 3951              		.file 22 "Core/Inc/bitmap.h"
 3952              		.file 23 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 3953              		.file 24 "Core/Inc/gpio.h"
 3954              		.file 25 "Core/Inc/adc.h"
 3955              		.file 26 "Core/Inc/spi.h"
 3956              		.file 27 "Core/Inc/i2c.h"
 3957              		.file 28 "FATFS/App/fatfs.h"
 3958              		.file 29 "Core/Inc/debug.h"
 3959              		.file 30 "Core/Inc/ssd1306.h"
 3960              		.file 31 "d:\\10 2021.10\\arm-none-eabi\\include\\string.h"
 3961              		.file 32 "d:\\10 2021.10\\arm-none-eabi\\include\\stdio.h"
 3962              		.file 33 "Core/Inc/sensors.h"
 3963              		.file 34 "Core/Inc/mqtt.h"
 3964              		.file 35 "Core/Inc/sim4g_lte.h"
 3965              		.file 36 "<built-in>"
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 99


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:18     .text.rs232_logdata:00000000 $t
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:24     .text.rs232_logdata:00000000 rs232_logdata
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:57     .text.rs232_logdata:00000018 $d
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:62     .text.buzzer:00000000 $t
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:68     .text.buzzer:00000000 buzzer
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:110    .text.buzzer:00000024 $d
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:115    .text.set_timer:00000000 $t
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:121    .text.set_timer:00000000 set_timer
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:142    .text.set_timer:00000014 $d
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:147    .rodata.HAL_RTC_AlarmAEventCallback.str1.4:00000000 $d
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:151    .text.HAL_RTC_AlarmAEventCallback:00000000 $t
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:157    .text.HAL_RTC_AlarmAEventCallback:00000000 HAL_RTC_AlarmAEventCallback
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:186    .text.HAL_RTC_AlarmAEventCallback:00000014 $d
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:192    .text.HAL_UART_RxCpltCallback:00000000 $t
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:198    .text.HAL_UART_RxCpltCallback:00000000 HAL_UART_RxCpltCallback
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:274    .text.HAL_UART_RxCpltCallback:00000044 $d
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:289    .text.HAL_GPIO_EXTI_Callback:00000000 $t
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:295    .text.HAL_GPIO_EXTI_Callback:00000000 HAL_GPIO_EXTI_Callback
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:378    .text.HAL_GPIO_EXTI_Callback:00000050 $d
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:391    .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:397    .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:581    .text.HAL_TIM_PeriodElapsedCallback:000000cc $d
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:592    .text.Error_Handler:00000000 $t
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:598    .text.Error_Handler:00000000 Error_Handler
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:630    .text.set_alarm:00000000 $t
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:636    .text.set_alarm:00000000 set_alarm
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:701    .text.set_alarm:00000034 $d
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:707    .text.SystemClock_Config:00000000 $t
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:713    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:853    .rodata.main.str1.4:00000000 $d
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:1008   .text.main:00000000 $t
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:1014   .text.main:00000000 main
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:1502   .text.main:000002f0 $d
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2663   .bss.fs:00000000 fs
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:1562   .text.main:000003d4 $t
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:1718   .text.main:000004cc $d
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:1724   .text.main:000004e4 $t
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:1951   .text.main:0000064c $d
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:1993   .text.main:000006e8 $t
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2354   .text.main:0000090c $d
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2633   .bss.fil:00000000 fil
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2782   .bss.rs232_flag:00000000 rs232_flag
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2789   .bss.rs232_index:00000000 rs232_index
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2770   .bss.rs232_buff:00000000 rs232_buff
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2776   .bss.rs232_data:00000000 rs232_data
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2639   .bss.flash_Readbuff:00000000 flash_Readbuff
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2807   .bss.sensors:00000000 sensors
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2614   .bss.dht_hum:00000000 dht_hum
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2620   .bss.dht_temp:00000000 dht_temp
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2627   .bss.ds18_temp:00000000 ds18_temp
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2531   .bss.Task_Mode:00000000 Task_Mode
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2538   .bss.Taskperform:00000000 Taskperform
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2885   .data.Type_Task:00000000 Type_Task
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2695   .bss.infoUser2:00000000 infoUser2
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2688   .bss.infoUser1:00000000 infoUser1
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 100


C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2681   .bss.infoUser:00000000 infoUser
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2891   .data.id_ref:00000000 id_ref
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2404   .rodata.str1.4:00000000 $d
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2473   .bss.Card_Endbuff:00000000 Card_Endbuff
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2480   .bss.Card_Startbuff:00000000 Card_Startbuff
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2494   .bss.Json_Data:00000000 Json_Data
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2820   .bss.stateDevice:00000000 stateDevice
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2525   .bss.SD_read:00000000 SD_read
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2651   .bss.free_space:00000000 free_space
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2853   .bss.total:00000000 total
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2645   .bss.fre_clust:00000000 fre_clust
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2763   .bss.pfs:00000000 pfs
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2564   .bss.bw:00000000 bw
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2558   .bss.br:00000000 br
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2518   .bss.SD_file_name:00000000 SD_file_name
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2506   .bss.SD_buffer_r:00000000 SD_buffer_r
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2512   .bss.SD_buffer_w:00000000 SD_buffer_w
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2657   .bss.fresult:00000000 fresult
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2669   .bss.gnss_str:00000000 gnss_str
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2700   .bss.l70Data1:00000000 l70Data1
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2813   .bss.simMessage:00000000 simMessage
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2733   .bss.longData:00000000 longData
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2727   .bss.latData:00000000 latData
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2487   .bss.GPSResponse:00000000 GPSResponse
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2757   .bss.numCheck_time:00000000 numCheck_time
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2867   .bss.totalMinute_OperateTime_buff:00000000 totalMinute_OperateTime_buff
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2847   .bss.time_minute:00000000 time_minute
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2840   .bss.time_hour:00000000 time_hour
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2860   .bss.totalMinute_OperateTime:00000000 totalMinute_OperateTime
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2570   .bss.check:00000000 check
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2603   .bss.date_buff:00000000 date_buff
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2833   .bss.time_buff:00000000 time_buff
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2878   .bss.year:00000000 year
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2743   .bss.month:00000000 month
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2608   .bss.day:00000000 day
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2596   .bss.date:00000000 date
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2674   .bss.hour:00000000 hour
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2738   .bss.minute:00000000 minute
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2800   .bss.sencond:00000000 sencond
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2795   .bss.sAlarm:00000000 sAlarm
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2707   .bss.last_sDate:00000000 last_sDate
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2714   .bss.last_sTime:00000000 last_sTime
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2577   .bss.current_sDate:00000000 current_sDate
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2584   .bss.current_sTime:00000000 current_sTime
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2552   .bss.Vehical_veloc:00000000 Vehical_veloc
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2721   .bss.last_time:00000000 last_time
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2591   .bss.current_time:00000000 current_time
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2545   .bss.Vehical_State:00000000 Vehical_State
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2750   .bss.npn_count:00000000 npn_count
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2898   .data.npn_flag_check:00000000 npn_flag_check
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2500   .bss.Logout:00000000 Logout
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2873   .bss.waiting4LogOut:00000000 waiting4LogOut
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2826   .bss.szBuff:00000000 szBuff
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2466   .bss.CardID:00000000 CardID
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2905   .rodata.bitmap:00000000 bitmap
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2462   .bss.CardID:00000000 $d
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2469   .bss.Card_Endbuff:00000000 $d
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 101


C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2476   .bss.Card_Startbuff:00000000 $d
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2483   .bss.GPSResponse:00000000 $d
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2490   .bss.Json_Data:00000000 $d
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2501   .bss.Logout:00000000 $d
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2503   .bss.SD_buffer_r:00000000 $d
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2509   .bss.SD_buffer_w:00000000 $d
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2515   .bss.SD_file_name:00000000 $d
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2521   .bss.SD_read:00000000 $d
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2528   .bss.Task_Mode:00000000 $d
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2534   .bss.Taskperform:00000000 $d
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2541   .bss.Vehical_State:00000000 $d
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2548   .bss.Vehical_veloc:00000000 $d
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2555   .bss.br:00000000 $d
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2561   .bss.bw:00000000 $d
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2567   .bss.check:00000000 $d
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2573   .bss.current_sDate:00000000 $d
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2580   .bss.current_sTime:00000000 $d
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2587   .bss.current_time:00000000 $d
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2597   .bss.date:00000000 $d
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2599   .bss.date_buff:00000000 $d
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2609   .bss.day:00000000 $d
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2611   .bss.dht_hum:00000000 $d
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2617   .bss.dht_temp:00000000 $d
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2623   .bss.ds18_temp:00000000 $d
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2630   .bss.fil:00000000 $d
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2636   .bss.flash_Readbuff:00000000 $d
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2642   .bss.fre_clust:00000000 $d
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2648   .bss.free_space:00000000 $d
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2658   .bss.fresult:00000000 $d
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2660   .bss.fs:00000000 $d
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2666   .bss.gnss_str:00000000 $d
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2675   .bss.hour:00000000 $d
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2677   .bss.infoUser:00000000 $d
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2684   .bss.infoUser1:00000000 $d
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2691   .bss.infoUser2:00000000 $d
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2701   .bss.l70Data1:00000000 $d
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2703   .bss.last_sDate:00000000 $d
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2710   .bss.last_sTime:00000000 $d
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2717   .bss.last_time:00000000 $d
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2724   .bss.latData:00000000 $d
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2730   .bss.longData:00000000 $d
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2739   .bss.minute:00000000 $d
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2744   .bss.month:00000000 $d
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2746   .bss.npn_count:00000000 $d
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2753   .bss.numCheck_time:00000000 $d
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2760   .bss.pfs:00000000 $d
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2766   .bss.rs232_buff:00000000 $d
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2777   .bss.rs232_data:00000000 $d
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2783   .bss.rs232_flag:00000000 $d
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2785   .bss.rs232_index:00000000 $d
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2792   .bss.sAlarm:00000000 $d
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2801   .bss.sencond:00000000 $d
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2803   .bss.sensors:00000000 $d
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2810   .bss.simMessage:00000000 $d
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2816   .bss.stateDevice:00000000 $d
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2823   .bss.szBuff:00000000 $d
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2829   .bss.time_buff:00000000 $d
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 102


C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2836   .bss.time_hour:00000000 $d
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2843   .bss.time_minute:00000000 $d
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2850   .bss.total:00000000 $d
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2856   .bss.totalMinute_OperateTime:00000000 $d
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2863   .bss.totalMinute_OperateTime_buff:00000000 $d
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2874   .bss.waiting4LogOut:00000000 $d
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2879   .bss.year:00000000 $d
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2881   .data.Type_Task:00000000 $d
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2888   .data.id_ref:00000000 $d
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2894   .data.npn_flag_check:00000000 $d
C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s:2901   .rodata.bitmap:00000000 $d

UNDEFINED SYMBOLS
strlen
HAL_UART_Transmit
huart2
HAL_GPIO_WritePin
HAL_Delay
sim7672_sendSMS
sim7672_callback
l70_callback
huart1
huart4
__aeabi_ui2f
__aeabi_fsub
__aeabi_fdiv
HAL_TIM_Base_Stop
HAL_GetTick
HAL_TIM_Base_Start_IT
htim2
rc522_check
htim3
HAL_RTC_SetAlarm_IT
hrtc
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
__aeabi_f2iz
HAL_Init
MX_GPIO_Init
MX_ADC1_Init
MX_SPI1_Init
MX_ADC2_Init
MX_TIM1_Init
MX_UART5_Init
MX_I2C1_Init
MX_SPI2_Init
MX_SPI3_Init
MX_UART4_Init
MX_USART1_UART_Init
MX_USART2_UART_Init
MX_TIM2_Init
MX_TIM3_Init
MX_RTC_Init
MX_FATFS_Init
log_data
ARM GAS  C:\Users\Admin\AppData\Local\Temp\cc8JDCBv.s 			page 103


rc522_init
l70_init
SSD1306_Init
SSD1306_Clear
SSD1306_DrawBitmap
SSD1306_GotoXY
SSD1306_Puts
SSD1306_UpdateScreen
f_mount
strcmp
HAL_RTC_GetTime
HAL_RTC_GetDate
sprintf
l70_receiveGPS
l70_handleGPS
strstr
HAL_TIM_Base_Start
HAL_UART_Receive_IT
Font_7x10
l70DataAfterHadler
htim1
strcpy
DS18B20_Result
mqtt_pub
f_open
f_lseek
f_puts
f_close
f_gets
