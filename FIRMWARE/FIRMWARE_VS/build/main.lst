ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.rodata.HAL_UART_RxCpltCallback.str1.4,"aMS",%progbits,1
  18              		.align	2
  19              	.LC0:
  20 0000 4C373020 		.ascii	"L70 call\012\000"
  20      63616C6C 
  20      0A00
  21              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
  22              		.align	1
  23              		.global	HAL_UART_RxCpltCallback
  24              		.syntax unified
  25              		.thumb
  26              		.thumb_func
  28              	HAL_UART_RxCpltCallback:
  29              	.LVL0:
  30              	.LFB68:
  31              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   SIM   ------> UART1 115200
  18:Core/Src/main.c ****   RS232 ------> UART2 9600
  19:Core/Src/main.c ****   GNSS  ------> UART4 9600
  20:Core/Src/main.c ****   DEBUG ------> UART5 115200
  21:Core/Src/main.c **** 
  22:Core/Src/main.c ****   RFID  ------> SPI1  18Mb/s
  23:Core/Src/main.c ****   SDCAD ------> SPI3
  24:Core/Src/main.c ****   FLASH ------> SPI2
  25:Core/Src/main.c **** 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s 			page 2


  26:Core/Src/main.c ****   SENSOR -----> TIM1
  27:Core/Src/main.c ****   MOve/stop --> TIM2
  28:Core/Src/main.c ****   4G LTE   ---> TIM3
  29:Core/Src/main.c ****   */
  30:Core/Src/main.c **** /* USER CODE END Header */
  31:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  32:Core/Src/main.c **** #include "main.h"
  33:Core/Src/main.c **** #include "adc.h"
  34:Core/Src/main.c **** #include "i2c.h"
  35:Core/Src/main.c **** #include "rtc.h"
  36:Core/Src/main.c **** #include "spi.h"
  37:Core/Src/main.c **** #include "tim.h"
  38:Core/Src/main.c **** #include "usart.h"
  39:Core/Src/main.c **** #include "gpio.h"
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  42:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  43:Core/Src/main.c **** #include "sensors.h"
  44:Core/Src/main.c **** #include "rc522.h"
  45:Core/Src/main.c **** #include "debug.h"
  46:Core/Src/main.c **** #include "sim4g_lte.h"
  47:Core/Src/main.c **** #include "gnss.h"
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** #include <stdio.h>
  50:Core/Src/main.c **** #include <stdint.h>
  51:Core/Src/main.c **** #include <string.h>
  52:Core/Src/main.c **** /* USER CODE END Includes */
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  55:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* USER CODE END PTD */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  60:Core/Src/main.c **** /* USER CODE BEGIN PD */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /* USER CODE END PD */
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  65:Core/Src/main.c **** /* USER CODE BEGIN PM */
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** /* USER CODE END PM */
  68:Core/Src/main.c **** 
  69:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  70:Core/Src/main.c **** 
  71:Core/Src/main.c **** /* USER CODE BEGIN PV */
  72:Core/Src/main.c **** uint8_t CardID[5];
  73:Core/Src/main.c **** char szBuff[20];
  74:Core/Src/main.c **** 
  75:Core/Src/main.c **** enum check
  76:Core/Src/main.c **** {
  77:Core/Src/main.c ****   CHANGE,
  78:Core/Src/main.c ****   NOT_CHANGE
  79:Core/Src/main.c **** };
  80:Core/Src/main.c **** volatile int npn_flag_check = NOT_CHANGE;
  81:Core/Src/main.c **** int npn_count = 0;
  82:Core/Src/main.c **** 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s 			page 3


  83:Core/Src/main.c **** enum State
  84:Core/Src/main.c **** {
  85:Core/Src/main.c **** 	Stop,
  86:Core/Src/main.c **** 	Move
  87:Core/Src/main.c **** };
  88:Core/Src/main.c **** 
  89:Core/Src/main.c **** int Vehical_State;
  90:Core/Src/main.c **** 
  91:Core/Src/main.c **** float current_time, last_time;
  92:Core/Src/main.c **** float Vehical_veloc;
  93:Core/Src/main.c **** 
  94:Core/Src/main.c **** //RTC
  95:Core/Src/main.c **** RTC_TimeTypeDef sTime = {0};
  96:Core/Src/main.c **** RTC_DateTypeDef sDate = {0};
  97:Core/Src/main.c **** RTC_AlarmTypeDef sAlarm = {0};
  98:Core/Src/main.c **** uint8_t sencond = 0;
  99:Core/Src/main.c **** uint8_t minute = 0;
 100:Core/Src/main.c **** uint8_t hour = 0;
 101:Core/Src/main.c **** uint8_t date = 0;
 102:Core/Src/main.c **** uint8_t day = 0;
 103:Core/Src/main.c **** uint8_t month = 0;
 104:Core/Src/main.c **** uint8_t year = 0;
 105:Core/Src/main.c **** 
 106:Core/Src/main.c **** volatile int check =0;
 107:Core/Src/main.c **** 
 108:Core/Src/main.c **** volatile uint8_t buftest[100]={0};
 109:Core/Src/main.c **** volatile uint8_t buffchar;
 110:Core/Src/main.c **** volatile int k1=0;
 111:Core/Src/main.c **** 
 112:Core/Src/main.c **** char *GPSResponse;
 113:Core/Src/main.c **** char latData[15] = {0};
 114:Core/Src/main.c **** char longData[15] = {0};
 115:Core/Src/main.c **** char simMessage[200] = {0};
 116:Core/Src/main.c **** /* USER CODE END PV */
 117:Core/Src/main.c **** 
 118:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
 119:Core/Src/main.c **** void SystemClock_Config(void);
 120:Core/Src/main.c **** /* USER CODE BEGIN PFP */
 121:Core/Src/main.c **** 
 122:Core/Src/main.c **** /* USER CODE END PFP */
 123:Core/Src/main.c **** 
 124:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 125:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 126:Core/Src/main.c **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
 127:Core/Src/main.c **** {
  32              		.loc 1 127 1 view -0
  33              		.cfi_startproc
  34              		@ args = 0, pretend = 0, frame = 0
  35              		@ frame_needed = 0, uses_anonymous_args = 0
  36              		.loc 1 127 1 is_stmt 0 view .LVU1
  37 0000 10B5     		push	{r4, lr}
  38              	.LCFI0:
  39              		.cfi_def_cfa_offset 8
  40              		.cfi_offset 4, -8
  41              		.cfi_offset 14, -4
  42 0002 0446     		mov	r4, r0
 128:Core/Src/main.c ****   if(huart == &huart1)
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s 			page 4


  43              		.loc 1 128 3 is_stmt 1 view .LVU2
  44              		.loc 1 128 5 is_stmt 0 view .LVU3
  45 0004 074B     		ldr	r3, .L7
  46 0006 9842     		cmp	r0, r3
  47 0008 03D0     		beq	.L5
  48              	.LVL1:
  49              	.L2:
 129:Core/Src/main.c ****   {
 130:Core/Src/main.c ****     // log_data("RXcallback\n");
 131:Core/Src/main.c ****     sim7672_callback();
 132:Core/Src/main.c ****     // buftest[k1++]=buffchar;
 133:Core/Src/main.c ****     // log_data((char*)&buftest[k1-1]);
 134:Core/Src/main.c ****     // HAL_UART_Receive_IT(&huart1, (uint8_t *)&buffchar, 1);
 135:Core/Src/main.c ****     // log_data("RXcallback\n");
 136:Core/Src/main.c ****   }
 137:Core/Src/main.c **** 
 138:Core/Src/main.c ****   if(huart== &huart4)
  50              		.loc 1 138 3 is_stmt 1 view .LVU4
  51              		.loc 1 138 5 is_stmt 0 view .LVU5
  52 000a 074B     		ldr	r3, .L7+4
  53 000c 9C42     		cmp	r4, r3
  54 000e 03D0     		beq	.L6
  55              	.L1:
 139:Core/Src/main.c ****   {
 140:Core/Src/main.c ****     log_data("L70 call\n");
 141:Core/Src/main.c ****     l70_callback();
 142:Core/Src/main.c ****   }
 143:Core/Src/main.c **** }
  56              		.loc 1 143 1 view .LVU6
  57 0010 10BD     		pop	{r4, pc}
  58              	.LVL2:
  59              	.L5:
 131:Core/Src/main.c ****     // buftest[k1++]=buffchar;
  60              		.loc 1 131 5 is_stmt 1 view .LVU7
  61 0012 FFF7FEFF 		bl	sim7672_callback
  62              	.LVL3:
 131:Core/Src/main.c ****     // buftest[k1++]=buffchar;
  63              		.loc 1 131 5 is_stmt 0 view .LVU8
  64 0016 F8E7     		b	.L2
  65              	.L6:
 140:Core/Src/main.c ****     l70_callback();
  66              		.loc 1 140 5 is_stmt 1 view .LVU9
  67 0018 0448     		ldr	r0, .L7+8
  68 001a FFF7FEFF 		bl	log_data
  69              	.LVL4:
 141:Core/Src/main.c ****   }
  70              		.loc 1 141 5 view .LVU10
  71 001e FFF7FEFF 		bl	l70_callback
  72              	.LVL5:
  73              		.loc 1 143 1 is_stmt 0 view .LVU11
  74 0022 F5E7     		b	.L1
  75              	.L8:
  76              		.align	2
  77              	.L7:
  78 0024 00000000 		.word	huart1
  79 0028 00000000 		.word	huart4
  80 002c 00000000 		.word	.LC0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s 			page 5


  81              		.cfi_endproc
  82              	.LFE68:
  84              		.global	__aeabi_ui2f
  85              		.global	__aeabi_fsub
  86              		.global	__aeabi_fdiv
  87              		.section	.text.HAL_GPIO_EXTI_Callback,"ax",%progbits
  88              		.align	1
  89              		.global	HAL_GPIO_EXTI_Callback
  90              		.syntax unified
  91              		.thumb
  92              		.thumb_func
  94              	HAL_GPIO_EXTI_Callback:
  95              	.LVL6:
  96              	.LFB69:
 144:Core/Src/main.c **** 
 145:Core/Src/main.c **** void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
 146:Core/Src/main.c **** {
  97              		.loc 1 146 1 is_stmt 1 view -0
  98              		.cfi_startproc
  99              		@ args = 0, pretend = 0, frame = 0
 100              		@ frame_needed = 0, uses_anonymous_args = 0
 101              		.loc 1 146 1 is_stmt 0 view .LVU13
 102 0000 10B5     		push	{r4, lr}
 103              	.LCFI1:
 104              		.cfi_def_cfa_offset 8
 105              		.cfi_offset 4, -8
 106              		.cfi_offset 14, -4
 147:Core/Src/main.c ****   //reset timer 2
 148:Core/Src/main.c ****   HAL_TIM_Base_Stop(&htim2);
 107              		.loc 1 148 3 is_stmt 1 view .LVU14
 108 0002 1348     		ldr	r0, .L13
 109              	.LVL7:
 110              		.loc 1 148 3 is_stmt 0 view .LVU15
 111 0004 FFF7FEFF 		bl	HAL_TIM_Base_Stop
 112              	.LVL8:
 149:Core/Src/main.c ****   TIM2 -> CNT = 0;
 113              		.loc 1 149 3 is_stmt 1 view .LVU16
 114              		.loc 1 149 15 is_stmt 0 view .LVU17
 115 0008 0024     		movs	r4, #0
 116 000a 4FF08043 		mov	r3, #1073741824
 117 000e 5C62     		str	r4, [r3, #36]
 150:Core/Src/main.c **** 
 151:Core/Src/main.c ****   current_time = HAL_GetTick();
 118              		.loc 1 151 3 is_stmt 1 view .LVU18
 119              		.loc 1 151 18 is_stmt 0 view .LVU19
 120 0010 FFF7FEFF 		bl	HAL_GetTick
 121              	.LVL9:
 122              		.loc 1 151 16 view .LVU20
 123 0014 FFF7FEFF 		bl	__aeabi_ui2f
 124              	.LVL10:
 125 0018 0E4B     		ldr	r3, .L13+4
 126 001a 1860     		str	r0, [r3]	@ float
 152:Core/Src/main.c **** 
 153:Core/Src/main.c **** 	npn_flag_check = CHANGE;
 127              		.loc 1 153 2 is_stmt 1 view .LVU21
 128              		.loc 1 153 17 is_stmt 0 view .LVU22
 129 001c 0E4B     		ldr	r3, .L13+8
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s 			page 6


 130 001e 1C60     		str	r4, [r3]
 154:Core/Src/main.c ****   Vehical_State = Move;
 131              		.loc 1 154 3 is_stmt 1 view .LVU23
 132              		.loc 1 154 17 is_stmt 0 view .LVU24
 133 0020 0E4B     		ldr	r3, .L13+12
 134 0022 0122     		movs	r2, #1
 135 0024 1A60     		str	r2, [r3]
 155:Core/Src/main.c ****   npn_count++;
 136              		.loc 1 155 3 is_stmt 1 view .LVU25
 137              		.loc 1 155 12 is_stmt 0 view .LVU26
 138 0026 0E4A     		ldr	r2, .L13+16
 139 0028 1368     		ldr	r3, [r2]
 140 002a 0133     		adds	r3, r3, #1
 141 002c 1360     		str	r3, [r2]
 156:Core/Src/main.c ****   if (npn_count==20)
 142              		.loc 1 156 3 is_stmt 1 view .LVU27
 143              		.loc 1 156 6 is_stmt 0 view .LVU28
 144 002e 142B     		cmp	r3, #20
 145 0030 03D0     		beq	.L12
 146              	.L10:
 157:Core/Src/main.c ****   {
 158:Core/Src/main.c ****     float time_cycle = current_time-last_time;
 159:Core/Src/main.c ****     Vehical_veloc=(1.0*3000)/(time_cycle);
 160:Core/Src/main.c ****     //tinh toan van toc
 161:Core/Src/main.c ****   }
 162:Core/Src/main.c ****   //start timer2
 163:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim2);
 147              		.loc 1 163 3 is_stmt 1 view .LVU29
 148 0032 0748     		ldr	r0, .L13
 149 0034 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 150              	.LVL11:
 164:Core/Src/main.c **** }
 151              		.loc 1 164 1 is_stmt 0 view .LVU30
 152 0038 10BD     		pop	{r4, pc}
 153              	.L12:
 154              	.LBB4:
 158:Core/Src/main.c ****     Vehical_veloc=(1.0*3000)/(time_cycle);
 155              		.loc 1 158 5 is_stmt 1 view .LVU31
 158:Core/Src/main.c ****     Vehical_veloc=(1.0*3000)/(time_cycle);
 156              		.loc 1 158 11 is_stmt 0 view .LVU32
 157 003a 0A4B     		ldr	r3, .L13+20
 158 003c 1968     		ldr	r1, [r3]	@ float
 159 003e FFF7FEFF 		bl	__aeabi_fsub
 160              	.LVL12:
 161 0042 0146     		mov	r1, r0
 162              	.LVL13:
 159:Core/Src/main.c ****     //tinh toan van toc
 163              		.loc 1 159 5 is_stmt 1 view .LVU33
 159:Core/Src/main.c ****     //tinh toan van toc
 164              		.loc 1 159 29 is_stmt 0 view .LVU34
 165 0044 0848     		ldr	r0, .L13+24
 166              	.LVL14:
 159:Core/Src/main.c ****     //tinh toan van toc
 167              		.loc 1 159 29 view .LVU35
 168 0046 FFF7FEFF 		bl	__aeabi_fdiv
 169              	.LVL15:
 159:Core/Src/main.c ****     //tinh toan van toc
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s 			page 7


 170              		.loc 1 159 18 view .LVU36
 171 004a 084B     		ldr	r3, .L13+28
 172 004c 1860     		str	r0, [r3]	@ float
 173 004e F0E7     		b	.L10
 174              	.L14:
 175              		.align	2
 176              	.L13:
 177 0050 00000000 		.word	htim2
 178 0054 00000000 		.word	.LANCHOR0
 179 0058 00000000 		.word	.LANCHOR1
 180 005c 00000000 		.word	.LANCHOR2
 181 0060 00000000 		.word	.LANCHOR3
 182 0064 00000000 		.word	.LANCHOR4
 183 0068 00803B45 		.word	1161527296
 184 006c 00000000 		.word	.LANCHOR5
 185              	.LBE4:
 186              		.cfi_endproc
 187              	.LFE69:
 189              		.section	.rodata.HAL_TIM_PeriodElapsedCallback.str1.4,"aMS",%progbits,1
 190              		.align	2
 191              	.LC1:
 192 0000 74696D65 		.ascii	"timecallback\012\000"
 192      63616C6C 
 192      6261636B 
 192      0A00
 193              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 194              		.align	1
 195              		.global	HAL_TIM_PeriodElapsedCallback
 196              		.syntax unified
 197              		.thumb
 198              		.thumb_func
 200              	HAL_TIM_PeriodElapsedCallback:
 201              	.LVL16:
 202              	.LFB70:
 165:Core/Src/main.c **** 
 166:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 167:Core/Src/main.c **** {
 203              		.loc 1 167 1 is_stmt 1 view -0
 204              		.cfi_startproc
 205              		@ args = 0, pretend = 0, frame = 0
 206              		@ frame_needed = 0, uses_anonymous_args = 0
 207              		.loc 1 167 1 is_stmt 0 view .LVU38
 208 0000 08B5     		push	{r3, lr}
 209              	.LCFI2:
 210              		.cfi_def_cfa_offset 8
 211              		.cfi_offset 3, -8
 212              		.cfi_offset 14, -4
 168:Core/Src/main.c ****   if(htim == &htim2)
 213              		.loc 1 168 3 is_stmt 1 view .LVU39
 214              		.loc 1 168 5 is_stmt 0 view .LVU40
 215 0002 0A4B     		ldr	r3, .L21
 216 0004 9842     		cmp	r0, r3
 217 0006 03D0     		beq	.L19
 218              	.L16:
 169:Core/Src/main.c ****   {
 170:Core/Src/main.c ****     npn_flag_check = NOT_CHANGE;
 171:Core/Src/main.c ****     Vehical_State = Stop;
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s 			page 8


 172:Core/Src/main.c ****   }
 173:Core/Src/main.c ****   if(htim == &htim3)
 219              		.loc 1 173 3 is_stmt 1 view .LVU41
 220              		.loc 1 173 5 is_stmt 0 view .LVU42
 221 0008 094B     		ldr	r3, .L21+4
 222 000a 9842     		cmp	r0, r3
 223 000c 07D0     		beq	.L20
 224              	.LVL17:
 225              	.L15:
 174:Core/Src/main.c ****   {
 175:Core/Src/main.c ****     log_data("timecallback\n");
 176:Core/Src/main.c ****     sim7672_timerCallback();
 177:Core/Src/main.c ****   }
 178:Core/Src/main.c **** }
 226              		.loc 1 178 1 view .LVU43
 227 000e 08BD     		pop	{r3, pc}
 228              	.LVL18:
 229              	.L19:
 170:Core/Src/main.c ****     Vehical_State = Stop;
 230              		.loc 1 170 5 is_stmt 1 view .LVU44
 170:Core/Src/main.c ****     Vehical_State = Stop;
 231              		.loc 1 170 20 is_stmt 0 view .LVU45
 232 0010 084B     		ldr	r3, .L21+8
 233 0012 0122     		movs	r2, #1
 234 0014 1A60     		str	r2, [r3]
 171:Core/Src/main.c ****   }
 235              		.loc 1 171 5 is_stmt 1 view .LVU46
 171:Core/Src/main.c ****   }
 236              		.loc 1 171 19 is_stmt 0 view .LVU47
 237 0016 084B     		ldr	r3, .L21+12
 238 0018 0022     		movs	r2, #0
 239 001a 1A60     		str	r2, [r3]
 240 001c F4E7     		b	.L16
 241              	.L20:
 175:Core/Src/main.c ****     sim7672_timerCallback();
 242              		.loc 1 175 5 is_stmt 1 view .LVU48
 243 001e 0748     		ldr	r0, .L21+16
 244              	.LVL19:
 175:Core/Src/main.c ****     sim7672_timerCallback();
 245              		.loc 1 175 5 is_stmt 0 view .LVU49
 246 0020 FFF7FEFF 		bl	log_data
 247              	.LVL20:
 176:Core/Src/main.c ****   }
 248              		.loc 1 176 5 is_stmt 1 view .LVU50
 249 0024 FFF7FEFF 		bl	sim7672_timerCallback
 250              	.LVL21:
 251              		.loc 1 178 1 is_stmt 0 view .LVU51
 252 0028 F1E7     		b	.L15
 253              	.L22:
 254 002a 00BF     		.align	2
 255              	.L21:
 256 002c 00000000 		.word	htim2
 257 0030 00000000 		.word	htim3
 258 0034 00000000 		.word	.LANCHOR1
 259 0038 00000000 		.word	.LANCHOR2
 260 003c 00000000 		.word	.LC1
 261              		.cfi_endproc
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s 			page 9


 262              	.LFE70:
 264              		.section	.text.sim_sendcmd,"ax",%progbits
 265              		.align	1
 266              		.global	sim_sendcmd
 267              		.syntax unified
 268              		.thumb
 269              		.thumb_func
 271              	sim_sendcmd:
 272              	.LVL22:
 273              	.LFB71:
 179:Core/Src/main.c **** 
 180:Core/Src/main.c **** 
 181:Core/Src/main.c **** void sim_sendcmd(char *cmd)
 182:Core/Src/main.c **** {
 274              		.loc 1 182 1 is_stmt 1 view -0
 275              		.cfi_startproc
 276              		@ args = 0, pretend = 0, frame = 0
 277              		@ frame_needed = 0, uses_anonymous_args = 0
 278              		.loc 1 182 1 is_stmt 0 view .LVU53
 279 0000 10B5     		push	{r4, lr}
 280              	.LCFI3:
 281              		.cfi_def_cfa_offset 8
 282              		.cfi_offset 4, -8
 283              		.cfi_offset 14, -4
 284 0002 0446     		mov	r4, r0
 183:Core/Src/main.c ****   HAL_UART_Transmit(&huart1, (uint8_t*)cmd,strlen(cmd), 100);
 285              		.loc 1 183 3 is_stmt 1 view .LVU54
 286              		.loc 1 183 44 is_stmt 0 view .LVU55
 287 0004 FFF7FEFF 		bl	strlen
 288              	.LVL23:
 289              		.loc 1 183 3 view .LVU56
 290 0008 6423     		movs	r3, #100
 291 000a 82B2     		uxth	r2, r0
 292 000c 2146     		mov	r1, r4
 293 000e 0248     		ldr	r0, .L25
 294 0010 FFF7FEFF 		bl	HAL_UART_Transmit
 295              	.LVL24:
 184:Core/Src/main.c **** }
 296              		.loc 1 184 1 view .LVU57
 297 0014 10BD     		pop	{r4, pc}
 298              	.LVL25:
 299              	.L26:
 300              		.loc 1 184 1 view .LVU58
 301 0016 00BF     		.align	2
 302              	.L25:
 303 0018 00000000 		.word	huart1
 304              		.cfi_endproc
 305              	.LFE71:
 307              		.section	.text.Error_Handler,"ax",%progbits
 308              		.align	1
 309              		.global	Error_Handler
 310              		.syntax unified
 311              		.thumb
 312              		.thumb_func
 314              	Error_Handler:
 315              	.LFB74:
 185:Core/Src/main.c **** /* USER CODE END 0 */
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s 			page 10


 186:Core/Src/main.c **** 
 187:Core/Src/main.c **** /**
 188:Core/Src/main.c ****   * @brief  The application entry point.
 189:Core/Src/main.c ****   * @retval int
 190:Core/Src/main.c ****   */
 191:Core/Src/main.c **** int main(void)
 192:Core/Src/main.c **** {
 193:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 194:Core/Src/main.c **** 
 195:Core/Src/main.c ****   /* USER CODE END 1 */
 196:Core/Src/main.c **** 
 197:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 198:Core/Src/main.c **** 
 199:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 200:Core/Src/main.c ****   HAL_Init();
 201:Core/Src/main.c **** 
 202:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 203:Core/Src/main.c **** 
 204:Core/Src/main.c ****   /* USER CODE END Init */
 205:Core/Src/main.c **** 
 206:Core/Src/main.c ****   /* Configure the system clock */
 207:Core/Src/main.c ****   SystemClock_Config();
 208:Core/Src/main.c **** 
 209:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 210:Core/Src/main.c **** 
 211:Core/Src/main.c ****   /* USER CODE END SysInit */
 212:Core/Src/main.c **** 
 213:Core/Src/main.c ****   /* Initialize all configured peripherals */
 214:Core/Src/main.c ****   MX_GPIO_Init();
 215:Core/Src/main.c ****   MX_ADC1_Init();
 216:Core/Src/main.c ****   MX_SPI1_Init();
 217:Core/Src/main.c ****   MX_ADC2_Init();
 218:Core/Src/main.c ****   MX_TIM1_Init();
 219:Core/Src/main.c ****   MX_UART5_Init();
 220:Core/Src/main.c ****   MX_I2C1_Init();
 221:Core/Src/main.c ****   MX_SPI2_Init();
 222:Core/Src/main.c ****   MX_SPI3_Init();
 223:Core/Src/main.c ****   MX_UART4_Init();
 224:Core/Src/main.c ****   MX_USART1_UART_Init();
 225:Core/Src/main.c ****   MX_USART2_UART_Init();
 226:Core/Src/main.c ****   MX_TIM2_Init();
 227:Core/Src/main.c ****   MX_TIM3_Init();
 228:Core/Src/main.c ****   MX_RTC_Init();
 229:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 230:Core/Src/main.c ****   log_data("\nGSHT START\n");
 231:Core/Src/main.c **** 
 232:Core/Src/main.c ****   sim7672_pwrkey();
 233:Core/Src/main.c ****   sim7672_reset();
 234:Core/Src/main.c ****   sim7672_init();
 235:Core/Src/main.c ****   HAL_UART_Receive_IT(&huart1, (uint8_t *)&buffchar, 1);
 236:Core/Src/main.c ****     // sim_sendcmd("ATE1\r\n");
 237:Core/Src/main.c ****     // HAL_Delay(3000);
 238:Core/Src/main.c ****     // memset(buftest, '\0', sizeof(buftest));
 239:Core/Src/main.c ****     // sim_sendcmd("AT\r\n");
 240:Core/Src/main.c ****     // HAL_Delay(3000);
 241:Core/Src/main.c ****     // memset(buftest, '\0', sizeof(buftest));
 242:Core/Src/main.c ****     // sim_sendcmd("AT+CFUN?\r\n");
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s 			page 11


 243:Core/Src/main.c ****     // HAL_Delay(3000);
 244:Core/Src/main.c ****     // memset(buftest, '\0', sizeof(buftest));
 245:Core/Src/main.c ****     // sim_sendcmd("ATE0\r\n");
 246:Core/Src/main.c ****     // HAL_Delay(3000);
 247:Core/Src/main.c ****     // memset(buftest, '\0', sizeof(buftest));
 248:Core/Src/main.c ****     // sim_sendcmd("AT\r\n");
 249:Core/Src/main.c ****     // HAL_Delay(3000);
 250:Core/Src/main.c ****     // memset(buftest, '\0', sizeof(buftest));
 251:Core/Src/main.c ****     // sim_sendcmd("AT+CFUN?\r\n");
 252:Core/Src/main.c ****     // HAL_Delay(3000);
 253:Core/Src/main.c ****   // l70_init();
 254:Core/Src/main.c ****   //   GPSResponse = l70_receiveGPS();
 255:Core/Src/main.c ****   // l70_handleGPS(latData, longData, GPSResponse);
 256:Core/Src/main.c ****   // sprintf(simMessage, "https://www.google.com/maps/search/?api=1&query=%s,%s\n", latData, longDa
 257:Core/Src/main.c ****   // log_data(simMessage);
 258:Core/Src/main.c **** 
 259:Core/Src/main.c ****   // HAL_UART_Transmit(&huart1, (uint8_t *)"ATE0\r\n", strlen("AT\r\n"), 100);
 260:Core/Src/main.c ****   // HAL_Delay(200);
 261:Core/Src/main.c **** 
 262:Core/Src/main.c ****   //   //log_data("AT\n");
 263:Core/Src/main.c ****   //   HAL_UART_Transmit(&huart1, (uint8_t *)"ATE1\r\n", strlen("AT\r\n"), 100);
 264:Core/Src/main.c ****   //   HAL_Delay(3000);
 265:Core/Src/main.c ****     // HAL_UART_Transmit(&huart1, (uint8_t *)"AT\r\n", strlen("AT\r\n"), 100);
 266:Core/Src/main.c ****   /* USER CODE END 2 */
 267:Core/Src/main.c **** 
 268:Core/Src/main.c ****   /* Infinite loop */
 269:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 270:Core/Src/main.c ****   while (1)
 271:Core/Src/main.c ****   {
 272:Core/Src/main.c ****     /* USER CODE END WHILE */
 273:Core/Src/main.c **** 
 274:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 275:Core/Src/main.c **** 
 276:Core/Src/main.c ****     //     HAL_UART_Transmit(&huart1, (uint8_t *)"AT+CFUN?\r\n", strlen("AT+CFUN?\r\n"), 100);
 277:Core/Src/main.c ****     // HAL_Delay(200);
 278:Core/Src/main.c ****     // // HAL_UART_Transmit(&huart1, (uint8_t *)"AT\r\n", strlen("AT\r\n"), 100);
 279:Core/Src/main.c ****     // // log_data("AT\n");
 280:Core/Src/main.c ****     // HAL_UART_Receive(&huart1, (uint8_t*)buftest, sizeof(buftest)-1,2000);
 281:Core/Src/main.c ****     // log_data(buftest);
 282:Core/Src/main.c ****     // HAL_Delay(3000);
 283:Core/Src/main.c ****     //log_data("AT\n");
 284:Core/Src/main.c ****     // log_data("test...");
 285:Core/Src/main.c ****     // HAL_Delay(2000);
 286:Core/Src/main.c ****     //HAL_Delay(2000);
 287:Core/Src/main.c ****   }
 288:Core/Src/main.c ****   /* USER CODE END 3 */
 289:Core/Src/main.c **** }
 290:Core/Src/main.c **** 
 291:Core/Src/main.c **** /**
 292:Core/Src/main.c ****   * @brief System Clock Configuration
 293:Core/Src/main.c ****   * @retval None
 294:Core/Src/main.c ****   */
 295:Core/Src/main.c **** void SystemClock_Config(void)
 296:Core/Src/main.c **** {
 297:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 298:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 299:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s 			page 12


 300:Core/Src/main.c **** 
 301:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 302:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 303:Core/Src/main.c ****   */
 304:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_LSI|RCC_OSCILLATORTYPE_HSE;
 305:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 306:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 307:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 308:Core/Src/main.c ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 309:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 310:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 311:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 312:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 313:Core/Src/main.c ****   {
 314:Core/Src/main.c ****     Error_Handler();
 315:Core/Src/main.c ****   }
 316:Core/Src/main.c **** 
 317:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 318:Core/Src/main.c ****   */
 319:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 320:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 321:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 322:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 323:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 324:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 325:Core/Src/main.c **** 
 326:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 327:Core/Src/main.c ****   {
 328:Core/Src/main.c ****     Error_Handler();
 329:Core/Src/main.c ****   }
 330:Core/Src/main.c ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_RTC|RCC_PERIPHCLK_ADC;
 331:Core/Src/main.c ****   PeriphClkInit.RTCClockSelection = RCC_RTCCLKSOURCE_LSI;
 332:Core/Src/main.c ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV6;
 333:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 334:Core/Src/main.c ****   {
 335:Core/Src/main.c ****     Error_Handler();
 336:Core/Src/main.c ****   }
 337:Core/Src/main.c **** }
 338:Core/Src/main.c **** 
 339:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 340:Core/Src/main.c **** 
 341:Core/Src/main.c **** /* USER CODE END 4 */
 342:Core/Src/main.c **** 
 343:Core/Src/main.c **** /**
 344:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 345:Core/Src/main.c ****   * @retval None
 346:Core/Src/main.c ****   */
 347:Core/Src/main.c **** void Error_Handler(void)
 348:Core/Src/main.c **** {
 316              		.loc 1 348 1 is_stmt 1 view -0
 317              		.cfi_startproc
 318              		@ Volatile: function does not return.
 319              		@ args = 0, pretend = 0, frame = 0
 320              		@ frame_needed = 0, uses_anonymous_args = 0
 321              		@ link register save eliminated.
 349:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 350:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s 			page 13


 351:Core/Src/main.c ****   __disable_irq();
 322              		.loc 1 351 3 view .LVU60
 323              	.LBB5:
 324              	.LBI5:
 325              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s 			page 14


  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s 			page 15


 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 326              		.loc 2 140 27 view .LVU61
 327              	.LBB6:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 328              		.loc 2 142 3 view .LVU62
 329              		.syntax unified
 330              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 331 0000 72B6     		cpsid i
 332              	@ 0 "" 2
 333              		.thumb
 334              		.syntax unified
 335              	.L28:
 336              	.LBE6:
 337              	.LBE5:
 352:Core/Src/main.c ****   while (1)
 338              		.loc 1 352 3 discriminator 1 view .LVU63
 353:Core/Src/main.c ****   {
 354:Core/Src/main.c ****   }
 339              		.loc 1 354 3 discriminator 1 view .LVU64
 352:Core/Src/main.c ****   while (1)
 340              		.loc 1 352 9 discriminator 1 view .LVU65
 341 0002 FEE7     		b	.L28
 342              		.cfi_endproc
 343              	.LFE74:
 345              		.section	.text.SystemClock_Config,"ax",%progbits
 346              		.align	1
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s 			page 16


 347              		.global	SystemClock_Config
 348              		.syntax unified
 349              		.thumb
 350              		.thumb_func
 352              	SystemClock_Config:
 353              	.LFB73:
 296:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 354              		.loc 1 296 1 view -0
 355              		.cfi_startproc
 356              		@ args = 0, pretend = 0, frame = 88
 357              		@ frame_needed = 0, uses_anonymous_args = 0
 358 0000 00B5     		push	{lr}
 359              	.LCFI4:
 360              		.cfi_def_cfa_offset 4
 361              		.cfi_offset 14, -4
 362 0002 97B0     		sub	sp, sp, #92
 363              	.LCFI5:
 364              		.cfi_def_cfa_offset 96
 297:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 365              		.loc 1 297 3 view .LVU67
 297:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 366              		.loc 1 297 22 is_stmt 0 view .LVU68
 367 0004 2822     		movs	r2, #40
 368 0006 0021     		movs	r1, #0
 369 0008 0CA8     		add	r0, sp, #48
 370 000a FFF7FEFF 		bl	memset
 371              	.LVL26:
 298:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 372              		.loc 1 298 3 is_stmt 1 view .LVU69
 298:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 373              		.loc 1 298 22 is_stmt 0 view .LVU70
 374 000e 0023     		movs	r3, #0
 375 0010 0793     		str	r3, [sp, #28]
 376 0012 0893     		str	r3, [sp, #32]
 377 0014 0993     		str	r3, [sp, #36]
 378 0016 0A93     		str	r3, [sp, #40]
 379 0018 0B93     		str	r3, [sp, #44]
 299:Core/Src/main.c **** 
 380              		.loc 1 299 3 is_stmt 1 view .LVU71
 299:Core/Src/main.c **** 
 381              		.loc 1 299 28 is_stmt 0 view .LVU72
 382 001a 0193     		str	r3, [sp, #4]
 383 001c 0293     		str	r3, [sp, #8]
 384 001e 0393     		str	r3, [sp, #12]
 385 0020 0493     		str	r3, [sp, #16]
 386 0022 0593     		str	r3, [sp, #20]
 387 0024 0693     		str	r3, [sp, #24]
 304:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 388              		.loc 1 304 3 is_stmt 1 view .LVU73
 304:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 389              		.loc 1 304 36 is_stmt 0 view .LVU74
 390 0026 0923     		movs	r3, #9
 391 0028 0C93     		str	r3, [sp, #48]
 305:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 392              		.loc 1 305 3 is_stmt 1 view .LVU75
 305:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 393              		.loc 1 305 30 is_stmt 0 view .LVU76
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s 			page 17


 394 002a 4FF48033 		mov	r3, #65536
 395 002e 0D93     		str	r3, [sp, #52]
 306:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 396              		.loc 1 306 3 is_stmt 1 view .LVU77
 307:Core/Src/main.c ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 397              		.loc 1 307 3 view .LVU78
 307:Core/Src/main.c ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 398              		.loc 1 307 30 is_stmt 0 view .LVU79
 399 0030 0122     		movs	r2, #1
 400 0032 1092     		str	r2, [sp, #64]
 308:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 401              		.loc 1 308 3 is_stmt 1 view .LVU80
 308:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 402              		.loc 1 308 30 is_stmt 0 view .LVU81
 403 0034 1292     		str	r2, [sp, #72]
 309:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 404              		.loc 1 309 3 is_stmt 1 view .LVU82
 309:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 405              		.loc 1 309 34 is_stmt 0 view .LVU83
 406 0036 0222     		movs	r2, #2
 407 0038 1392     		str	r2, [sp, #76]
 310:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 408              		.loc 1 310 3 is_stmt 1 view .LVU84
 310:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 409              		.loc 1 310 35 is_stmt 0 view .LVU85
 410 003a 1493     		str	r3, [sp, #80]
 311:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 411              		.loc 1 311 3 is_stmt 1 view .LVU86
 311:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 412              		.loc 1 311 32 is_stmt 0 view .LVU87
 413 003c 4FF4E013 		mov	r3, #1835008
 414 0040 1593     		str	r3, [sp, #84]
 312:Core/Src/main.c ****   {
 415              		.loc 1 312 3 is_stmt 1 view .LVU88
 312:Core/Src/main.c ****   {
 416              		.loc 1 312 7 is_stmt 0 view .LVU89
 417 0042 0CA8     		add	r0, sp, #48
 418 0044 FFF7FEFF 		bl	HAL_RCC_OscConfig
 419              	.LVL27:
 312:Core/Src/main.c ****   {
 420              		.loc 1 312 6 view .LVU90
 421 0048 E0B9     		cbnz	r0, .L34
 319:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 422              		.loc 1 319 3 is_stmt 1 view .LVU91
 319:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 423              		.loc 1 319 31 is_stmt 0 view .LVU92
 424 004a 0F23     		movs	r3, #15
 425 004c 0793     		str	r3, [sp, #28]
 321:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 426              		.loc 1 321 3 is_stmt 1 view .LVU93
 321:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 427              		.loc 1 321 34 is_stmt 0 view .LVU94
 428 004e 0221     		movs	r1, #2
 429 0050 0891     		str	r1, [sp, #32]
 322:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 430              		.loc 1 322 3 is_stmt 1 view .LVU95
 322:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s 			page 18


 431              		.loc 1 322 35 is_stmt 0 view .LVU96
 432 0052 0023     		movs	r3, #0
 433 0054 0993     		str	r3, [sp, #36]
 323:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 434              		.loc 1 323 3 is_stmt 1 view .LVU97
 323:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 435              		.loc 1 323 36 is_stmt 0 view .LVU98
 436 0056 4FF48062 		mov	r2, #1024
 437 005a 0A92     		str	r2, [sp, #40]
 324:Core/Src/main.c **** 
 438              		.loc 1 324 3 is_stmt 1 view .LVU99
 324:Core/Src/main.c **** 
 439              		.loc 1 324 36 is_stmt 0 view .LVU100
 440 005c 0B93     		str	r3, [sp, #44]
 326:Core/Src/main.c ****   {
 441              		.loc 1 326 3 is_stmt 1 view .LVU101
 326:Core/Src/main.c ****   {
 442              		.loc 1 326 7 is_stmt 0 view .LVU102
 443 005e 07A8     		add	r0, sp, #28
 444 0060 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 445              	.LVL28:
 326:Core/Src/main.c ****   {
 446              		.loc 1 326 6 view .LVU103
 447 0064 80B9     		cbnz	r0, .L35
 330:Core/Src/main.c ****   PeriphClkInit.RTCClockSelection = RCC_RTCCLKSOURCE_LSI;
 448              		.loc 1 330 3 is_stmt 1 view .LVU104
 330:Core/Src/main.c ****   PeriphClkInit.RTCClockSelection = RCC_RTCCLKSOURCE_LSI;
 449              		.loc 1 330 38 is_stmt 0 view .LVU105
 450 0066 0323     		movs	r3, #3
 451 0068 0193     		str	r3, [sp, #4]
 331:Core/Src/main.c ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV6;
 452              		.loc 1 331 3 is_stmt 1 view .LVU106
 331:Core/Src/main.c ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV6;
 453              		.loc 1 331 35 is_stmt 0 view .LVU107
 454 006a 4FF40073 		mov	r3, #512
 455 006e 0293     		str	r3, [sp, #8]
 332:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 456              		.loc 1 332 3 is_stmt 1 view .LVU108
 332:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 457              		.loc 1 332 35 is_stmt 0 view .LVU109
 458 0070 4FF40043 		mov	r3, #32768
 459 0074 0393     		str	r3, [sp, #12]
 333:Core/Src/main.c ****   {
 460              		.loc 1 333 3 is_stmt 1 view .LVU110
 333:Core/Src/main.c ****   {
 461              		.loc 1 333 7 is_stmt 0 view .LVU111
 462 0076 01A8     		add	r0, sp, #4
 463 0078 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 464              	.LVL29:
 333:Core/Src/main.c ****   {
 465              		.loc 1 333 6 view .LVU112
 466 007c 30B9     		cbnz	r0, .L36
 337:Core/Src/main.c **** 
 467              		.loc 1 337 1 view .LVU113
 468 007e 17B0     		add	sp, sp, #92
 469              	.LCFI6:
 470              		.cfi_remember_state
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s 			page 19


 471              		.cfi_def_cfa_offset 4
 472              		@ sp needed
 473 0080 5DF804FB 		ldr	pc, [sp], #4
 474              	.L34:
 475              	.LCFI7:
 476              		.cfi_restore_state
 314:Core/Src/main.c ****   }
 477              		.loc 1 314 5 is_stmt 1 view .LVU114
 478 0084 FFF7FEFF 		bl	Error_Handler
 479              	.LVL30:
 480              	.L35:
 328:Core/Src/main.c ****   }
 481              		.loc 1 328 5 view .LVU115
 482 0088 FFF7FEFF 		bl	Error_Handler
 483              	.LVL31:
 484              	.L36:
 335:Core/Src/main.c ****   }
 485              		.loc 1 335 5 view .LVU116
 486 008c FFF7FEFF 		bl	Error_Handler
 487              	.LVL32:
 488              		.cfi_endproc
 489              	.LFE73:
 491              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 492              		.align	2
 493              	.LC2:
 494 0000 0A475348 		.ascii	"\012GSHT START\012\000"
 494      54205354 
 494      4152540A 
 494      00
 495              		.section	.text.main,"ax",%progbits
 496              		.align	1
 497              		.global	main
 498              		.syntax unified
 499              		.thumb
 500              		.thumb_func
 502              	main:
 503              	.LFB72:
 192:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 504              		.loc 1 192 1 view -0
 505              		.cfi_startproc
 506              		@ Volatile: function does not return.
 507              		@ args = 0, pretend = 0, frame = 0
 508              		@ frame_needed = 0, uses_anonymous_args = 0
 509 0000 08B5     		push	{r3, lr}
 510              	.LCFI8:
 511              		.cfi_def_cfa_offset 8
 512              		.cfi_offset 3, -8
 513              		.cfi_offset 14, -4
 200:Core/Src/main.c **** 
 514              		.loc 1 200 3 view .LVU118
 515 0002 FFF7FEFF 		bl	HAL_Init
 516              	.LVL33:
 207:Core/Src/main.c **** 
 517              		.loc 1 207 3 view .LVU119
 518 0006 FFF7FEFF 		bl	SystemClock_Config
 519              	.LVL34:
 214:Core/Src/main.c ****   MX_ADC1_Init();
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s 			page 20


 520              		.loc 1 214 3 view .LVU120
 521 000a FFF7FEFF 		bl	MX_GPIO_Init
 522              	.LVL35:
 215:Core/Src/main.c ****   MX_SPI1_Init();
 523              		.loc 1 215 3 view .LVU121
 524 000e FFF7FEFF 		bl	MX_ADC1_Init
 525              	.LVL36:
 216:Core/Src/main.c ****   MX_ADC2_Init();
 526              		.loc 1 216 3 view .LVU122
 527 0012 FFF7FEFF 		bl	MX_SPI1_Init
 528              	.LVL37:
 217:Core/Src/main.c ****   MX_TIM1_Init();
 529              		.loc 1 217 3 view .LVU123
 530 0016 FFF7FEFF 		bl	MX_ADC2_Init
 531              	.LVL38:
 218:Core/Src/main.c ****   MX_UART5_Init();
 532              		.loc 1 218 3 view .LVU124
 533 001a FFF7FEFF 		bl	MX_TIM1_Init
 534              	.LVL39:
 219:Core/Src/main.c ****   MX_I2C1_Init();
 535              		.loc 1 219 3 view .LVU125
 536 001e FFF7FEFF 		bl	MX_UART5_Init
 537              	.LVL40:
 220:Core/Src/main.c ****   MX_SPI2_Init();
 538              		.loc 1 220 3 view .LVU126
 539 0022 FFF7FEFF 		bl	MX_I2C1_Init
 540              	.LVL41:
 221:Core/Src/main.c ****   MX_SPI3_Init();
 541              		.loc 1 221 3 view .LVU127
 542 0026 FFF7FEFF 		bl	MX_SPI2_Init
 543              	.LVL42:
 222:Core/Src/main.c ****   MX_UART4_Init();
 544              		.loc 1 222 3 view .LVU128
 545 002a FFF7FEFF 		bl	MX_SPI3_Init
 546              	.LVL43:
 223:Core/Src/main.c ****   MX_USART1_UART_Init();
 547              		.loc 1 223 3 view .LVU129
 548 002e FFF7FEFF 		bl	MX_UART4_Init
 549              	.LVL44:
 224:Core/Src/main.c ****   MX_USART2_UART_Init();
 550              		.loc 1 224 3 view .LVU130
 551 0032 FFF7FEFF 		bl	MX_USART1_UART_Init
 552              	.LVL45:
 225:Core/Src/main.c ****   MX_TIM2_Init();
 553              		.loc 1 225 3 view .LVU131
 554 0036 FFF7FEFF 		bl	MX_USART2_UART_Init
 555              	.LVL46:
 226:Core/Src/main.c ****   MX_TIM3_Init();
 556              		.loc 1 226 3 view .LVU132
 557 003a FFF7FEFF 		bl	MX_TIM2_Init
 558              	.LVL47:
 227:Core/Src/main.c ****   MX_RTC_Init();
 559              		.loc 1 227 3 view .LVU133
 560 003e FFF7FEFF 		bl	MX_TIM3_Init
 561              	.LVL48:
 228:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 562              		.loc 1 228 3 view .LVU134
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s 			page 21


 563 0042 FFF7FEFF 		bl	MX_RTC_Init
 564              	.LVL49:
 230:Core/Src/main.c **** 
 565              		.loc 1 230 3 view .LVU135
 566 0046 0748     		ldr	r0, .L40
 567 0048 FFF7FEFF 		bl	log_data
 568              	.LVL50:
 232:Core/Src/main.c ****   sim7672_reset();
 569              		.loc 1 232 3 view .LVU136
 570 004c FFF7FEFF 		bl	sim7672_pwrkey
 571              	.LVL51:
 233:Core/Src/main.c ****   sim7672_init();
 572              		.loc 1 233 3 view .LVU137
 573 0050 FFF7FEFF 		bl	sim7672_reset
 574              	.LVL52:
 234:Core/Src/main.c ****   HAL_UART_Receive_IT(&huart1, (uint8_t *)&buffchar, 1);
 575              		.loc 1 234 3 view .LVU138
 576 0054 FFF7FEFF 		bl	sim7672_init
 577              	.LVL53:
 235:Core/Src/main.c ****     // sim_sendcmd("ATE1\r\n");
 578              		.loc 1 235 3 view .LVU139
 579 0058 0122     		movs	r2, #1
 580 005a 0349     		ldr	r1, .L40+4
 581 005c 0348     		ldr	r0, .L40+8
 582 005e FFF7FEFF 		bl	HAL_UART_Receive_IT
 583              	.LVL54:
 584              	.L38:
 270:Core/Src/main.c ****   {
 585              		.loc 1 270 3 discriminator 1 view .LVU140
 287:Core/Src/main.c ****   /* USER CODE END 3 */
 586              		.loc 1 287 3 discriminator 1 view .LVU141
 270:Core/Src/main.c ****   {
 587              		.loc 1 270 9 discriminator 1 view .LVU142
 588 0062 FEE7     		b	.L38
 589              	.L41:
 590              		.align	2
 591              	.L40:
 592 0064 00000000 		.word	.LC2
 593 0068 00000000 		.word	.LANCHOR6
 594 006c 00000000 		.word	huart1
 595              		.cfi_endproc
 596              	.LFE72:
 598              		.global	simMessage
 599              		.global	longData
 600              		.global	latData
 601              		.global	GPSResponse
 602              		.global	k1
 603              		.global	buffchar
 604              		.global	buftest
 605              		.global	check
 606              		.global	year
 607              		.global	month
 608              		.global	day
 609              		.global	date
 610              		.global	hour
 611              		.global	minute
 612              		.global	sencond
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s 			page 22


 613              		.global	sAlarm
 614              		.global	sDate
 615              		.global	sTime
 616              		.global	Vehical_veloc
 617              		.global	last_time
 618              		.global	current_time
 619              		.global	Vehical_State
 620              		.global	npn_count
 621              		.global	npn_flag_check
 622              		.global	szBuff
 623              		.global	CardID
 624              		.section	.bss.CardID,"aw",%nobits
 625              		.align	2
 628              	CardID:
 629 0000 00000000 		.space	5
 629      00
 630              		.section	.bss.GPSResponse,"aw",%nobits
 631              		.align	2
 634              	GPSResponse:
 635 0000 00000000 		.space	4
 636              		.section	.bss.Vehical_State,"aw",%nobits
 637              		.align	2
 638              		.set	.LANCHOR2,. + 0
 641              	Vehical_State:
 642 0000 00000000 		.space	4
 643              		.section	.bss.Vehical_veloc,"aw",%nobits
 644              		.align	2
 645              		.set	.LANCHOR5,. + 0
 648              	Vehical_veloc:
 649 0000 00000000 		.space	4
 650              		.section	.bss.buffchar,"aw",%nobits
 651              		.set	.LANCHOR6,. + 0
 654              	buffchar:
 655 0000 00       		.space	1
 656              		.section	.bss.buftest,"aw",%nobits
 657              		.align	2
 660              	buftest:
 661 0000 00000000 		.space	100
 661      00000000 
 661      00000000 
 661      00000000 
 661      00000000 
 662              		.section	.bss.check,"aw",%nobits
 663              		.align	2
 666              	check:
 667 0000 00000000 		.space	4
 668              		.section	.bss.current_time,"aw",%nobits
 669              		.align	2
 670              		.set	.LANCHOR0,. + 0
 673              	current_time:
 674 0000 00000000 		.space	4
 675              		.section	.bss.date,"aw",%nobits
 678              	date:
 679 0000 00       		.space	1
 680              		.section	.bss.day,"aw",%nobits
 683              	day:
 684 0000 00       		.space	1
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s 			page 23


 685              		.section	.bss.hour,"aw",%nobits
 688              	hour:
 689 0000 00       		.space	1
 690              		.section	.bss.k1,"aw",%nobits
 691              		.align	2
 694              	k1:
 695 0000 00000000 		.space	4
 696              		.section	.bss.last_time,"aw",%nobits
 697              		.align	2
 698              		.set	.LANCHOR4,. + 0
 701              	last_time:
 702 0000 00000000 		.space	4
 703              		.section	.bss.latData,"aw",%nobits
 704              		.align	2
 707              	latData:
 708 0000 00000000 		.space	15
 708      00000000 
 708      00000000 
 708      000000
 709              		.section	.bss.longData,"aw",%nobits
 710              		.align	2
 713              	longData:
 714 0000 00000000 		.space	15
 714      00000000 
 714      00000000 
 714      000000
 715              		.section	.bss.minute,"aw",%nobits
 718              	minute:
 719 0000 00       		.space	1
 720              		.section	.bss.month,"aw",%nobits
 723              	month:
 724 0000 00       		.space	1
 725              		.section	.bss.npn_count,"aw",%nobits
 726              		.align	2
 727              		.set	.LANCHOR3,. + 0
 730              	npn_count:
 731 0000 00000000 		.space	4
 732              		.section	.bss.sAlarm,"aw",%nobits
 733              		.align	2
 736              	sAlarm:
 737 0000 00000000 		.space	8
 737      00000000 
 738              		.section	.bss.sDate,"aw",%nobits
 739              		.align	2
 742              	sDate:
 743 0000 00000000 		.space	4
 744              		.section	.bss.sTime,"aw",%nobits
 745              		.align	2
 748              	sTime:
 749 0000 000000   		.space	3
 750              		.section	.bss.sencond,"aw",%nobits
 753              	sencond:
 754 0000 00       		.space	1
 755              		.section	.bss.simMessage,"aw",%nobits
 756              		.align	2
 759              	simMessage:
 760 0000 00000000 		.space	200
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s 			page 24


 760      00000000 
 760      00000000 
 760      00000000 
 760      00000000 
 761              		.section	.bss.szBuff,"aw",%nobits
 762              		.align	2
 765              	szBuff:
 766 0000 00000000 		.space	20
 766      00000000 
 766      00000000 
 766      00000000 
 766      00000000 
 767              		.section	.bss.year,"aw",%nobits
 770              	year:
 771 0000 00       		.space	1
 772              		.section	.data.npn_flag_check,"aw"
 773              		.align	2
 774              		.set	.LANCHOR1,. + 0
 777              	npn_flag_check:
 778 0000 01000000 		.word	1
 779              		.text
 780              	.Letext0:
 781              		.file 3 "d:\\10 2021.10\\arm-none-eabi\\include\\machine\\_default_types.h"
 782              		.file 4 "d:\\10 2021.10\\arm-none-eabi\\include\\sys\\_stdint.h"
 783              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xe.h"
 784              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 785              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 786              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 787              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 788              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rtc.h"
 789              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 790              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 791              		.file 13 "Core/Inc/tim.h"
 792              		.file 14 "Core/Inc/usart.h"
 793              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 794              		.file 16 "Core/Inc/gpio.h"
 795              		.file 17 "Core/Inc/adc.h"
 796              		.file 18 "Core/Inc/spi.h"
 797              		.file 19 "Core/Inc/i2c.h"
 798              		.file 20 "Core/Inc/rtc.h"
 799              		.file 21 "Core/Inc/debug.h"
 800              		.file 22 "Core/Inc/sim4g_lte.h"
 801              		.file 23 "d:\\10 2021.10\\arm-none-eabi\\include\\string.h"
 802              		.file 24 "Core/Inc/gnss.h"
 803              		.file 25 "<built-in>"
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s 			page 25


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s:18     .rodata.HAL_UART_RxCpltCallback.str1.4:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s:22     .text.HAL_UART_RxCpltCallback:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s:28     .text.HAL_UART_RxCpltCallback:00000000 HAL_UART_RxCpltCallback
C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s:78     .text.HAL_UART_RxCpltCallback:00000024 $d
C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s:88     .text.HAL_GPIO_EXTI_Callback:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s:94     .text.HAL_GPIO_EXTI_Callback:00000000 HAL_GPIO_EXTI_Callback
C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s:177    .text.HAL_GPIO_EXTI_Callback:00000050 $d
C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s:190    .rodata.HAL_TIM_PeriodElapsedCallback.str1.4:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s:194    .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s:200    .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s:256    .text.HAL_TIM_PeriodElapsedCallback:0000002c $d
C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s:265    .text.sim_sendcmd:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s:271    .text.sim_sendcmd:00000000 sim_sendcmd
C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s:303    .text.sim_sendcmd:00000018 $d
C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s:308    .text.Error_Handler:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s:314    .text.Error_Handler:00000000 Error_Handler
C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s:346    .text.SystemClock_Config:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s:352    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s:492    .rodata.main.str1.4:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s:496    .text.main:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s:502    .text.main:00000000 main
C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s:592    .text.main:00000064 $d
C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s:759    .bss.simMessage:00000000 simMessage
C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s:713    .bss.longData:00000000 longData
C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s:707    .bss.latData:00000000 latData
C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s:634    .bss.GPSResponse:00000000 GPSResponse
C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s:694    .bss.k1:00000000 k1
C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s:654    .bss.buffchar:00000000 buffchar
C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s:660    .bss.buftest:00000000 buftest
C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s:666    .bss.check:00000000 check
C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s:770    .bss.year:00000000 year
C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s:723    .bss.month:00000000 month
C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s:683    .bss.day:00000000 day
C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s:678    .bss.date:00000000 date
C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s:688    .bss.hour:00000000 hour
C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s:718    .bss.minute:00000000 minute
C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s:753    .bss.sencond:00000000 sencond
C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s:736    .bss.sAlarm:00000000 sAlarm
C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s:742    .bss.sDate:00000000 sDate
C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s:748    .bss.sTime:00000000 sTime
C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s:648    .bss.Vehical_veloc:00000000 Vehical_veloc
C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s:701    .bss.last_time:00000000 last_time
C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s:673    .bss.current_time:00000000 current_time
C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s:641    .bss.Vehical_State:00000000 Vehical_State
C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s:730    .bss.npn_count:00000000 npn_count
C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s:777    .data.npn_flag_check:00000000 npn_flag_check
C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s:765    .bss.szBuff:00000000 szBuff
C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s:628    .bss.CardID:00000000 CardID
C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s:625    .bss.CardID:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s:631    .bss.GPSResponse:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s:637    .bss.Vehical_State:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s:644    .bss.Vehical_veloc:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s:655    .bss.buffchar:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s:657    .bss.buftest:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s:663    .bss.check:00000000 $d
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s 			page 26


C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s:669    .bss.current_time:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s:679    .bss.date:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s:684    .bss.day:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s:689    .bss.hour:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s:691    .bss.k1:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s:697    .bss.last_time:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s:704    .bss.latData:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s:710    .bss.longData:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s:719    .bss.minute:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s:724    .bss.month:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s:726    .bss.npn_count:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s:733    .bss.sAlarm:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s:739    .bss.sDate:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s:745    .bss.sTime:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s:754    .bss.sencond:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s:756    .bss.simMessage:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s:762    .bss.szBuff:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s:771    .bss.year:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s:773    .data.npn_flag_check:00000000 $d

UNDEFINED SYMBOLS
sim7672_callback
log_data
l70_callback
huart1
huart4
__aeabi_ui2f
__aeabi_fsub
__aeabi_fdiv
HAL_TIM_Base_Stop
HAL_GetTick
HAL_TIM_Base_Start_IT
htim2
sim7672_timerCallback
htim3
strlen
HAL_UART_Transmit
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
MX_GPIO_Init
MX_ADC1_Init
MX_SPI1_Init
MX_ADC2_Init
MX_TIM1_Init
MX_UART5_Init
MX_I2C1_Init
MX_SPI2_Init
MX_SPI3_Init
MX_UART4_Init
MX_USART1_UART_Init
MX_USART2_UART_Init
MX_TIM2_Init
MX_TIM3_Init
MX_RTC_Init
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccdshRgX.s 			page 27


sim7672_pwrkey
sim7672_reset
sim7672_init
HAL_UART_Receive_IT
